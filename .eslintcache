[{"C:\\git\\mslc\\mslc\\src\\index.js":"1","C:\\git\\mslc\\mslc\\src\\App.js":"2","C:\\git\\mslc\\mslc\\src\\reportWebVitals.js":"3","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AdminPanel.js":"4","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddNewStudent.js":"5","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Prices.js":"6","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Subjects.js":"7","C:\\git\\mslc\\mslc\\src\\components\\Enums\\YearGroup.js":"8","C:\\git\\mslc\\mslc\\src\\components\\Enums\\LessonType.js":"9","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Teachers.js":"10","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Days.js":"11","C:\\git\\mslc\\mslc\\src\\components\\SignIn.js":"12","C:\\git\\mslc\\mslc\\src\\components\\Auth\\LoginButton.js":"13","C:\\git\\mslc\\mslc\\src\\components\\Auth\\LogoutButton.js":"14","C:\\git\\mslc\\mslc\\src\\components\\Admin\\EditStudentLessons.js":"15","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddLessonForm.js":"16","C:\\git\\mslc\\mslc\\src\\components\\Admin\\RemoveButton.js":"17","C:\\git\\mslc\\mslc\\src\\ProtectedRoute.js":"18","C:\\git\\mslc\\mslc\\src\\components\\Auth\\InstantLogoutButton.js":"19","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Corrections.js":"20","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessons.js":"21","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditTakenLessonForm.js":"22","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessonRow.js":"23","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\AddTakenLessonForm.js":"24","C:\\git\\mslc\\mslc\\src\\components\\MyLessons.js":"25","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceTable.js":"26","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\ParentRow.js":"27","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\StudentRow.js":"28","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\pdfmaker.js":"29","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Emailing\\EmailPanel.js":"30","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Payments\\PaymentPanel.js":"31","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\MonthlyReport.js":"32","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\StudentRecords.js":"33","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddNewStudents2.js":"34","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\StudentRecordsRow.js":"35","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\ParentRecords.js":"36","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\ParentRecordsRow.js":"37","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\AddNewStudentForm.js":"38","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceTable2.js":"39","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceStatusTable.js":"40","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Teachers\\AllTeachers.js":"41","C:\\git\\mslc\\mslc\\src\\components\\NavBar.js":"42","C:\\git\\mslc\\mslc\\src\\components\\Omega\\OmegaPanel.js":"43","C:\\git\\mslc\\mslc\\src\\components\\Enums\\PaymentTypes.js":"44","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Months.js":"45","C:\\git\\mslc\\mslc\\src\\components\\Omega\\HackRegister.js":"46","C:\\git\\mslc\\mslc\\src\\components\\Omega\\EnterData.js":"47","C:\\git\\mslc\\mslc\\src\\components\\Omega\\HackLesson.js":"48","C:\\git\\mslc\\mslc\\src\\components\\Omega\\MyLessons.js":"49","C:\\git\\mslc\\mslc\\src\\components\\Omega\\Queries.js":"50","C:\\git\\mslc\\mslc\\src\\components\\Register.js":"51","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2.js":"52","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2Admin.js":"53","C:\\git\\mslc\\mslc\\src\\Helper.js":"54","C:\\git\\mslc\\mslc\\src\\components\\AllLessonsRow.js":"55","C:\\git\\mslc\\mslc\\src\\components\\BaseComponent.js":"56","C:\\git\\mslc\\mslc\\src\\components\\Enums\\InvoiceTypes.js":"57","C:\\git\\mslc\\mslc\\src\\components\\Enums\\InvoiceType.js":"58","C:\\git\\mslc\\mslc\\src\\components\\Omega\\InvoiceDetails.js":"59","C:\\git\\mslc\\mslc\\src\\components\\Omega\\PreviewInvoiceData.js":"60","C:\\git\\mslc\\mslc\\src\\components\\Omega\\PreviewSingleInvoiceData.js":"61","C:\\git\\mslc\\mslc\\src\\Constants.js":"62","C:\\git\\mslc\\mslc\\src\\components\\OldRegister.js":"63","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceReport.js":"64","C:\\git\\mslc\\mslc\\src\\Auth0\\authentication-guard.js":"65","C:\\git\\mslc\\mslc\\src\\Auth0\\page-loader.js":"66","C:\\git\\mslc\\mslc\\src\\Auth0\\callback-page.js":"67","C:\\git\\kappaClient\\kappaclient\\src\\index.js":"68","C:\\git\\kappaClient\\kappaclient\\src\\reportWebVitals.js":"69","C:\\git\\kappaClient\\kappaclient\\src\\App.js":"70","C:\\git\\kappaClient\\kappaclient\\src\\components\\NavBar.js":"71","C:\\git\\kappaClient\\kappaclient\\src\\components\\SignIn.js":"72","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AdminPanel.js":"73","C:\\git\\kappaClient\\kappaclient\\src\\components\\MyLessons.js":"74","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\EditStudentLessons.js":"75","C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\InstantLogoutButton.js":"76","C:\\git\\kappaClient\\kappaclient\\src\\components\\OldRegister.js":"77","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AddNewStudents2.js":"78","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessons.js":"79","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceStatusTable.js":"80","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceTable2.js":"81","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2Admin.js":"82","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2.js":"83","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceReport.js":"84","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\ParentRecords.js":"85","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Emailing\\EmailPanel.js":"86","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\MonthlyReport.js":"87","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Payments\\PaymentPanel.js":"88","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\StudentRecords.js":"89","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\OmegaPanel.js":"90","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Teachers\\AllTeachers.js":"91","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\HackLesson.js":"92","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\Queries.js":"93","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\PreviewInvoiceData.js":"94","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\InvoiceDetails.js":"95","C:\\git\\kappaClient\\kappaclient\\src\\Auth0\\authentication-guard.js":"96","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\HackRegister.js":"97","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\PreviewSingleInvoiceData.js":"98","C:\\git\\kappaClient\\kappaclient\\src\\components\\AllLessonsRow.js":"99","C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\LogoutButton.js":"100","C:\\git\\kappaClient\\kappaclient\\src\\Constants.js":"101","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AddLessonForm.js":"102","C:\\git\\kappaClient\\kappaclient\\src\\Helper.js":"103","C:\\git\\kappaClient\\kappaclient\\src\\components\\BaseComponent.js":"104","C:\\git\\kappaClient\\kappaclient\\src\\components\\Register.js":"105","C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\LoginButton.js":"106","C:\\git\\kappaClient\\kappaclient\\src\\Auth0\\page-loader.js":"107","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\MyLessons.js":"108","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Subjects.js":"109","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\StudentRecordsRow.js":"110","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\LessonType.js":"111","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\ParentRecordsRow.js":"112","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Corrections.js":"113","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Prices.js":"114","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\PaymentTypes.js":"115","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\YearGroup.js":"116","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Months.js":"117","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Days.js":"118","C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\InvoiceTypes.js":"119","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessonRow.js":"120","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditTakenLessonForm.js":"121","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\AddTakenLessonForm.js":"122","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\AddNewStudentForm.js":"123"},{"size":1090,"mtime":1676846825398,"results":"124","hashOfConfig":"125"},{"size":9426,"mtime":1676991736055,"results":"126","hashOfConfig":"125"},{"size":362,"mtime":499162500000,"results":"127","hashOfConfig":"125"},{"size":3771,"mtime":1676210735657,"results":"128","hashOfConfig":"125"},{"size":27194,"mtime":1620339331368,"results":"129","hashOfConfig":"130"},{"size":946,"mtime":1627931325965,"results":"131","hashOfConfig":"125"},{"size":115,"mtime":1675629057058,"results":"132","hashOfConfig":"125"},{"size":153,"mtime":1675629101299,"results":"133","hashOfConfig":"125"},{"size":89,"mtime":1657375625556,"results":"134","hashOfConfig":"125"},{"size":169,"mtime":1608062425376,"results":"135","hashOfConfig":"130"},{"size":204,"mtime":1675882464758,"results":"136","hashOfConfig":"125"},{"size":4660,"mtime":1675605256497,"results":"137","hashOfConfig":"125"},{"size":557,"mtime":1627752106095,"results":"138","hashOfConfig":"125"},{"size":337,"mtime":1624299495309,"results":"139","hashOfConfig":"125"},{"size":15862,"mtime":1675927998980,"results":"140","hashOfConfig":"125"},{"size":11993,"mtime":1676029212476,"results":"141","hashOfConfig":"125"},{"size":523,"mtime":1613919943184,"results":"142","hashOfConfig":"130"},{"size":419,"mtime":1614618854079,"results":"143","hashOfConfig":"130"},{"size":368,"mtime":1614957524133,"results":"144","hashOfConfig":"125"},{"size":194,"mtime":1675605256485,"results":"145","hashOfConfig":"125"},{"size":18351,"mtime":1675605256483,"results":"146","hashOfConfig":"125"},{"size":12608,"mtime":1642711267373,"results":"147","hashOfConfig":"125"},{"size":900,"mtime":1666914227345,"results":"148","hashOfConfig":"125"},{"size":13570,"mtime":1666914253843,"results":"149","hashOfConfig":"125"},{"size":15933,"mtime":1675605256487,"results":"150","hashOfConfig":"125"},{"size":15130,"mtime":1620252832747,"results":"151","hashOfConfig":"130"},{"size":909,"mtime":1622794635890,"results":"152","hashOfConfig":"130"},{"size":2547,"mtime":1619897020110,"results":"153","hashOfConfig":"130"},{"size":647,"mtime":1618596425534,"results":"154","hashOfConfig":"130"},{"size":11978,"mtime":1666913118869,"results":"155","hashOfConfig":"125"},{"size":21972,"mtime":1666914299183,"results":"156","hashOfConfig":"125"},{"size":8109,"mtime":1666914270086,"results":"157","hashOfConfig":"125"},{"size":6308,"mtime":1657373436940,"results":"158","hashOfConfig":"125"},{"size":29272,"mtime":1676657405068,"results":"159","hashOfConfig":"125"},{"size":9552,"mtime":1642711267373,"results":"160","hashOfConfig":"125"},{"size":5014,"mtime":1666914276233,"results":"161","hashOfConfig":"125"},{"size":9769,"mtime":1666914282127,"results":"162","hashOfConfig":"125"},{"size":5923,"mtime":1666914264803,"results":"163","hashOfConfig":"125"},{"size":47128,"mtime":1644946797767,"results":"164","hashOfConfig":"125"},{"size":21968,"mtime":1666914385882,"results":"165","hashOfConfig":"125"},{"size":11366,"mtime":1666914208382,"results":"166","hashOfConfig":"125"},{"size":2368,"mtime":1675605256488,"results":"167","hashOfConfig":"125"},{"size":4250,"mtime":1675605256492,"results":"168","hashOfConfig":"125"},{"size":190,"mtime":1635533160265,"results":"169","hashOfConfig":"125"},{"size":238,"mtime":1625846379225,"results":"170","hashOfConfig":"125"},{"size":3095,"mtime":1675605256490,"results":"171","hashOfConfig":"125"},{"size":37373,"mtime":1659056909064,"results":"172","hashOfConfig":"173"},{"size":3116,"mtime":1675605256489,"results":"174","hashOfConfig":"125"},{"size":11495,"mtime":1642711267376,"results":"175","hashOfConfig":"125"},{"size":8739,"mtime":1667138806600,"results":"176","hashOfConfig":"125"},{"size":38171,"mtime":1675605256495,"results":"177","hashOfConfig":"125"},{"size":40000,"mtime":1675605256482,"results":"178","hashOfConfig":"125"},{"size":24000,"mtime":1667252737061,"results":"179","hashOfConfig":"125"},{"size":276,"mtime":1665310614887,"results":"180","hashOfConfig":"125"},{"size":1126,"mtime":1666914194651,"results":"181","hashOfConfig":"125"},{"size":997,"mtime":1676904712433,"results":"182","hashOfConfig":"125"},{"size":120,"mtime":1675605256486,"results":"183","hashOfConfig":"125"},{"size":185,"mtime":1619906072514,"results":"184","hashOfConfig":"125"},{"size":3639,"mtime":1675605256491,"results":"185","hashOfConfig":"125"},{"size":5747,"mtime":1675605256493,"results":"186","hashOfConfig":"125"},{"size":2784,"mtime":1675605256494,"results":"187","hashOfConfig":"125"},{"size":86,"mtime":1675605256475,"results":"188","hashOfConfig":"125"},{"size":36285,"mtime":1676917907254,"results":"189","hashOfConfig":"125"},{"size":7453,"mtime":1676659823867,"results":"190","hashOfConfig":"125"},{"size":497,"mtime":1676917491067,"results":"191","hashOfConfig":"125"},{"size":255,"mtime":1676818161327,"results":"192","hashOfConfig":"125"},{"size":915,"mtime":1676842385770,"results":"193","hashOfConfig":"125"},{"size":1127,"mtime":1677248412945,"results":"194","hashOfConfig":"195"},{"size":362,"mtime":499162500000,"results":"196","hashOfConfig":"195"},{"size":9696,"mtime":1677236809092,"results":"197","hashOfConfig":"195"},{"size":2375,"mtime":1677101498553,"results":"198","hashOfConfig":"195"},{"size":3953,"mtime":1677098290653,"results":"199","hashOfConfig":"195"},{"size":3771,"mtime":1676210735657,"results":"200","hashOfConfig":"195"},{"size":16114,"mtime":1677137782000,"results":"201","hashOfConfig":"195"},{"size":15862,"mtime":1675927998980,"results":"202","hashOfConfig":"195"},{"size":368,"mtime":1614957524133,"results":"203","hashOfConfig":"195"},{"size":36236,"mtime":1677136881136,"results":"204","hashOfConfig":"195"},{"size":29272,"mtime":1676657405068,"results":"205","hashOfConfig":"195"},{"size":18351,"mtime":1675605256483,"results":"206","hashOfConfig":"195"},{"size":21968,"mtime":1666914385882,"results":"207","hashOfConfig":"195"},{"size":47128,"mtime":1644946797767,"results":"208","hashOfConfig":"195"},{"size":24000,"mtime":1667252737061,"results":"209","hashOfConfig":"195"},{"size":40000,"mtime":1675605256482,"results":"210","hashOfConfig":"195"},{"size":7453,"mtime":1676659823867,"results":"211","hashOfConfig":"195"},{"size":5014,"mtime":1666914276233,"results":"212","hashOfConfig":"195"},{"size":11978,"mtime":1666913118869,"results":"213","hashOfConfig":"195"},{"size":8109,"mtime":1666914270086,"results":"214","hashOfConfig":"195"},{"size":21972,"mtime":1666914299183,"results":"215","hashOfConfig":"195"},{"size":5942,"mtime":1677247708025,"results":"216","hashOfConfig":"195"},{"size":4250,"mtime":1675605256492,"results":"217","hashOfConfig":"195"},{"size":11366,"mtime":1666914208382,"results":"218","hashOfConfig":"195"},{"size":3116,"mtime":1675605256489,"results":"219","hashOfConfig":"195"},{"size":8739,"mtime":1667138806600,"results":"220","hashOfConfig":"195"},{"size":5747,"mtime":1675605256493,"results":"221","hashOfConfig":"195"},{"size":3639,"mtime":1675605256491,"results":"222","hashOfConfig":"195"},{"size":497,"mtime":1677236451970,"results":"223","hashOfConfig":"195"},{"size":3095,"mtime":1675605256490,"results":"224","hashOfConfig":"195"},{"size":2784,"mtime":1675605256494,"results":"225","hashOfConfig":"195"},{"size":1126,"mtime":1666914194651,"results":"226","hashOfConfig":"195"},{"size":337,"mtime":1624299495309,"results":"227","hashOfConfig":"195"},{"size":86,"mtime":1675605256475,"results":"228","hashOfConfig":"195"},{"size":11993,"mtime":1676029212476,"results":"229","hashOfConfig":"195"},{"size":276,"mtime":1665310614887,"results":"230","hashOfConfig":"195"},{"size":997,"mtime":1677136862014,"results":"231","hashOfConfig":"195"},{"size":38171,"mtime":1675605256495,"results":"232","hashOfConfig":"195"},{"size":557,"mtime":1627752106095,"results":"233","hashOfConfig":"195"},{"size":255,"mtime":1676818161327,"results":"234","hashOfConfig":"195"},{"size":11495,"mtime":1642711267376,"results":"235","hashOfConfig":"195"},{"size":115,"mtime":1675629057058,"results":"236","hashOfConfig":"195"},{"size":9552,"mtime":1642711267373,"results":"237","hashOfConfig":"195"},{"size":89,"mtime":1657375625556,"results":"238","hashOfConfig":"195"},{"size":9769,"mtime":1666914282127,"results":"239","hashOfConfig":"195"},{"size":194,"mtime":1675605256485,"results":"240","hashOfConfig":"195"},{"size":946,"mtime":1627931325965,"results":"241","hashOfConfig":"195"},{"size":190,"mtime":1635533160265,"results":"242","hashOfConfig":"195"},{"size":153,"mtime":1675629101299,"results":"243","hashOfConfig":"195"},{"size":238,"mtime":1625846379225,"results":"244","hashOfConfig":"195"},{"size":204,"mtime":1675882464758,"results":"245","hashOfConfig":"195"},{"size":120,"mtime":1675605256486,"results":"246","hashOfConfig":"195"},{"size":900,"mtime":1666914227345,"results":"247","hashOfConfig":"195"},{"size":12608,"mtime":1642711267373,"results":"248","hashOfConfig":"195"},{"size":13570,"mtime":1666914253843,"results":"249","hashOfConfig":"195"},{"size":5923,"mtime":1666914264803,"results":"250","hashOfConfig":"195"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"254"},"1q1wwrm",{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ut6kwp",{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"254"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"254"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"254"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"254"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"254"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"254"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"254"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"254"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"254"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"254"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"318"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"329"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"254"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"254"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"254"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"254"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"254"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"254"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"254"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"254"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"254"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"254"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"254"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rg2m1h",{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"254"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"254"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"254"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"254"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":1,"source":"391","usedDeprecatedRules":"254"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"254"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"254"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"254"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"254"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"254"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"254"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"254"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1molp71",{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"434"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"434"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"434"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"434"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"434"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"434"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"434"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"434"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"434"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":1,"source":"391","usedDeprecatedRules":"434"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"434"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"434"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"434"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"434"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"434"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"434"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"434"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"434"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"434"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"434"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"434"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"434"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"434"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"434"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"434"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"434"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"434"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"434"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"434"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"434"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"434"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"434"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},"C:\\git\\mslc\\mslc\\src\\index.js",["548","549","550","551"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nconst REACT_APP_AUTH_DOMAIN = process.env.REACT_APP_AUTH_DOMAIN\nconst REACT_APP_AUTH_CLIENT_ID = process.env.REACT_APP_AUTH_CLIENT_ID\nconst redirectUri = process.env.REACT_APP_AUTH_CALLBACK_URL;\nconst audience = process.env.REACT_APP_AUTH_AUDIENCE;\nReactDOM.render(\n  \n  <React.StrictMode>\n    <Auth0Provider\n    \n     domain={\"dev-v1noi5f2d6l6x0ed.us.auth0.com\"}\n     clientId={\"u5oMKAuhMSJJ9KGeO1krUXE6HYgSLHfG\"}\n     redirectUri={window.location.origin}   \n    audience={\"https://mynettutor.com\"}\n    scope={\"read:messages\"}\n      \n  \n     >\n      \n       <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["552","553"],"C:\\git\\mslc\\mslc\\src\\App.js",["554","555","556"],"C:\\git\\mslc\\mslc\\src\\reportWebVitals.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\AdminPanel.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddNewStudent.js",["557","558","559","560","561","562","563","564","565","566"],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\Prices.js",["567"],"\r\nconst Prices = new Object();\r\n\r\n//ks3\r\nPrices[\"3GE\"] = 15\r\nPrices[\"3OE\"] = 20\r\n\r\nPrices[\"3GM\"] = 15\r\nPrices[\"3OM\"] = 20\r\n\r\nPrices[\"3GS\"] = 15\r\nPrices[\"3OS\"] = 20\r\n\r\n//alevel\r\n\r\nPrices[\"AG1\"] = 22.5 // Economics\r\nPrices[\"AO1\"] = 30 // Economics\r\n\r\nPrices[\"AGE\"] = 22.5\r\nPrices[\"AOE\"] = 30\r\n\r\nPrices[\"AGM\"] = 22.5\r\nPrices[\"AOM\"] = 30\r\n\r\nPrices[\"AGP\"] = 22.5\r\nPrices[\"AOP\"] = 30\r\n\r\nPrices[\"AOB\"] = 30\r\nPrices[\"AGB\"] = 22.5\r\n\r\nPrices[\"AOC\"] = 30\r\nPrices[\"AGC\"] = 22.5\r\n\r\n\r\n//gcse\r\n\r\n\r\nPrices[\"GGM\"] = 17.5\r\nPrices[\"GOM\"] = 22.5\r\n\r\nPrices[\"GOE\"] = 22.5\r\nPrices[\"GGE\"] = 17.5\r\n\r\nPrices[\"GOS\"] = 22.5\r\nPrices[\"GGS\"] = 17.5\r\n\r\n//ks1\r\nPrices[\"1GE\"] = 12.5\r\nPrices[\"1OE\"] = 17.5\r\n\r\nPrices[\"1OS\"] = 17.5\r\nPrices[\"1GS\"] = 12.5\r\n\r\nPrices[\"1OM\"] = 17.5\r\nPrices[\"1GM\"] = 12.5\r\n\r\n\r\n//ks2\r\n\r\nPrices[\"2GM\"] = 12.5\r\nPrices[\"2OM\"] = 17.5\r\n\r\nPrices[\"2GS\"] = 12.5\r\nPrices[\"2OS\"] = 17.5\r\n\r\nPrices[\"2GE\"] = 12.5\r\nPrices[\"2OE\"] = 17.5\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Prices","C:\\git\\mslc\\mslc\\src\\components\\Enums\\Subjects.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\YearGroup.js",["568"],"import LessonType from './LessonType'\r\nconst YearGroups = [\r\n    \"1KS\",\r\n    \"2KS\",\r\n    \"3KS\",\r\n    \"GCSE\",\r\n    \"ALevel\"]\r\n\r\nexport default YearGroups;","C:\\git\\mslc\\mslc\\src\\components\\Enums\\LessonType.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\Teachers.js",["569"],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\Days.js",["570"],"const Days = new Object();\r\nDays[0] = \"Sunday\";\r\nDays[1] = \"Monday\"\r\nDays[2] = \"Tuesday\";\r\nDays[3] = \"Wednesday\";\r\nDays[4] = \"Thursday\";\r\nDays[5] = \"Friday\";\r\nDays[6] = \"Saturday\";\r\n\r\nexport default Days;","C:\\git\\mslc\\mslc\\src\\components\\SignIn.js",["571","572","573","574"],"import React,{Component} from 'react'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { Redirect , withRouter} from 'react-router-dom';\r\nimport { css } from \"@emotion/react\";\r\nimport Loader from \"react-spinners/HashLoader\";\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\nclass SignIn extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            gid:null,\r\n            redirect:false,\r\n            jwt:null,\r\n            fetchError:null,\r\n            foods:[],\r\n            user: this.props.user,\r\n            showGame: false\r\n     \r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n     getJwt = async (obj) => {\r\n        const { data } = await axios.get('/api/jwt?gid='+obj.googleId);\r\n        localStorage.setItem('token', data.token);\r\n        console.log(data.token)\r\n        if(data.token == 0){\r\n          \r\n          alert('intruder reported')\r\n        }\r\n        this.setState({jwt:data.token});\r\n      };\r\n\r\n      onSuccessfulSignIn = (obj) => {\r\n        this.getJwt(obj);\r\n        \r\n      }\r\n      onFailedSignIn = () =>{}\r\n\r\n       getFoods = async () => {\r\n        try {\r\n          const { data } = await axios.get('/api/foods');\r\n          this.setState({foods:data})\r\n          \r\n        } catch (err) {\r\n          this.setState({fetchError:err.message})\r\n        }\r\n      };\r\n\r\n    componentDidMount = ()=>{\r\n\r\n\r\n      this.props.setErrorMessage(\"test\")\r\n\r\n      console.log(this.props.user)\r\n\r\n        axios.interceptors.request.use(\r\n            config => {\r\n              const { origin } = new URL('http://localhost:3000'+config.url);\r\n        \r\n              const allowedOrigins = ['http://localhost:3000'];\r\n              const token = localStorage.getItem('token');\r\n              \r\n              if (allowedOrigins.includes(origin)) {\r\n           \r\n                config.headers.authorization = `Bearer ${token}`;\r\n              }\r\n              return config;\r\n            },\r\n            error => {\r\n              return Promise.reject(error);\r\n            }\r\n          );\r\n    }\r\n\r\n    updateKey = (e) =>{\r\n        this.setState({gid:e.target.value})\r\n    }\r\n\r\n    logIn = async (e) =>{\r\n        var str = \"/api/verify-teacher?gid=\"+this.state.gid\r\n\r\n\r\n        await axios.get(str)\r\n        .then(async response => {\r\n            var code = response.data\r\n            if(code == 200){\r\n               \r\n                this.setState({redirect:true})\r\n            \r\n            }else if(code == 403){\r\n\r\n                alert('Congratulations, you played yourself')\r\n\r\n            }else{\r\n                alert('why')\r\n            }\r\n            \r\n\r\n        });  \r\n\r\n    }\r\n\r\n    toggleGame = () =>{\r\n      this.setState({showGame: !this.state.showGame})\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to='/EnterData'/>;\r\n          }\r\n\r\n        return(\r\n            <div  >\r\n        \r\n            <div className=\"container\">\r\n \r\n              {/* <div class=\"blink-me\" style={{color: 'red'}}>\r\n                <strong>Admin Alert:</strong> Data Scrubbing {Math.round(((new Date(2022,10,25))-(new Date()))/(1000*60*60*24)) } days\r\n              </div>  */}\r\n{/* \r\n              {\r\n                    this.props.user?.nickname?.role != 1 && this.props.user?.nickname?.role != null ?\r\n                        <div className=\"game-text\">\r\n                           <strong className='mr-3'>Has your student cancelled?</strong><button className='btn btn-primary mt-0 mb-0' onClick={()=>{this.toggleGame()}}> {!this.state.showGame? \"Click here\": \"back\"}</button>\r\n                        </div>\r\n                    :null\r\n                } */}\r\n\r\n              {!this.state.showGame?\r\n                      <div  style={{marginTop:'150px'}} >\r\n                      <div id=\"HomepageTitle\" className=\"card-body\" >\r\n                      <Loader color={'#007bff'} loading={true} css={override} size={40} />  \r\n\r\n                      <h1>{this.props.user? \"Hi \"+this.props.user.nickname.fullName+ \"!\": \"Otter\"} </h1>\r\n\r\n\r\n                      {/* <div class=\"card card-body bg-primary mt-3\">\r\n\r\n                      </div> */}                   \r\n\r\n\r\n                      </div>\r\n\r\n\r\n                      </div>\r\n                      :null\r\n              }\r\n               \r\n\r\n              \r\n\r\n            <div >\r\n                   \r\n            </div>\r\n\r\n            </div>\r\n                \r\n                    \r\n            \r\n              \r\n           \r\n\r\n      \r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SignIn;","C:\\git\\mslc\\mslc\\src\\components\\Auth\\LoginButton.js",["575","576"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect ,user,isAuthenticated, isLoading } = useAuth0();\r\nif(isAuthenticated){\r\n  \r\n \r\n  setToken(user.nickname.token)\r\n\r\n  return  null\r\n}\r\n  return <button className=\"btn btn-outline-primary\" onClick={() => loginWithRedirect()}>Log In</button>;\r\n};\r\n\r\nasync function  setToken (token)  {\r\n  \r\n  localStorage.setItem('token', token);\r\n\r\n  if(token == 0){\r\n    alert('intruder reported')\r\n  }\r\n  \r\n}\r\n\r\nexport default LoginButton;","C:\\git\\mslc\\mslc\\src\\components\\Auth\\LogoutButton.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\EditStudentLessons.js",["577","578","579"],"import {Component} from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios'\r\nimport AddLessonForm from './AddLessonForm'\r\nimport qs from 'qs'\r\nimport BaseComponent from '../BaseComponent';\r\nimport Subjects from '../Enums/Subjects';\r\nimport LessonTypes from '../Enums/LessonType';\r\nclass EditStudentLessons extends BaseComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {students:null,\r\n            filteredStudents:null,\r\n            chosenStudent:null,\r\n            chosenStudentIndex:null,\r\n            chosenStudentLessons:[],\r\n            chosenStudentLessonsToAdd:[],\r\n            chosenStudenLessonsToRemove:[],\r\n            chosenSubject:null,\r\n            chosenLessonType:null,\r\n            selected:false,\r\n            disableSearch:false,\r\n            showAddLessonModal:false,\r\n            showSaveModal:false,  \r\n            copyLesson:null,  \r\n            teachers:null,        \r\n            options :{ authorization: this.props.token,userid:this.props.userId }          \r\n          \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.getAllTeachers();\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var sid = queryString.id? queryString.id : null\r\n\r\n        if(sid != null){\r\n           \r\n            await   this.getStudent(sid)\r\n\r\n           \r\n           await this.select()\r\n        }\r\n      await  this.getAllStudents();\r\n\r\n       \r\n    \r\n\r\n    }\r\n\r\n    getAllTeachers = async  () => {\r\n                 \r\n        await axios.get('/api/teacher')\r\n        .then(async response => {\r\n             var teachers = await response.data;\r\n             console.log(teachers)\r\n             this.setState({teachers:teachers})\r\n           \r\n         \r\n        });\r\n    }\r\n\r\n    getStudent = async (sid) =>{\r\n        await axios.get('/api/student/'+sid)\r\n        .then(async response => {\r\n             var student = await response.data[0];\r\n             this.setState({chosenStudent:student})\r\n\r\n             console.log(this.state.chosenStudent)\r\n         \r\n        });\r\n    }\r\n\r\n    copyLesson = (id)=>{\r\n        var lessons  = this.state.chosenStudentLessons.filter((a)=>a._id === id);\r\n\r\n\r\n        this.setState({copyLesson:lessons[0]});\r\n        console.log(lessons[0])\r\n        this.toggleAddLessonModal()\r\n    }\r\n\r\n\r\n\r\n    getAllStudents = async  () => {\r\n                 \r\n        await axios.get('/api/student',{headers:this.state.options})\r\n        .then(async response => {\r\n             var students = await response.data;\r\n             console.log(students);\r\n             this.setState({students:students})\r\n             this.setState({filteredStudents:students})\r\n         \r\n        });\r\n    }\r\n\r\n    filter = (e) =>{\r\n        this.setState({selected:false})\r\n        var allStudents = this.state.students;\r\n        var value = e.target.value.toString().toLowerCase();\r\n        var filteredStudents = allStudents.filter((a)=>\r\n         a.firstName.toString().toLowerCase().includes(value) ||\r\n         a._id.toString().toLowerCase().includes(value) ||\r\n         a.lastName.toString().toLowerCase().includes(value)\r\n        )\r\n\r\n        this.setState({filteredStudents:filteredStudents})\r\n  \r\n    }\r\n\r\n    selectRow = (index)=>{\r\n        var chosenStudent = this.state.filteredStudents[index]\r\n        this.setState({chosenStudentIndex:index})\r\n        this.setState({chosenStudent:chosenStudent})\r\n        this.setState({selected:false})\r\n        \r\n    }\r\n select = async (e)=>{\r\n    console.log(this.state.chosenStudent)\r\n        if(this.state.chosenStudent !=null){\r\n            if(!this.state.selected){\r\n            \r\n            this.setState({selected:true})\r\n            await axios.get('/api/lesson/student/'+this.state.chosenStudent._id)\r\n                .then(async response =>{\r\n                        var data = response.data;\r\n                        console.log(data)\r\n                        this.setState({chosenStudentLessons:data})\r\n                })\r\n            }else{\r\n                alert('already selected')  \r\n            }\r\n        }else{\r\n            alert('no student selected')\r\n        }\r\n    }\r\n\r\n    refreshLesson = async () =>{\r\n        await this.setState({chosenStudentLessons:[]})\r\n        await axios.get('/api/lesson/student/'+this.state.chosenStudent._id)\r\n        .then(async response =>{\r\n                var data = await response.data;\r\n                await this.setState({chosenStudentLessons:data})\r\n                await this.setState({chosenStudentLessonsToAdd:[]})\r\n        })\r\n    }\r\n\r\n    setDate = async (date) =>{\r\n        await this.setState({dayOfWeek:date.getDay()})\r\n        await this.setState({chosenDate:date})\r\n      \r\n    }\r\n\r\n    back = (e)=>{\r\n        this.setState({selected:false})\r\n        this.setState({chosenStudentLessonsToAdd:[]})\r\n    }\r\n    \r\n    addLesson = async  (e) =>{\r\n        this.setState({copyLesson: null})\r\n        this.toggleAddLessonModal(e)\r\n    }\r\n\r\n    toggleAddLessonModal = (e) =>{\r\n        this.setState({showAddLessonModal:!this.state.showAddLessonModal})\r\n\r\n    }\r\n    toggleSaveModal = (e) =>{\r\n        this.setState({showSaveModal:!this.state.showSaveModal})\r\n    }\r\n    saveChanges = async (e)=>{\r\n        \r\n        if(this.state.chosenStudentLessonsToAdd?.length === 0 && this.state.chosenStudenLessonsToRemove?.length == 0){\r\n            alert('no changes')\r\n        }\r\n       \r\n        if(this.state.chosenStudentLessonsToAdd.length>0){\r\n            await this.state.chosenStudentLessonsToAdd.map(async (lesson,index)=>{\r\n\r\n                var response = await this.sendApiRequest('/api/lessons', {lesson:lesson,headers:this.state.options})\r\n                                \r\n            })\r\n        }\r\n         \r\n        if(this.state.chosenStudenLessonsToRemove.length >0){\r\n            await this.state.chosenStudenLessonsToRemove.map(async (id,index)=>{\r\n                \r\n         \r\n\r\n\r\n\r\n                var lessonApiStr = await '/api/lessons/delete?id='+id.toString()\r\n     \r\n                 await axios.delete(lessonApiStr,{headers:this.state.options})\r\n                .then(response => {\r\n                     this.refreshLesson()\r\n                 \r\n              });\r\n            })\r\n\r\n        }\r\n\r\n            \r\n   \r\n\r\n        this.toggleSaveModal();\r\n        await this.refreshLesson()\r\n       \r\n        \r\n\r\n    }\r\n    removeExistingLesson = async (e,index) =>{\r\n      \r\n        if (index > -1) {\r\n\r\n            var lessons = await this.state.chosenStudentLessons\r\n            var lesson = await lessons[index]\r\n            if(lesson.remove){\r\n                lesson.remove = await false\r\n            }else{\r\n              \r\n                lesson.remove = await true\r\n            }      \r\n               \r\n            var lessonsToRemove = await this.state.chosenStudenLessonsToRemove\r\n            await lessonsToRemove.push(lesson._id)\r\n            await this.setState({chosenStudenLessonsToRemove:lessonsToRemove});\r\n        \r\n            await this.setState({chosenStudentLessons:lessons})\r\n          }\r\n\r\n         await console.log(this.state.chosenStudentLessons)\r\n\r\n    }\r\n    removeAddedLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.chosenStudentLessonsToAdd;\r\n           lessons.splice(index,1);\r\n           \r\n         \r\n            this.setState({chosenStudentLessonsToAdd:lessons})\r\n          }\r\n\r\n    }\r\n\r\n    resetCopyLesson = (e) =>{\r\n        this.setState({copyLesson: null})\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"EditLessons\" className=\"container \">\r\n                <div >\r\n                   <h1 className=\"mt-2\">Edit Student Lessons</h1>\r\n                </div>\r\n                {\r\n                    this.state.filteredStudents?\r\n\r\n                    <div class=\"form-group m-3\">\r\n                    <label >Student Name / ID</label>\r\n                    <input disabled={this.state.selected} class=\"form-control\"\r\n                        placeholder={this.state.chosenStudent?this.state.chosenStudent.firstName.toString():\"Enter student name / id\"}\r\n                        onChange = {this.filter}\r\n                        \r\n                        ></input>\r\n                    </div>\r\n                    \r\n                    :null\r\n                }\r\n\r\n                {\r\n                    this.state.filteredStudents?\r\n\r\n                    <div className=\"row m-3 \">\r\n                    {this.state.selected?\r\n                     <div className=\"col\">\r\n                        <button className=\"btn btn-danger m-1\" onClick={this.back}>Back</button>\r\n                     </div>\r\n                    :\r\n                    <div className=\"col\">\r\n                    <button className=\"btn btn-success m-1\" onClick={this.select}>Select</button>\r\n                </div>\r\n                    }              \r\n      \r\n                    </div>\r\n                    \r\n                    :null\r\n                }\r\n                \r\n                <div>\r\n                    <table className=\"table table-hover table-dark rounded\">\r\n                        <tbody>\r\n                    {this.state.filteredStudents?\r\n                        !this.state.selected?\r\n                        this.state.filteredStudents.map((item,index)=>(\r\n                            <tr style={this.state.chosenStudentIndex === index? {background:'orangered'} :null} className=\"clickable-row table-row\" onClick={()=>{this.selectRow(index)}}>\r\n                                <td>{item.firstName}</td>\r\n                                <td>{item.lastName}</td>\r\n                                <td>{item._id}</td>\r\n                            </tr>\r\n\r\n                        )):\r\n                   \r\n                            <tr style={{background:'orangered'}} className=\"clickable-row table-row\">\r\n                                <td>{this.state.chosenStudent.firstName}</td>\r\n                                <td>{this.state.chosenStudent.lastName}</td>\r\n                                <td>{this.state.chosenStudent._id}</td>\r\n                            </tr>\r\n\r\n               \r\n\r\n                    :null}\r\n                    </tbody>\r\n                    </table>\r\n\r\n                            \r\n                </div>\r\n               \r\n               \r\n            {\r\n                this.state.selected?\r\n                <div>\r\n                    <h3 class=\"title m-3\">Lessons For Selected Student</h3>\r\n                    <div class=\"m-3\">\r\n                        <button className=\"btn btn-success m-1\" onClick={this.addLesson} >Add Lesson</button>\r\n                        <button className=\"btn btn-primary m-1\" onClick={this.toggleSaveModal}>Save Changes</button>\r\n                    </div>\r\n                    {this.state.chosenStudentLessons != null && this.state.chosenStudentLessons.length >0?\r\n                        <div>\r\n                            <table className=\"table table-responsive table-light rounded\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Subject</th>\r\n                                    <th scope=\"col\">Rate key</th>\r\n                                    <th scope=\"col\">Day</th>\r\n                                    <th scope=\"col\">SingleFee</th>\r\n                                    <th scope=\"col\">SinglePay</th>\r\n                                    <th scope=\"col\">Copy</th>\r\n                                    <th scope=\"col\">GroupFee</th>\r\n                                    <th scope=\"col\">GroupPay</th>\r\n                                    <th scope=\"col\">teacher</th>\r\n                                    <th scope=\"col\">Start date</th>\r\n                                    <th scope=\"col\">End date</th>\r\n                                    <th scope=\"col\">-</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    \r\n                                    {this.state.chosenStudentLessons.length>0?\r\n                                    \r\n                                        this.state.chosenStudentLessons.map((item,index)=>(\r\n                                            //style={item.remove == true? {background:'red'}:null, (item.isCoverLesson && item.endDate < new Date())?{background:'lightblue'}:null}\r\n                                            <tr style={{background:item.remove?'red':new Date(item.endDate) < new Date()?'orange':'none'}} >\r\n                                            <td>{item._id}</td>\r\n                                            <td>{Subjects[item.subject]}</td>\r\n                                            <td>{LessonTypes[item.lessonType]}</td>                                        \r\n                                            <td>{item.day}</td>\r\n                                            <td>{item.singleFee}</td>\r\n                                            <td>{item.singlePay}</td>\r\n                                            <td><button className=\"btn btn-warning\" onClick={(e)=>this.copyLesson(item._id)} >Copy</button></td>\r\n                                            <td>{item.groupFee}</td>\r\n                                            <td>{item.groupPay}</td>\r\n                                            <td>{item.teacher}</td>\r\n                                            <td>{item.startDate}</td>\r\n                                            <td>{item.endDate}</td>\r\n                                            <td><button className=\"btn btn-danger\"\r\n                                                onClick={(e)=>this.removeExistingLesson(e,index)}\r\n                                            >X</button></td>\r\n\r\n                                        </tr>\r\n\r\n                                    )):null}\r\n                                  \r\n                                </tbody>\r\n                            </table>\r\n                         </div>   \r\n                \r\n                    :null}               \r\n                \r\n                       \r\n\r\n                </div>\r\n\r\n              \r\n                :null\r\n            }\r\n\r\n            <Modal isOpen={this.state.showAddLessonModal} toggle={this.toggleAddLessonModal} >\r\n                <ModalHeader >Add Lesson</ModalHeader>\r\n              \r\n                    <AddLessonForm \r\n                        options={ this.state.options }\r\n                        student={this.state.chosenStudent}\r\n                        lessonsToAdd={this.state.chosenStudentLessonsToAdd}\r\n                        showAddLessonModal={this.state.showAddLessonModal}\r\n                        toggleAddLessonModal={this.toggleAddLessonModal}\r\n                        copyLesson ={this.state.copyLesson}\r\n                        resetCopyLesson = {this.resetCopyLesson}\r\n                     />\r\n           \r\n             \r\n            </Modal>\r\n\r\n            <Modal isOpen={this.state.showSaveModal} toggle={this.toggleSaveModal} >\r\n                <ModalHeader >You are about to Save your changes</ModalHeader>\r\n              \r\n                <ModalBody>    \r\n                    <div>\r\n                        please make sure you have reviewed and are happy with your changes\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.saveChanges}>Save</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.toggleSaveModal}>Cancel</Button>\r\n                </ModalFooter>\r\n             \r\n            </Modal>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditStudentLessons\r\n","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddLessonForm.js",["580","581","582"],"\r\nimport React, {Component} from 'react'\r\nimport { Button, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Prices from '../Enums/Prices'\r\nimport Subjects from '../Enums/Subjects'\r\nimport LessonTypes from '../Enums/LessonType'\r\nimport Days from '../Enums/Days'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nimport Constants from '../../Constants';\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\nclass AddLessonForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n\r\n\r\n            newLesson: this.props.copyLesson,\r\n            chosenSubject:null,\r\n            chosenLessonType:null,\r\n            chosenSinglePay:null,\r\n            chosenSingleFee:null,\r\n            chosenGroupPay:null,\r\n            chosenGroupFee:null,\r\n            chosenDayOfWeek:null,\r\n            chosenStartDate:null,\r\n            chosenEndDate:null,\r\n            chosenTeacher:null,\r\n            \r\n\r\n            student:this.props.student,\r\n            subjects:Subjects,\r\n            lessonTypes:LessonTypes,\r\n            prices:Prices,\r\n            days:Days,\r\n            teachers:null,\r\n            chosenFeeAdj:0,\r\n            chosenPayAdj:0,\r\n            yearGroup:this.props.student.yearGroup?.toString(),\r\n            price:null,\r\n            \r\n            isCoverLesson:false,\r\n            startDate:null,\r\n            lessonsToAdd:[],\r\n            code:null,\r\n            rate:null,\r\n            \r\n            options :this.props.options,\r\n            previousTeacher:null,\r\n            copyLesson: this.props.copyLesson,\r\n\r\n            groupRateKey: null,\r\n            singleRateKey: null,\r\n            groupPrice:null,\r\n            singlePrice:null,\r\n            groupRate:null,\r\n            singleRate:null,\r\n            lessonType:null,\r\n            subject: null\r\n\r\n\r\n\r\n        }\r\n    }\r\n    componentDidMount  = async ()=>{\r\n        await this.getAllTeachers();\r\n        var copyLesson =this.props.copyLesson;  \r\n        console.log(copyLesson)\r\n        if(copyLesson != null)\r\n        {\r\n            this.setState({chosenSubject: copyLesson.subject})\r\n            this.setState({chosenLessonType:copyLesson.lessonType})\r\n\r\n            this.setState({chosenSinglePay:copyLesson.singlePay})\r\n            this.setState({chosenSingleFee:copyLesson.singleFee})\r\n            this.setState({chosenGroupPay:copyLesson.groupPay})\r\n            this.setState({chosenGroupFee:copyLesson.groupFee})\r\n\r\n            this.setState({chosenDayOfWeek:copyLesson.day})\r\n            this.setState({startDate:copyLesson.startDate})\r\n            this.setState({endDate:copyLesson.endDate})\r\n            this.setState({chosenTeacher:copyLesson.teacherId})\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    calculateRate = async () =>{\r\n\r\n    }\r\n\r\n    getAllTeachers = async  () => {\r\n                 \r\n        await axios.get('/api/teacher',{headers:this.state.options})\r\n        .then(async response => {\r\n             var teachers = await response.data;\r\n        \r\n             this.setState({teachers:teachers})\r\n           \r\n         \r\n        });\r\n    }\r\n\r\n    addLesson = async (e)=>{\r\n\r\n        var newLesson = {\r\n            teacherId:parseInt(this.state.chosenTeacher),\r\n            subject:parseInt(this.state.chosenSubject),         \r\n            studentId:parseInt(this.props.student._id),            \r\n            day:parseInt(this.state.chosenDayOfWeek),\r\n            startDate:formatDate(this.state.chosenStartDate),\r\n            endDate:formatDate(this.state.chosenEndDate),\r\n            groupFee:parseFloat(this.state.chosenGroupFee),\r\n            groupPay:parseFloat(this.state.chosenGroupPay),\r\n            singleFee:parseInt(this.state.chosenSingleFee),\r\n            singlePay:parseInt(this.state.chosenSinglePay),\r\n            lessonType:0      \r\n        }  \r\n        \r\n        console.log(newLesson)\r\n\r\n         await axios.post('/api/lesson/add',newLesson)\r\n        .then(async response => {\r\n             console.log(response)\r\n         \r\n        });\r\n       \r\n\r\n        \r\n    }\r\n\r\n    cancel = (e)=>{\r\n        this.props.resetCopyLesson()\r\n        this.props.toggleAddLessonModal()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ModalBody>\r\n                <form> \r\n                <div><strong>Note:</strong> pay and fee adjustments are reset to 0 when copying a lesson</div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Subject - {Subjects[this.props.copyLesson?.subject]}</label>                   \r\n                    <select \r\n                        class=\"form-control\" \r\n                        id=\"exampleFormControlSelect1\" \r\n                        onChange={(e)=> this.setState({chosenSubject: e.target.value}) }\r\n                        defaultValue={this.props.copyLesson?.subject}                        >\r\n                                        <option></option>\r\n                                            {this.state.subjects?\r\n                                                this.state.subjects.map((item,index)=>(\r\n                                                    <option value={index} >{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Lesson Type</label>\r\n                    \r\n                    <select \r\n                        class=\"form-control\" \r\n                        id=\"exampleFormControlSelect1\" \r\n                        onChange={e=>this.setState({chosenLessonType: e.target.value})}\r\n                        defaultValue={this.props.copyLesson? this.props.copyLesson.lessonType == 0? \"Group\": \"One-To-One\": null}\r\n                        >\r\n                                        <option></option>\r\n                                            {this.state.lessonTypes?\r\n                                                this.state.lessonTypes.map((item,index)=>(\r\n                                                    <option value={index}>{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Single Pay {this.state.copyLesson?.payAdjustment}</label>\r\n                    <input value={this.state.chosenSinglePay} onChange={(e)=>this.setState({chosenSinglePay:e.target.value})} className=\"form-control\" type=\"number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Single Fee {this.state.copyLesson?.feeAdjustment}</label>\r\n                    <input value={this.state.chosenSingleFee} onChange={(e)=>this.setState({chosenSingleFee:e.target.value})} className=\"form-control\" type=\"number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Group Pay {this.state.copyLesson?.payAdjustment}</label>\r\n                    <input value={this.state.chosenGroupPay} onChange={(e)=>this.setState({chosenGroupPay:e.target.value})} className=\"form-control\" type=\"number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Group Fee {this.state.copyLesson?.feeAdjustment}</label>\r\n                    <input value={this.state.chosenGroupFee} onChange={(e)=>this.setState({chosenGroupFee:e.target.value})} className=\"form-control\" type=\"number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Teacher {this.state.copyLesson?.teacher}</label>\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setState({chosenTeacher:e.target.value})}>\r\n                                        <option></option>\r\n                                            {this.state.teachers?\r\n                                                this.state.teachers.map((item,index)=>(\r\n                                                    <option value={item._id}>{item.firstName}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Day of the week</label>{this.state.copyLesson? \"(\"+Days[this.state.copyLesson.day] +\")\": null}\r\n                    <div >\r\n                    <select value={this.state.chosenDayOfWeek}\r\n                     defaultValue={this.state.copyLesson?.day} class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setState({chosenDayOfWeek:e.target.value})}>\r\n                                        <option></option>\r\n                                            {this.state.days?\r\n                                              Object.keys(this.state.days).map(key => \r\n                                                <option selected={this.state.copyLesson?.day == key} value={key}>{this.state.days[key]}</option>\r\n                                            )\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                                        </select>                   \r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Start Date</label>{this.state.copyLesson? \"(\"+this.state.copyLesson.startDate.slice(0,10) +\")\": null}\r\n                    <div className=\"col\">\r\n                        <DatePicker className=\"form-control\"\r\n                        selected={this.state.chosenStartDate}\r\n                        onChange={date => this.setState({chosenStartDate:date})}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                         />  \r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">End Date</label>{this.state.copyLesson? \"(\"+this.state.copyLesson.endDate.slice(0,10) +\")\": null}\r\n                    <div className=\"col\">\r\n                        <DatePicker className=\"form-control\"\r\n                        selected={this.state.chosenEndDate}\r\n                        onChange={date => this.setState({chosenEndDate:date})}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                         />  \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"onChange={e=>this.setState({isCoverLesson:!this.state.isCoverLesson})}/>\r\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                    Cover Lesson\r\n                </label>\r\n                </div>\r\n                </form>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.addLesson}>Add Extra Lesson</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.cancel}>Cancel</Button>\r\n                </ModalFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddLessonForm","C:\\git\\mslc\\mslc\\src\\components\\Admin\\RemoveButton.js",["583","584"],"\r\nimport react, {Component} from 'react';\r\n\r\n\r\nclass RemoveButton extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n    removeExistingLesson = (e)=>{\r\n        console.log('yp');\r\n        this.props.item.remove = true;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button className=\"btn btn-danger\"\r\n                    onClick={this.removeExistingLesson}\r\n                >X</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RemoveButton",["585","586"],"C:\\git\\mslc\\mslc\\src\\ProtectedRoute.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Auth\\InstantLogoutButton.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\Corrections.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessons.js",["587","588","589","590"],"import react,{Component} from 'react'\r\nimport { Button, Modal, ModalHeader } from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Subjects from '../../Enums/Subjects'\r\nimport EditTakenLessonForm from './EditTakenLessonForm'\r\nimport AddTakenLessonForm from './AddTakenLessonForm'\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nimport EditStudentTakenLessonsRow from \"./EditStudentTakenLessonRow\";\r\nimport jsPDF from 'jspdf'\r\nimport CsvDownload from 'react-json-to-csv'\r\nimport BaseComponent from '../../BaseComponent';\r\n\r\nclass EditStudentTakenLessons extends BaseComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            takenLessons:null,\r\n            takenLessonsCopy:null,\r\n            student:null,\r\n            teacher:null,\r\n            fromDate:null,\r\n            toDate:null,\r\n            subject:null,\r\n            allStudents:null,\r\n            filteredStudents:null,\r\n            allTeachers:null,\r\n            allSubjects:null,\r\n            showStudentList:'none',\r\n            studentSearchTerm:'',\r\n            searched:false,\r\n            showModal:false,\r\n            showAddModal:false,\r\n            chosenLesson:null,\r\n            showRefundModal: false,\r\n            refundTakenLessonId: null,    \r\n            refundTakenLesson: null,   \r\n            errorTimer:5000,   \r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    componentDidMount = async ()=>{\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var sid = queryString.id? queryString.id : null\r\n\r\n        if(sid != null){\r\n           \r\n            await   this.getStudent(sid)\r\n\r\n           \r\n          // await this.select()\r\n        }\r\n        await  this.getAllStudents();\r\n        await  this.getAllTeachers();\r\n    }\r\n\r\n    getStudent = async (sid) =>{\r\n        await axios.get('/api/students/sid?id='+sid,{headers:this.state.options})\r\n        .then(async response => {\r\n             var student = await response.data[0];\r\n             await this.setState({student:student})\r\n\r\n             await console.log(this.state.student,\"yoooo\")\r\n         \r\n        });\r\n    }\r\n    getAllStudents = async  () => {\r\n        var options =  { authorization: 'Bearer '+this.props.token,\r\n            userId:this.props.userId }\r\n        await axios.get('/api/students/all',{ headers:options })\r\n        .then(async response => {\r\n             var students = await response.data;\r\n             console.log(students);\r\n             this.setState({allStudents:students})\r\n             this.setState({filteredStudents:students})\r\n         \r\n        });\r\n    }\r\n\r\n    getAllTeachers = async  () => {\r\n        var options =  { authorization: this.props.token,\r\n            userId:this.props.userId }\r\n        await axios.get('/api/teachers/all',{ headers:options })\r\n        .then(async response => {\r\n             var students = await response.data;\r\n             console.log(students);\r\n             this.setState({allTeachers:students})\r\n         \r\n        });\r\n    }\r\n\r\n    toggleRefundModal = async (id)=>\r\n    {\r\n        this.setState({refundTakenLessonId: id})\r\n        var options =  { authorization: this.props.token,\r\n            userId:this.props.userId }\r\n        await axios.get('/api/taken-lessons/id/'+id,{ headers:options })\r\n        .then(async response => {\r\n             var takenLesson = await response.data;\r\n             this.setState({refundTakenLesson:takenLesson})\r\n         \r\n        });\r\n        this.setState({showRefundModal: !this.state.showRefundModal})\r\n    }\r\n\r\n    refundTakenLesson = async (id) =>\r\n    {\r\n        var options =  { authorization: this.props.token,\r\n            userId:this.props.userId }\r\n        await axios.post('/api/taken-lessons/refund/'+id,{ headers:options })\r\n        .catch((err)=>\r\n            {             \r\n              this.setState({error:err})\r\n              this.setErrorTimeout()\r\n            })\r\n       \r\n        this.setState({showRefundModal: !this.state.showRefundModal})\r\n        alert(\"refund processed\")\r\n    }\r\n\r\n    showStudentList = () =>{\r\n        this.setState({showStudentList:'block'})\r\n    }\r\n\r\n    hideStudentList = () =>{\r\n        this.setState({showStudentList:'none'})\r\n    }\r\n\r\n    filterStudents = (searchTerm) => {\r\n        var allStudents  = this.state.allStudents;\r\n        var filteredStudents = allStudents.filter((item)=>item.firstName.toLowerCase().includes(searchTerm.toLowerCase()) \r\n        || item.lastName.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        this.setState({filteredStudents:filteredStudents})\r\n\r\n\r\n\r\n    }\r\n\r\n    setStudentSearch = (e)=>{\r\n        this.setState({student:null})\r\n        this.setState({studentSearchTerm:e.target.value})\r\n  \r\n        this.filterStudents(e.target.value);\r\n        if(e.target.value.length >0){\r\n            this.showStudentList();\r\n        }else{\r\n            this.hideStudentList();\r\n        }\r\n\r\n    }\r\n    setStudent = (i)=>{\r\n        var index = i;\r\n        var student = this.state.filteredStudents[index];\r\n        this.setState({student:student})\r\n       \r\n        this.hideStudentList();\r\n    }\r\n\r\n    setSubject=(e)=>{\r\n        this.setState({subject:e.target.value})\r\n    }\r\n\r\n    setTeacher=(e)=>{\r\n        this.setState({teacher:e.target.value})\r\n      \r\n    }\r\n\r\n    startSearch=(e)=>{\r\n     \r\n        this.setState({searched:true})\r\n        var subject = this.state.subject? this.state.subject:null\r\n        var sid = this.state.student? this.state.student._id:null\r\n        var toDate = this.state.toDate? this.state.toDate:null\r\n        var fromDate = this.state.fromDate? this.state.fromDate:null\r\n        var teacher = this.state.teacher? this.state.teacher:null\r\n\r\n                \r\n                this.queryTakenLessons(subject, sid , toDate, fromDate, teacher)\r\n\r\n    }\r\n\r\n    queryTakenLessons = async (subject,sid,toDate,fromDate,tid) =>{\r\n        var options =  { authorization: this.props.token,\r\n            userId:this.props.userId }\r\n        await axios.get('/api/taken-lessons/query?'+\r\n        (sid?\"&sid=\"+sid:\"\")+\r\n        (subject?\"&subject=\"+subject:\"\")+\r\n        (toDate?\"&to=\"+toDate:\"\")+\r\n        (fromDate?\"&from=\"+fromDate:\"\")+\r\n        (tid?\"&tid=\"+tid:\"\"),\r\n        { headers:options })\r\n        .then(async response => {\r\n            \r\n             var lessons = await response.data;\r\n       \r\n             this.setState({takenLessons:lessons})\r\n             this.setState({takenLessonsCopy:lessons})\r\n             \r\n         \r\n        });\r\n\r\n    }\r\n\r\n    toggleModal = (e,index) =>{\r\n        this.setChosenLesson(index)\r\n        this.setState({showModal:!this.state.showModal})\r\n\r\n    }\r\n\r\n    downloadCSV = () =>{\r\n\r\n    }\r\n\r\n    toggleAddModal = (e) =>{\r\n      \r\n        if(this.state.student != null){\r\n            this.setState({showAddModal:!this.state.showAddModal})\r\n        }else{\r\n            alert('must choose student')\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    setChosenLesson = (index) =>{\r\n\r\n        var lesson = this.state.takenLessons[index]\r\n        this.setState({chosenLesson:lesson})\r\n\r\n    }\r\n\r\n    download = async () =>{\r\n        var doc = new jsPDF('p', 'pt', 'a2');     \r\n        doc.setFontSize(10);   \r\n       \r\n        var source = await window.document.getElementById(\"takenLessonTable\")\r\n        await doc.html(\r\n            source\r\n            );\r\n\r\n\r\n           await doc.output(\"dataurlnewwindow\");\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Modify Taken Lessons\r\n                </h1>\r\n\r\n                {\r\n                    this.state.error != null?\r\n                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                        {this.state.error.response.status +\" : \"+ this.state.error.response.statusText}\r\n                    </div>\r\n                    :null\r\n                }\r\n               \r\n                <form className=\"container\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-12\">\r\n                        <label for=\"inputEmail4\">Student</label><br/>\r\n                        {\r\n                            this.state.allStudents?.length>0?\r\n                            <input value={this.state.student?this.state.student.firstName +\" \"+ this.state.student.lastName:null} class=\"form-control\" onChange={this.setStudentSearch} placeholder=\"search for students ...\"/>:\r\n                            <div className=\"btn btn-warning\"><strong>Loading..</strong></div>\r\n                        }                        \r\n                        <div className=\"col\" style={{cursor:'pointer'}}\r\n                         size={this.state.filteredStudents?.length} onChange={this.setStudent}  style={{display:this.state.showStudentList}}>\r\n                            \r\n                            {this.state.filteredStudents != null?this.state.filteredStudents.map((item,index)=>(\r\n                               <EditStudentTakenLessonsRow\r\n                                item={item}\r\n                                index={index}\r\n                                setStudent = {this.setStudent}\r\n                               />\r\n\r\n                            )):null}\r\n                        </div>\r\n                        \r\n            \r\n                        </div>\r\n                        <div class=\"form-group col-md-12\">\r\n                        <label for=\"inputPassword4\">Teacher</label>\r\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={this.setTeacher} >\r\n                                        <option></option>\r\n                                            {this.state.allTeachers?\r\n                                                this.state.allTeachers.map((item,index)=>(\r\n                                                    <option value={item._id}>{item.fullName}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                                        </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <div className=\"row-md\">\r\n                            <label for=\"inputAddress\">From (Inclusive)</label>\r\n                        </div> \r\n                        <DatePicker className=\"form-control\"\r\n                        selected={this.state.fromDate}\r\n                        onChange={date => this.setState({fromDate:date})}\r\n                        /> \r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <div className=\"row-md\">\r\n                            <label for=\"inputAddress\">To (Inclusive)</label>\r\n                        </div> \r\n                        <DatePicker className=\"form-control\"\r\n                        selected={this.state.toDate}\r\n                        onChange={date => this.setState({toDate:date})}\r\n                        /> \r\n                    </div>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label for=\"inputPassword4\">Subject</label>\r\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={this.setSubject}>\r\n                                        <option></option>\r\n                                            {Subjects?\r\n                                                Subjects.map((item,index)=>(\r\n                                                    <option>{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                        </select>\r\n                    </div>\r\n                    \r\n                 \r\n                    \r\n                    </form>\r\n\r\n                    {\r\n                        this.state.searched?\r\n                        \r\n                        <button \r\n                        onClick={(e)=>this.setState({searched:false})}\r\n                        class=\"btn btn-danger\">back\r\n                        </button>\r\n\r\n\r\n                        :\r\n                        <button \r\n                            onClick={this.startSearch}\r\n                            class=\"btn btn-primary\">Start Search\r\n                        </button>\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                    {\r\n\r\n                        <div>\r\n                            <button className=\"btn btn-warning m-1\"\r\n                                onClick={this.toggleAddModal}\r\n                            >Add New Taken Lesson</button>\r\n                        </div>    \r\n                    }\r\n\r\n                    {this.state.takenLessons?.length >0?\r\n                        <div>\r\n                            <button onClick={this.download} className=\"btn btn-success\">\r\n                                Download\r\n                            </button>\r\n                            <CsvDownload data={this.state.takenLessons} />\r\n                        </div>    \r\n                    :null}\r\n\r\n                    {this.state.takenLessons?\r\n                        this.state.takenLessons.length < 1?\r\n                        <div>\r\n                            No Lessons Found!\r\n                        </div>    \r\n                        :\r\n                        <div id=\"takenLessonTable\" className=\"container table table-dark\">\r\n                            \r\n                            <div className=\"row pd-2\">\r\n                                <div className=\"col\">Date</div>\r\n                                <div className=\"col\">Day</div>\r\n                                <div className=\"col\">Crction</div>\r\n                                <div className=\"col\">Subject</div>\r\n                                <div className=\"col\">Teacher</div>\r\n                                <div className=\"col\">Student</div>\r\n                                <div className=\"col\">Rate</div>\r\n                                <div className=\"col\">PPL</div>\r\n                                <div className=\"col\">Hrs</div>\r\n                       \r\n                                <div className=\"col\">FPL</div>\r\n\r\n                            </div>\r\n                    \r\n                        {this.state.takenLessons.map((item,index)=>(\r\n                            <div className=\"row table-row\" >\r\n                                <div className=\"col\">{item.date.toString().slice(0,10)}</div>\r\n                                <div className=\"col\">{item.day}</div>\r\n                                <div className=\"col\">{item.correction}</div>\r\n                                <div className=\"col\">{item.subject}</div>\r\n                                <div className=\"col\">{item.teacher.fullName}</div>\r\n                                <div className=\"col\">{item.student.firstName}</div>\r\n                                <div className=\"col\" >{item.rate}</div>\r\n                                <div className=\"col\">{item.payPerLesson}</div>\r\n                                <div className=\"col\">{item.hours}</div>                             \r\n                                <div className=\"col\">{item.feePerLesson}</div>\r\n                                <div className=\"col\">{item.stripeRefundId? \"refunded\": null}</div>\r\n                                <div><button className='btn btn-danger' onClick={()=>{this.toggleRefundModal(item._id)}}>refund</button></div>\r\n                                <div><button className='btn btn-warning' onClick={(e)=>{this.toggleModal(e, index)}}>edit</button></div>\r\n                            </div>\r\n\r\n\r\n                        ))}\r\n\r\n                        </div>\r\n                    :null}\r\n                    \r\n            <Modal isOpen={this.state.showModal} toggle={this.toggleModal} >\r\n                <ModalHeader >You are about to Edit a taken lesson</ModalHeader>\r\n                {this.state.chosenLesson?\r\n\r\n                <EditTakenLessonForm\r\n                    chosenLesson={this.state.chosenLesson}\r\n                    teachers={this.state.allTeachers}\r\n                    students={this.state.allStudents}\r\n                    userId={this.props.userId}\r\n                    token={this.props.token}\r\n                    toggleModal={this.toggleModal}\r\n                />\r\n                \r\n                \r\n                :null}            \r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={this.state.showAddModal} toggle={this.toggleAddModal} >\r\n                <ModalHeader >You are about to Add a taken lesson</ModalHeader>\r\n           \r\n\r\n                <AddTakenLessonForm\r\n                teachers={this.state.allTeachers}\r\n                students={this.state.allStudents}\r\n                userId={this.props.userId}\r\n                token={this.props.token}\r\n                toggleAddModal={this.toggleAddModal}\r\n                chosenStudent={this.state.student}\r\n                />\r\n                \r\n                \r\n                         \r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={this.state.showRefundModal} toggle={this.toggleRefundModal} >\r\n                <ModalHeader >Place Refund</ModalHeader>\r\n                <div className='m-2 p-1'>\r\n                    <div>\r\n                        ID: {this.state.refundTakenLesson?._id}\r\n                    </div>\r\n                    <div>\r\n                        Fee: {this.state.refundTakenLesson?.feePerLesson}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button \r\n                            className='btn btn-primary' \r\n                            onClick={()=>this.refundTakenLesson(this.state.refundTakenLesson?._id)}>\r\n                                Submit Refund\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n                         \r\n            </Modal>\r\n\r\n\r\n              \r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditStudentTakenLessons\r\n","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditTakenLessonForm.js",["591","592","593","594","595","596","597","598","599","600","601","602","603","604"],"import { extract } from 'query-string'\r\nimport React, {Component} from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Prices from '../../Enums/Prices'\r\nimport Subjects from '../../Enums/Subjects'\r\nimport Corrections from '../../Enums/Corrections'\r\nimport Days from '../../Enums/Days'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\nclass EditTakenLessonForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            lessonId:null,\r\n            changedDate:'',\r\n            chosenCorrection:null,\r\n            chosenSubject:null,\r\n            chosenTeacher:null,\r\n            chosenRate:null,\r\n        \r\n            chosenPrice:null,\r\n            chosenHours:null\r\n   \r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        console.log(this.props.chosenLesson)\r\n    }\r\n\r\n    setChangedDate = (date)=>{\r\n        console.log(date,\"1\")\r\n        this.setState({changedDate:date})\r\n    }\r\n    \r\n    editTakenLesson = async  (e)=>{\r\n\r\n\r\n        console.log(this.state.changedDate,\r\n            this.state.chosenCorrection,\r\n            this.state.chosenSubject,\r\n            this.state.chosenTeacher,\r\n            this.state.chosenStudent,\r\n            this.state.chosenPrice,\r\n            this.state.chosenHours\r\n            )\r\n            var data = {\r\n                rate: this.props.chosenLesson.rate,\r\n                hours: this.props.chosenLesson.hours,\r\n                price: this.props.chosenLesson.price,\r\n                correction: this.props.chosenLesson.correction\r\n            }\r\n\r\n            if(this.state.changedDate != ''){\r\n                data.date = formatDate(this.state.changedDate)\r\n            }\r\n\r\n            if(this.state.chosenCorrection != null){\r\n                data.correction = this.state.chosenCorrection\r\n            }\r\n\r\n            if(this.state.chosenSubject != null){\r\n                data.subject = this.state.chosenSubject\r\n            }\r\n\r\n            if(this.state.chosenTeacher != null){\r\n                data.teacher = this.state.chosenTeacher\r\n            }\r\n\r\n            if(this.state.studentId != null){\r\n                data.student = this.state.studentId\r\n            }\r\n\r\n            if(this.state.chosenPrice != null){\r\n                data.price = this.state.chosenPrice\r\n            }\r\n\r\n            if(this.state.chosenHours != null){\r\n                data.hours = this.state.chosenHours\r\n            }\r\n\r\n            if(this.state.chosenRate != null){\r\n                data.rate = this.state.chosenRate\r\n                \r\n            }\r\n\r\n            data.payPerLesson = data.rate * data.hours\r\n            data.feePerLesson = data.price * data.hours\r\n\r\n            \r\n\r\n            var options =  { authorization: this.props.token,\r\n                userid:this.props.userId }\r\n           \r\n\r\n\r\n                console.log(data,\"2\")\r\n             await axios.post('/api/taken-lessons/update?id='+this.props.chosenLesson._id,{headers:options,data:data})\r\n             .then(async response =>{\r\n                     var data = response.data;\r\n                     console.log(data)\r\n                     this.cancel()\r\n             })\r\n\r\n            alert('lesson updated')\r\n    }\r\n\r\n    deleteLesson = async (e) =>{\r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n        await axios.delete('/api/taken-lessons/delete?id='+this.props.chosenLesson._id,{headers:options})\r\n            .then(async response =>{\r\n                    var data = response.data;\r\n                    console.log(data)\r\n            })\r\n            this.cancel();\r\n        alert('lesson deleted')\r\n\r\n    }\r\n\r\n    cancel = (e) =>{\r\n        this.props.toggleModal()\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ModalBody>\r\n                <div className=\"col\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">Date</div>\r\n                        <div className=\"col-3\">{(this.props.chosenLesson.date.toString().slice(0,10))}</div>\r\n                        <div className=\"col-3\">\r\n                            <DatePicker className=\"form-control\"\r\n                            selected={this.state.changedDate?this.state.changedDate:''}\r\n                            onChange={date=>this.setChangedDate(date)}\r\n                            \r\n                            /> \r\n                        </div>\r\n                        <div className=\"col-3\" >\r\n                            {(new Date(this.state.changedDate.toString())) == (new Date(this.props.chosenLesson.date.toString())) ||\r\n                                this.state.changedDate == \"\"\r\n                            ?\"not changed\":\"changed\"}\r\n                        </div>\r\n                    </div>\r\n                  \r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Correction</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.correction}</div>\r\n                        <div className=\"col\">\r\n                            <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setState({chosenCorrection:e.target.value})}>\r\n                                        <option></option>\r\n                                            {Corrections?\r\n                                              Corrections.map((item,index) => \r\n                                                <option value={index}>{item}</option>\r\n                                            )\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                            </select>  \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                this.state.chosenCorrection?\r\n                                this.state.chosenCorrection == this.props.chosenLesson.correction?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Subject</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.subject}</div>\r\n                        <div className=\"col\">\r\n                            <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setState({chosenSubject:e.target.value})}>\r\n                                        <option></option>\r\n                                            {Subjects?\r\n                                              Subjects.map((item,index) => \r\n                                                <option value={item}>{item}</option>\r\n                                            )\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                            </select>  \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {   this.state.chosenSubject?\r\n                                this.state.chosenSubject == this.props.chosenLesson.subject?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Teacher</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.teacher.fullName}</div>\r\n                        <div className=\"col\">\r\n                            <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setState({chosenTeacher:e.target.value})}>\r\n                                        <option></option>\r\n                                            {this.props.teachers?\r\n                                              this.props.teachers.map((item,index) => \r\n                                                <option value={item._id}>{item.fullName}</option>\r\n                                            )\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                            </select>  \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                this.state.chosenTeacher?\r\n                                    this.state.chosenTeacher == this.props.chosenLesson.teacher._id?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Price (per hour)</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.price}</div>\r\n                        <div className=\"col-3\">\r\n                            <input className=\"form-control\" onChange={(e)=>this.setState({chosenPrice:e.target.value})}></input> \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                this.state.chosenPrice?\r\n                                this.state.chosenPrice == this.props.chosenLesson.price?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Rate (per hour)</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.rate}</div>\r\n                        <div className=\"col-3\">\r\n                            <input className=\"form-control\" onChange={(e)=>this.setState({chosenRate:e.target.value})}></input> \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                this.state.chosenRate?\r\n                                this.state.chosenRate == this.props.chosenLesson.rate?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                   \r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Hours</div>\r\n                        <div className=\"col\">{this.props.chosenLesson.hours}</div>\r\n                        <div className=\"col-3\">\r\n                        <input className=\"form-control\" onChange={e=>this.setState({chosenHours:e.target.value})}></input>  \r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            {   \r\n                                this.state.chosenHours?\r\n                                this.state.chosenHours == this.props.chosenLesson.hours?\"not changed\":\"changed\"\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">Total for lesson</div>\r\n                        <div className=\"col\">\r\n                        {this.props.chosenLesson.hours*this.props.chosenLesson.price*((100-this.props.chosenLesson.discount)/100)}\r\n                        </div>\r\n                        <div className=\"col\">{\r\n                            this.state.chosenHours*this.state.chosenPrice\r\n                        }</div>\r\n                    </div>\r\n\r\n                </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.editTakenLesson}>Edit Extra Taken Lesson</Button>{' '}\r\n                    <Button color=\"danger\" onClick={this.deleteLesson}>Delete</Button>\r\n                    <Button color=\"secondary\" onClick={this.cancel}>Cancel</Button>\r\n                </ModalFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditTakenLessonForm","C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessonRow.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\TakenLessons\\AddTakenLessonForm.js",[],"C:\\git\\mslc\\mslc\\src\\components\\MyLessons.js",["605","606","607","608","609","610","611"],"import react,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\n///keep this import\r\nimport Chart from 'chart.js/auto';\r\nDate.prototype.formatDDMMYYYY = function(){\r\n    return (this.getDate() +\"/\"+ (this.getMonth() + 1) + \r\n    \"/\" +  this.getFullYear());\r\n}\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top'\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Past Monthly Earnings'\r\n      }\r\n    }\r\n  };\r\n  \r\n  const labels = ['June', 'July','August', 'Spetember', 'October'];\r\n  \r\n  var data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'pay',\r\n        data: [0,0,0,0],\r\n        backgroundColor: '#0066ff',\r\n      }\r\n    ],\r\n  };\r\nclass MyLessons extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            fromDate:null,\r\n            toDate:null,\r\n            takenLessons:null,\r\n            takenLessonsCopy:null,\r\n            isResults:false,\r\n            subtotal:null,\r\n            lessonToDelete:null,\r\n            lessonToDeleteId:null,\r\n            justSaved:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            searchTerm:null,\r\n            hours:1,\r\n            earningsPerHour:0,\r\n            data: data,\r\n            options :{ authorization: this.props.token,userid:this.props.userId }   \r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.setMinMaxDates()\r\n    }\r\n\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()        \r\n        \r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() >= 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n\r\n        await this.setState({maxDate:new Date(maxYear,maxMonth,26)})\r\n        await this.setState({minDate:new Date(minYear,minMonth,26)})\r\n        await this.setState({toDate:new Date(maxYear,maxMonth-1,25)})\r\n        await this.setState({fromDate:new Date(minYear,minMonth-1,26)})\r\n           \r\n       \r\n        \r\n      \r\n    }\r\n\r\n    getLessons = async () =>{\r\n        console.log(this.props.id)\r\n        await  axios.get('/api/taken-lessons/teacher/fromtodate?tid='+this.props.id+\r\n            '&fromDate='+this.state.fromDate+'&toDate='+this.state.toDate,\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            this.setState({takenLessons:response.data})\r\n            this.setState({takenLessonsCopy:response.data})\r\n            this.calculateSubtotal(response.data);\r\n            this.setState({isResults:true})\r\n\r\n        })\r\n    }\r\n\r\n    search = (e) =>{\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            if(this.state.fromDate<this.state.toDate){\r\n                this.getLessons()\r\n                this.stats()\r\n            }else{\r\n                alert('cannot query between these dates');\r\n            }\r\n        }else{\r\n            alert('enter dates')\r\n        }\r\n    }\r\n\r\n    calculateSubtotal = (lessons) =>{\r\n        if(lessons != null){\r\n            var subtotal  = 0;\r\n\r\n            lessons.map((lesson,index)=>{\r\n                var ppl = lesson.payPerLesson;\r\n                subtotal = subtotal +ppl\r\n            })\r\n            \r\n         \r\n            this.setState({subtotal:subtotal})\r\n            this.setState({earningsPerHour: subtotal/this.state.hours})\r\n\r\n        }else{\r\n            this.setState({subtotal:null})\r\n        }\r\n    }\r\n    toggleModal = () =>{\r\n        \r\n        this.setState({showModal:!this.state.showModal})\r\n    }\r\n    deleteLesson = async () =>{\r\n        this.toggleModal()\r\n        console.log()\r\n        await axios.delete('/api/taken-lessons/delete?id='+this.state.lessonToDeleteId,{headers:this.state.options})\r\n        .then(response =>{\r\n            console.log(response)\r\n        })\r\n\r\n        this.setState({justSaved:true})\r\n                \r\n                setTimeout(()=>\r\n                    this.setState({justSaved:false})\r\n                , 3000);\r\n\r\n        this.search();\r\n      \r\n    }\r\n\r\n    setLesson = (e,id)=>{\r\n        this.setState({lessonToDeleteId:id})\r\n        this.toggleModal()\r\n    }\r\n\r\n    setHours=(e)=>\r\n    {\r\n        let hours = e.target.value\r\n        this.setState({hours: hours})\r\n    }\r\n\r\n    stats = async ()=>\r\n    {\r\n        await axios.get('/api/v2/lessons/teacher/'+this.props.id.toString()+'/pastmonthsearnings',{headers:this.state.options})\r\n        .then(response =>{\r\n            \r\n            var stats = response.data\r\n\r\n            var list = [stats.june[0].amount, stats.july[0].amount, stats.august[0].amount, stats.september[0].amount, stats.october[0].amount]\r\n\r\n            var data = {\r\n                labels,\r\n                datasets: [\r\n                  {\r\n                    label: 'pay',\r\n                    data: list,\r\n                    backgroundColor: '#0066ff',\r\n                  }\r\n                ],\r\n              };\r\n\r\n            this.setState({data:data})\r\n            \r\n            \r\n        }) \r\n    }\r\n    filter = (e) =>{\r\n        var searchTerm = e.target.value\r\n        searchTerm = searchTerm.toLowerCase();\r\n        console.log(this.state.takenLessonsCopy)\r\n        var list = this.state.takenLessonsCopy.filter((item)=>\r\n            \r\n                item.student.firstName.toLowerCase().includes(searchTerm) ||\r\n \r\n                item.subject.toLowerCase().includes(searchTerm) ||\r\n\r\n                item.date.includes(searchTerm) ||\r\n\r\n                item.dayString.includes(searchTerm)\r\n\r\n            \r\n                )\r\n        this.setState({takenLessons:list})\r\n       \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"MyLessons\" >\r\n            <div id=\"MyLessonsContainer\" className=\"container\">\r\n                <h1 className=\"m-3 mb-5\">My Lessons</h1>\r\n\r\n                {\r\n                    this.state.justSaved?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }       \r\n             \r\n              \r\n                    <div className=\"mb-3\">\r\n                        <div className=\"mt-5 pt-5\">                        \r\n                            <div class=\"form-group\">\r\n                                <div className='d-inline-block label-text'>\r\n                                    <label ><h4 class=\"text\">From : </h4> </label>\r\n                                </div>\r\n                                <div className='d-inline-block'>\r\n                                <DatePicker className=\"form-control\"\r\n                                    selected={this.state.fromDate}\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    onChange={date => this.setState({fromDate:date})}\r\n                                    /> \r\n                                </div>                              \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"d-inline-block label-text\">\r\n                                    <label ><h4 class=\"text\">To : </h4> </label>\r\n                                </div>\r\n                                <div class=\"d-inline-block\">\r\n                                <DatePicker className=\"form-control\"\r\n                                    selected={this.state.toDate}\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    onChange={date => this.setState({toDate:date})}\r\n                                    /> \r\n                                </div>                              \r\n                            </div>\r\n                               \r\n                            <button className=\"btn btn-outline-primary mb-5 mt-3 search-btn\"\r\n                                onClick={this.search}\r\n                            >Search\r\n                            </button>\r\n                                  \r\n                                    \r\n                                         \r\n                </div>\r\n\r\n                <div className=\"\">\r\n                {this.state.isResults?\r\n                    <div>\r\n                    <div className=' mb-5'>\r\n                    {                    \r\n                    this.state.subtotal?\r\n                        <button className=\"btn btn-primary amount-btn\" disabled={true} >{'£ '+ this.state.subtotal}</button>\r\n                    :null\r\n                    }            \r\n                  \r\n                    </div>\r\n         \r\n                        </div>\r\n                   \r\n                          :null}\r\n                </div>\r\n\r\n              \r\n\r\n                </div>\r\n\r\n                \r\n\r\n      \r\n\r\n                <div>\r\n                {\r\n                    this.state.isResults && this.props.user.role != 1?\r\n                        <div className='lessons-chart mb-5'>\r\n                            <Bar\r\n                            options={options}\r\n                            data={this.state.data}\r\n                            />\r\n                        </div>\r\n                    :null               \r\n                }\r\n                {\r\n                            this.state.isResults && this.state.takenLessons?\r\n                            <div>\r\n                            <div id=\"MyLessonsSearchBar\" class=\"input-group mb-5\">\r\n                                <input onChange={(e)=>this.filter(e)} type=\"text\" class=\"form-control\" placeholder={\"e.g. \"+this.props.user.nickname.fullName+\"... maths... saturday ... 2022-04-24 (TRY THIS NEW SEARCH FEATURE!!!)\"} />\r\n                          \r\n                                </div>\r\n                            </div> : null\r\n                        }\r\n                    {this.state.isResults?\r\n                    \r\n                        this.state.takenLessons?\r\n                       \r\n                            this.state.takenLessons.length > 0 ?                                  \r\n\r\n\r\n                                <div>\r\n                                  \r\n                                    <table id=\"MyLessonsTable\" className=\"table table-responsive table-light\">\r\n                                        <div>\r\n                                        <thead>\r\n                                            <th>\r\n                                                Date\r\n                                            </th>\r\n                                            <th>\r\n                                                Name\r\n                                            </th>\r\n                                            <th>\r\n                                                Subject\r\n                                            </th>\r\n                                            <th>\r\n                                                Correction\r\n                                            </th>\r\n                                            <th>\r\n                                                RPH\r\n                                            </th>\r\n                                            <th>\r\n                                                Hours\r\n                                            </th>\r\n                                            <th>\r\n                                                PPL\r\n                                            </th>\r\n                                            {/* <th>\r\n                                                Delete\r\n                                            </th> */}\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                           \r\n                                           {this.state.takenLessons.map((item,index)=>(\r\n                                               <tr>\r\n                                                   <td>\r\n                                                       {new Date(item.date).formatDDMMYYYY()}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.student.firstName}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.subject}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.correction}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.rate}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.hours}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.payPerLesson}\r\n                                                   </td>\r\n                                                   {/* <td>\r\n                                                       {new Date(item.date) <= this.state.maxDate && new Date(item.date) >= this.state.minDate?\r\n                                                        <button className=\"btn btn-danger\"\r\n                                                        onClick={e=>this.setLesson(e,item._id)}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       :\r\n                                                       <button className=\"btn btn-danger\"\r\n                                                        disabled={true}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       }\r\n\r\n                                                        \r\n                                                   </td> */}\r\n                                               </tr>\r\n                                           ))}\r\n\r\n                                        </tbody>\r\n                                        </div>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                    \r\n\r\n                            :<div><button className=\"btn btn-warning\" disabled={true}>No Lessons Found !</button></div>\r\n\r\n                        :null\r\n                        \r\n                    :null}\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                            \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.deleteLesson}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyLessons","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceTable.js",["612","613","614","615","616","617","618","619","620","621","622","623"],"import react,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\nimport ParentRow from './ParentRow'\r\nimport config from '../../../config.json'\r\nimport jsPDF from 'jspdf'\r\nconst sgMail = require('@sendgrid/mail');\r\nsgMail.setApiKey(config.EMAIL_API_KEY);\r\n\r\nclass InvoiceTable extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            data:null,\r\n            students:null,\r\n            parentsMap:null,\r\n            dataTree:{parents:[]},\r\n            fromDate:null,\r\n            toDate:null,\r\n            mapCreated:false,\r\n            treeCreated:false,\r\n            position:1,\r\n            invoiceType:null,\r\n            specificStudents:[],\r\n            studentsOnDateRange:[],\r\n            isListPrepared:false,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.getAllStudents();\r\n     \r\n    }\r\n\r\n    setInvoiceType = async  (e) =>{\r\n        await this.getAllStudents();\r\n        this.setState({invoiceType:e.target.value})\r\n        await this.setState({mapCreated:false})\r\n        await this.setState({treeCreated:false})\r\n        await this.setState({isListPrepared:false})\r\n        await this.setState({dataTree:{parents:[]}})\r\n    }\r\n\r\n   getSpecificStudents = async () =>{\r\n\r\n   }\r\n\r\n   getStudentsWhoHaveLessonsInDatesRangeOnly = async ()=>{\r\n        var lessons = []\r\n        var students = []\r\n\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            await  axios.get('/api/taken-lessons/query?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()        ,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                lessons = await response.data\r\n            \r\n            })\r\n        }\r\n\r\n        await lessons.map((lesson,index)=>{\r\n            if(students.indexOf(lesson.student) === -1) {\r\n                students.push(lesson.student);                \r\n            }\r\n        })\r\n\r\n        \r\n        console.log(lessons)\r\n        console.log(students);\r\n\r\n        return students\r\n   }\r\n\r\n    getAllStudents = async () =>{\r\n        await  axios.get('/api/students/all',\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            \r\n            this.setState({students:response.data})\r\n        })\r\n    }\r\n\r\n    setCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({specificStudents:[...this.state.specificStudents, item]})\r\n        }else{\r\n            const index = await this.state.specificStudents.indexOf(item);\r\n            console.log(index)\r\n                if (index > -1) {\r\n                    var list = await this.state.specificStudents.filter(a=>a!=item);\r\n                    this.setState({specificStudents:list});\r\n                }\r\n\r\n        }\r\n\r\n       \r\n    }\r\n  \r\n\r\n    createMap = async () =>{\r\n        var parentsMap = await new Map()\r\n        await this.state.students.map((student)=>{\r\n            if(!parentsMap.has(student.parent._id)){\r\n                parentsMap[student.parent._id] = [student]\r\n            }else{\r\n                parentsMap[student.parent._id].push(student)\r\n            }\r\n        })\r\n            console.log(parentsMap)\r\n        await this.setState({parentsMap:parentsMap})\r\n        await this.setState({mapCreated:true})\r\n    }    \r\n\r\n\r\n    createDataTree = async () =>{\r\n        if(this.state.fromDate < this.state.toDate){\r\n            \r\n       \r\n        var dataTree = this.state.dataTree\r\n        Object.keys(this.state.parentsMap).map((pid,i) => {\r\n            var parent = this.state.parentsMap[pid][0].parent \r\n            var students = this.state.parentsMap[pid]\r\n            \r\n           \r\n            parent.students = []\r\n            students.map(async (student,index)=>{\r\n                \r\n               var takenLessons = await this.getTakenLessonForStudent(student)\r\n               student.takenLessons = takenLessons\r\n               parent.students.push(student)\r\n            })\r\n            \r\n\r\n            dataTree.parents.push(parent)\r\n\r\n                  \r\n    })  \r\n\r\n        let stu = await this.state.dataTree.parents[0].students\r\n        setTimeout(\r\n            () => {\r\n                this.setState({ position: 1 });\r\n                console.log(this.state.dataTree);\r\n        \r\n        }, \r\n            3000\r\n          );\r\n        \r\n        this.setState({treeCreated:true})\r\n        }else{\r\n            alert('dates error')\r\n        }\r\n        \r\n    }\r\n\r\n    getTakenLessonForStudent = async (student) =>{\r\n\r\n        var takenLessons = [];\r\n        await  axios.get('/api/taken-lessons/query?sid='+student._id+\r\n        '&fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            takenLessons = await response.data\r\n        \r\n        })\r\n        return takenLessons;\r\n    }\r\n\r\n    prepareInvoiceList = async (e) =>{\r\n\r\n        if(this.state.invoiceType != null){\r\n\r\n            switch(parseInt(this.state.invoiceType)) {\r\n                \r\n                case 0:                    \r\n                    var students = await this.getStudentsWhoHaveLessonsInDatesRangeOnly();\r\n                    await this.setState({students:students})\r\n                    this.setState({isListPrepared:true})\r\n                  break;\r\n                case 1:\r\n                    this.setState({students:this.state.specificStudents})\r\n                    await this.setState({isListPrepared:true})\r\n                  break;\r\n                case 2:\r\n                    await this.setState({isListPrepared:true})\r\n                  // code block\r\n                  break;\r\n                default:\r\n                    alert('fail')\r\n                  // code block\r\n              }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    createInvoices = async (e) =>{\r\n        var data = await this.state.dataTree.parents;\r\n\r\n        data.map(async(parent,index)=>{\r\n            await this.storeInvoice(parent._id)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    storeInvoice =async  (pid) =>{\r\n        \r\n        var startDate = this.state.fromDate\r\n        var endDate = this.state.toDate\r\n        var month = this.state.toDate.getMonth()+1\r\n        var year = this.state.toDate.getFullYear();\r\n        \r\n    \r\n\r\n        await  axios.post('/api/invoices?pid='+pid+\r\n            '&year='+year+'&month='+month+'&sd='+startDate+'&ed='+endDate,\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            \r\n           console.log(response.data)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    sendInvoice = async ()=>{\r\n\r\n        await  axios.get('/api/invoices/all',\r\n        {headers:this.state.options})\r\n    .then(async response=>{\r\n        \r\n       \r\n       var buffer = await response.data[0].data.data\r\n       var b64 = Buffer.from(buffer).toString('base64')\r\n\r\n      window.open(\"data:application/pdf,\" + encodeURI(b64))\r\n    })\r\n\r\n    }\r\n\r\n\r\n    createInvoice = (parent) =>{\r\n        var doc = new jsPDF()\r\n\r\n            doc.text('Parent Name '+parent.firstName, 10, 10)\r\n            parent.students.map((student,index)=>{\r\n                doc.text('Student '+student.firstName, 10, 20)\r\n                var data = []\r\n                var total = 0;\r\n                    student.takenLessons.map((lesson,index)=>{\r\n                        console.log(lesson)\r\n                        var obj = {\r\n                                    date:lesson.date,\r\n                                    subject:lesson.subject,\r\n                                    correction:lesson.correction,\r\n                                    hours:lesson.hours.toString(),\r\n                                    price:lesson.price.toString(),\r\n                                    FPL:(lesson.price*lesson.hours).toString()\r\n\r\n                                  }\r\n\r\n                                  total += (lesson.price*lesson.hours);\r\n                        data.push(obj)\r\n                    })\r\n                    doc.table(10,30,data,[\"date\",\"subject\",\"correction\",\"hours\",\"price\",\"FPL\"])\r\n                    doc.text('Fee For Month £'+total.toString(), 50, 20)\r\n            })\r\n            \r\n\r\n            console.log(doc.output('datauri').toString());\r\n            doc.save();\r\n    }\r\n\r\n    sendEmail = async  (e) =>{\r\n        await  axios.get('/api/invoices/send',\r\n        {headers:this.state.options})\r\n    .then(async response=>{\r\n        console.log(response.data)\r\n\r\n    })\r\n            \r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        var parents = this.state.dataTree.parents\r\n\r\n        setTimeout(\r\n            () => {\r\n                this.setState({ position: 1 });\r\n               \r\n        \r\n        }, \r\n            3000\r\n          );\r\n\r\n        return(\r\n            <div>\r\n\r\n                <div className=\"h1\">\r\n                    Invoice Table\r\n                </div>\r\n\r\n                {/* <div>\r\n                    <button  className=\"btn btn-danger\" onClick={this.storeInvoice} >store invoice</button>\r\n                </div>\r\n\r\n                <div> \r\n                    <button  className=\"btn btn-success\" onClick={this.sendEmail} >send email</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <button  className=\"btn btn-warning\" onClick={this.sendInvoice}>get buffer</button>\r\n                </div> */}\r\n             \r\n\r\n\r\n                <div>\r\n                    <h3>Invoice Dates</h3>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>From Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.fromDate}\r\n                                onChange={date => this.setState({fromDate:date})}\r\n                                />  \r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <label>To Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.toDate}\r\n                                onChange={date => this.setState({toDate:date})}\r\n                                />  \r\n                        </div>\r\n                    </div>\r\n\r\n                {\r\n                    this.state.fromDate != null && this.state.toDate != null ?\r\n                   <div className=\"form-group\">\r\n                        <label>Invoice Type</label>\r\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setInvoiceType(e)}>\r\n                                            <option></option>\r\n                                                <option value=\"0\">Only students who had lessons in date range</option>\r\n                                                <option value=\"1\">Specific students</option>\r\n                                                <option value=\"2\">All (be careful)</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    :null\r\n                }\r\n\r\n                {\r\n                    this.state.invoiceType == 1?\r\n                        <div>\r\n\r\n                            {this.state.students?\r\n                            \r\n                                this.state.students.map((item,index)=>(\r\n                                    <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" value={item} id={index} onChange={e=>this.setCheckbox(e,item)} />\r\n                                    <label class=\"form-check-label\" for=\"flexCheckChecked\">\r\n                                        {item.firstName + ' ' + item.lastName}\r\n                                    </label>\r\n                                    </div>\r\n\r\n                                ))\r\n                            \r\n                            \r\n                            :null}\r\n                            <div>\r\n                                <button className=\"btn btn-primary\" onClick={this.prepareInvoiceList}>Prepare Invoice List</button>\r\n                            </div> \r\n\r\n                        </div>\r\n                    :null\r\n\r\n              \r\n\r\n                }\r\n\r\n                {\r\n                    this.state.invoiceType != 1 && this.state.invoiceType != null?\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.prepareInvoiceList}>Prepare Invoice List</button>\r\n                    </div>\r\n                    :null\r\n\r\n                }\r\n\r\n\r\n              \r\n\r\n\r\n                  {this.state.isListPrepared && this.state.mapCreated == false && this.state.invoiceType != null?\r\n\r\n                    <div className=\"row\" >\r\n                            <div className=\"col\">\r\n                                <button className=\"btn btn-primary m-5\"\r\n                                    onClick={this.createMap}\r\n                                >Create Map</button>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                  : null}  \r\n                   \r\n                   {this.state.mapCreated == true?\r\n                   <div>\r\n                        <button className=\"btn btn-success m-5\" \r\n                            onClick={this.createDataTree}\r\n                            >Create Data Tree</button>\r\n                    </div>\r\n                   \r\n                   :null}\r\n\r\n\r\n                {\r\n                    this.state.isListPrepared && this.state.mapCreated  && this.state.treeCreated?\r\n                        <div>\r\n                            Congrats!, looks like you're ready to store invoices\r\n                            <p>Make sure you have checked the dates, the invoice type etc</p>\r\n                            <p>Invoice Period  {this.state.fromDate.toString()} -- {this.state.toDate.toString()}</p>\r\n                            <button className=\"btn btn-warning\" onClick={this.createInvoices}>Create and Store Invoice</button>\r\n                        </div>    \r\n                    \r\n                    :null\r\n                }\r\n\r\n            \r\n                </div>\r\n                \r\n\r\n                {this.state.treeCreated?\r\n                   this.state.dataTree?\r\n                       parents.map((parent,index)=>(\r\n                          <div>\r\n                                <button className=\"btn btn-danger\"\r\n                                    onClick={()=>this.createInvoice(parent)}\r\n                                >create invoice</button>\r\n                               <ParentRow parent = {parent}/>    \r\n                               <hr></hr>\r\n                            \r\n                            </div>    \r\n                       ))\r\n                   \r\n                   :null\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvoiceTable",["624","625"],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\ParentRow.js",["626"],"import react , {Component} from 'react'\r\nimport StudentRow from './StudentRow'\r\n\r\n\r\nclass ParentRow extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {showStudents:false}\r\n    }\r\n\r\n    toggleShow = () =>{\r\n        this.setState({showStudents:!this.state.showStudents})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n       \r\n        <div >\r\n            <button className=\"btn btn-warning mb-5\"\r\n                onClick={this.toggleShow}\r\n            >{'Parent - '+this.props.parent.firstName}\r\n            \r\n            </button>\r\n\r\n            {this.state.showStudents?\r\n            \r\n            this.props.parent.students.map((student,index)=>(\r\n               \r\n                <StudentRow index={index} student ={student}/>\r\n            ))\r\n            :null}\r\n\r\n           \r\n\r\n            \r\n        </div>\r\n         \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ParentRow","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\StudentRow.js",["627"],"import react , {Component} from 'react'\r\n\r\n\r\nclass StudentRow extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {showLessons:false}\r\n    }\r\n\r\n    toggleShowLessons = () =>{\r\n        this.setState({showLessons:!this.state.showLessons})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n       \r\n        <div>\r\n           <div>\r\n                <button className=\"btn btn-primary mb-5\" \r\n                    onClick={this.toggleShowLessons}\r\n                >{'Student - '+this.props.student.firstName}</button>\r\n           </div>\r\n         {this.state.showLessons?<div>     \r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Date\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        Subject\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        Correction\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        Hours\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        Price\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        Fee Per Lesson\r\n                    </div>             \r\n                                \r\n                    \r\n                </div> \r\n         {\r\n               \r\n                this.props.student.takenLessons.map((lesson,index)=>(\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            {lesson.date}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {lesson.subject}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {lesson.correction}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {lesson.hours}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {lesson.price}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {lesson.price*lesson.hours*((100-lesson.discount)/100)}\r\n                        </div>               \r\n                        \r\n                    </div>    \r\n                ))\r\n\r\n                \r\n        \r\n         }\r\n\r\n         </div>:null}\r\n            \r\n        </div>\r\n         \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StudentRow",["628","629"],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\pdfmaker.js",["630"],"\r\nimport { Page, Text, View, Document, StyleSheet,ReactPDF } from '@react-pdf/renderer';\r\n\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#E4E4E4'\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = () => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <View style={styles.section}>\r\n        <Text>Section #1</Text>\r\n      </View>\r\n      <View style={styles.section}>\r\n        <Text>Section #2</Text>\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default MyDocument\r\n",["631","632"],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\Emailing\\EmailPanel.js",["633","634","635","636","637","638","639","640","641","642"],"import react,{Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nclass EmailPanel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            month:null,\r\n            year:null,\r\n            parents:null,\r\n            students:null,\r\n            listToShow:null,\r\n            filterBy:null,\r\n            chosenParents:[],\r\n            chosenStudents:[],\r\n            isSearchChanged:false,\r\n            inlcudeStudentsParents:false,\r\n            includeMonth:false,\r\n            includeYear:false,\r\n            invoices:[],\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        var parents = await this.getParents()\r\n        this.setState({parents:parents})\r\n        var students = await this.getStudents()\r\n        this.setState({students:students})\r\n    }\r\n\r\n    getParents = async () =>{\r\n        var parents = [];\r\n\r\n        await  axios.get('/api/parents/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                parents = await response.data\r\n            \r\n            })\r\n\r\n        return parents\r\n    }\r\n\r\n    getStudents = async () =>{\r\n        var students = [];\r\n\r\n        await  axios.get('/api/students/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                students = await response.data\r\n            \r\n            })\r\n\r\n        return students\r\n    }\r\n\r\n    setSearchBy = async (e) =>{\r\n        this.setState({filterBy:e.target.value})\r\n        if(this.state.isSearchChanged){\r\n            window.location.reload();\r\n        }\r\n        this.setState({isSearchChanged:true})\r\n\r\n      \r\n      \r\n    }\r\n\r\n    setStudentCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({chosenStudents:[...this.state.chosenStudents, item]})\r\n        }else{\r\n            const index = await this.state.chosenStudents.indexOf(item);\r\n            console.log(index)\r\n                if (index > -1) {\r\n                    var list = await this.state.chosenStudents.filter(a=>a!=item);\r\n                    this.setState({chosenStudents:list});\r\n                }\r\n\r\n        }\r\n        console.log(this.state.chosenStudents,this.state.chosenParents)\r\n       \r\n    }\r\n    setParentCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({chosenParents:[...this.state.chosenParents, item]})\r\n        }else{\r\n            const index = await this.state.chosenParents.indexOf(item);\r\n          \r\n                if (index > -1) {\r\n                    var list = await this.state.chosenParents.filter(a=>a!=item);\r\n                    this.setState({chosenParents:list});\r\n                }\r\n\r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n    search =async  ()=>{\r\n        var month = this.state.includeMonth? (\"&month=\"+this.state.month+\"\") : null;\r\n        var year = this.state.includeYear? (\"&year=\"+this.state.year+\"\")  : null;\r\n        var list = []\r\n        var listString = \"\";\r\n\r\n       if(this.state.inlcudeStudentsParents){\r\n            if(this.state.filterBy == 0){ //students\r\n                this.state.chosenStudents.map((student,index)=>{\r\n                    list = [...list,student.parent._id]\r\n                })\r\n            }else{\r\n\r\n                this.state.chosenParents.map((parent,index)=>{\r\n                    list = [...list,parent._id]\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        list.map((pid,index)=>{\r\n            listString = listString +\"&list=\"+ pid.toString()\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n        await  axios.get('/api/invoices/query?'+month+year+listString,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n               var invoices = await response.data\r\n               console.log(invoices)\r\n               this.setState({invoices:invoices})\r\n            \r\n            })\r\n\r\n\r\n\r\n\r\n\r\n       \r\n    }\r\n\r\n\r\n    sendInvoices = async  ()  =>{\r\n        if(this.state.invoices.length > 0){\r\n            var ids = this.state.invoices.map(a=> a._id)\r\n\r\n            console.log(ids)\r\n\r\n            var idsString = \"\";\r\n\r\n            ids.map((id,index)=>{\r\n                idsString = idsString + '&ids='+ id.toString()\r\n            })\r\n\r\n\r\n            await  axios.get('/api/invoices/send?'+idsString,\r\n                    {headers:this.state.options})\r\n                .then(async (response) =>{\r\n                    var res = await response.data\r\n                    console.log(res)\r\n                \r\n                })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Email Panel</h1>\r\n                \r\n                <p>\r\n                    Note: most recently made invoices will be retrieved,\r\n                    Only Invoices with a total greater than 0 will be retrrieved and sent\r\n                </p>\r\n\r\n                <div className=\"col\" style={{background:'grey'}}>\r\n                    <div className=\"row mb-2\">\r\n                    <label  class=\"sr-only\">Month</label>    \r\n                    <select class=\"form-control\" onChange={e => this.setState({month:e.target.value})}>\r\n                        <option>Month</option>\r\n                        <option value=\"1\" >January</option>\r\n                        <option value=\"2\" >Febuary</option>\r\n                        <option value=\"3\" >March</option>\r\n                        <option value=\"4\" >April</option>\r\n                        <option value=\"5\" >May</option>\r\n                    </select>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <label  class=\"sr-only\">Year</label>\r\n                        <select class=\"form-control\"  onChange={e => this.setState({year:e.target.value})}>\r\n                            <option></option>\r\n                            <option value=\"2021\" >2021</option>\r\n                            <option value=\"2022\" >2022</option>\r\n                            <option value=\"2023\" >2023</option>\r\n                            <option value=\"2024\" >2024</option>\r\n                        </select>\r\n                    </div>\r\n                   \r\n                    <div className=\"row mb-2\">\r\n                        <label  class=\"sr-only\">Search By</label>\r\n                        <select class=\"form-control\" onChange={this.setSearchBy}>\r\n                            <option></option>\r\n                            <option value=\"0\" >Students</option>\r\n                            <option value=\"1\" >Parents</option>\r\n                            \r\n                        \r\n                        </select>\r\n                    </div>\r\n\r\n                {\r\n                    this.state.filterBy != null?\r\n                        this.state.filterBy == 0?\r\n                        <div className=\"row mb-2\">\r\n                            <label  class=\"sr-only\">Students</label>\r\n                            <input class=\"form-control\" placeholder=\"enter students name....\" />                    \r\n                    \r\n                        </div>\r\n                        :\r\n\r\n                        <div className=\"row mb-2\">\r\n                            <label  class=\"sr-only\">Parent</label>\r\n                            <input class=\"form-control\" placeholder=\"enter parent name....\" />                    \r\n                    \r\n                        </div>\r\n\r\n\r\n                    \r\n                    :null\r\n                }\r\n\r\n                {\r\n                    \r\n                    this.state.filterBy != null?\r\n                        this.state.filterBy == 0?\r\n                        <div className=\"mb-2\">\r\n\r\n                                {this.state.students.map((item,index)=>(\r\n                                \r\n                                <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" value={item} id={item._id} onChange={e=>this.setStudentCheckbox(e,item)} />\r\n                                <label class=\"form-check-label\" >\r\n                                    {item.firstName + ' ' + item.lastName}\r\n                                </label>\r\n                                </div> \r\n                            ))}                     \r\n                    \r\n                        </div>\r\n                        :\r\n\r\n                        <div className=\" mb-2\">\r\n                            {this.state.parents.map((item,index)=>(\r\n                               \r\n                                <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" value={item} id={item._id} onChange={e=>this.setParentCheckbox(e,item)} />\r\n                                <label class=\"form-check-label\" >\r\n                                    {item.firstName + ' ' + item.lastName}\r\n                                </label>\r\n                                </div> \r\n                            ))}                 \r\n                    \r\n                        </div>\r\n\r\n\r\n                    \r\n                    :null\r\n                }\r\n\r\n                {\r\n                    <div className=\"row mb-2\">\r\n                        <div class=\" col-2 form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" onChange={e=>this.setState({includeMonth:!this.state.includeMonth})}  />\r\n                            <label class=\"form-check-label\">\r\n                                Month\r\n                            </label>\r\n                        </div>\r\n                        <div class=\" col-2 form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" onChange={e=>this.setState({includeYear:!this.state.includeYear})} />\r\n                            <label class=\"form-check-label\" >\r\n                                Year\r\n                            </label>\r\n                        </div>\r\n                        <div class=\" col-2 form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" onChange={e=>this.setState({inlcudeStudentsParents:!this.state.inlcudeStudentsParents})} />\r\n                            <label class=\"form-check-label\" >\r\n                                Students/Parents\r\n                            </label>\r\n                        </div>\r\n                    </div>    \r\n                }\r\n\r\n                {\r\n                    <button className=\"btn btn-primary\" onClick={this.search}>Search</button>\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                {this.state.invoices.length > 0?\r\n\r\n                <div>\r\n                    <div>\r\n                        <button className=\"btn btn-warning\" onClick={this.sendInvoices}> Send Invoices </button>\r\n                    </div>    \r\n                \r\n                    {this.state.invoices.map((invoice,index)=>(\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                {invoice.issueDate}\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                {invoice.month}\r\n                            </div> \r\n                            <div class=\"col\">\r\n                                {invoice.year}\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                {invoice.parent.firstName}\r\n                            </div>       \r\n\r\n                        </div>    \r\n                    ))}\r\n                </div>\r\n                :null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n             \r\n\r\n                \r\n                    \r\n\r\n                 \r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default EmailPanel","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Payments\\PaymentPanel.js",["643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport qs from 'qs'\r\nimport { saveAs } from 'file-saver';\r\nimport Months from '../../Enums/Months'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload,faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nfunction saveByteArray(reportName, byte) {\r\n    \r\n    var blob = new Blob([byte], {type: \"application/pdf\"});\r\n    var link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    var fileName = reportName;\r\n    link.download = fileName;\r\n    link.click();\r\n};\r\nclass PayementPanel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n            parents:null,\r\n            students:null,\r\n            chosenParents:[],\r\n            chosenStudents:[],\r\n            findBy:2,\r\n            chosenParent:null,\r\n            includeMonth:false,\r\n            includeYear:false,\r\n            inlcudeStudentsParents:false,\r\n            invoices:null,\r\n            invoicesCopy:null,\r\n            showPaymentModal:false,\r\n            modalIvoice:null,\r\n            modalInvoiceIndex:null,\r\n            modalPaidStatus:null,\r\n            modalPaymentAmount:null,\r\n            month:null,\r\n            year:null,\r\n            formSubmitted:false,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var pid = queryString.pid? queryString.pid : null\r\n        var sid = queryString.sid? queryString.sid : null\r\n        var month = queryString.month? queryString.month : null\r\n        var year = queryString.year? queryString.year : null\r\n\r\n        if(year != null){\r\n            this.setState({year:year})\r\n            this.setState({includeYear:true})\r\n        }\r\n        if(month != null){\r\n            \r\n            this.setState({month:month})\r\n            this.setState({includeMonth:true})\r\n        }\r\n        if(sid != null){\r\n            var list = []\r\n            if(!Array.isArray(sid)){\r\n                list = [sid]\r\n            }else{\r\n                list = sid\r\n            }\r\n            \r\n            this.setState({chosenStudents:list})\r\n            \r\n        }\r\n        if(pid != null){\r\n            var list = []\r\n            if(!Array.isArray(pid)){\r\n                list = [pid]\r\n            }else{\r\n                list = pid\r\n            }\r\n            \r\n            this.setState({chosenParents:list})\r\n            this.setState({inlcudeStudentsParents:true})\r\n            this.setState({findBy:0})\r\n        }\r\n\r\n\r\n       var parents = await this.getParents()\r\n       this.setState({parents:parents})\r\n\r\n       var students = await this.getStudents()\r\n       this.setState({students:students})\r\n    }\r\n\r\n    getParents = async () =>{\r\n        var parents = [];\r\n\r\n        await  axios.get('/api/parents/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                parents = await response.data\r\n            \r\n            })\r\n\r\n        return parents\r\n    }\r\n\r\n    getStudents = async () =>{\r\n        var students = [];\r\n\r\n        await  axios.get('/api/students/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                students = await response.data\r\n            \r\n            })\r\n\r\n        return students\r\n    }\r\n\r\n    toggleShowPaymentModal = async (index = null,invoice = null) =>{\r\n        this.setState({modalIvoice:invoice})\r\n        this.setState({modalIvoiceIndex:index})\r\n        this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n    }\r\n\r\n    setModalPaymentAmount = async (e) =>{\r\n        var amount = e.target.value;\r\n        this.setState({modalPaymentAmount:amount})\r\n\r\n    }\r\n\r\n    resolveInvoice = async () =>{\r\n         this.state.invoices[this.state.modalIvoiceIndex].paidStatus = await this.state.modalPaidStatus\r\n         this.state.invoices[this.state.modalIvoiceIndex].paymentAmount = await this.state.modalPaymentAmount\r\n         this.state.invoices[this.state.modalIvoiceIndex].changed = await true\r\n\r\n\r\n         this.setState({modalInvoiceIndex:null})\r\n         this.setState({modalPaymentAmount:null})\r\n         this.setState({modalPaidStatus:null})\r\n         this.setState({modalIvoice:null})\r\n         this.toggleShowPaymentModal();\r\n         \r\n        \r\n    }\r\n\r\n    paidExact = async (index) =>{\r\n        var  invoices = await this.state.invoices.slice()\r\n\r\n\r\n        if(invoices[index].changed != null){\r\n            invoices[index].paidStatus = null\r\n            invoices[index].paymentAmount = null\r\n            invoices[index].changed = null;\r\n\r\n        }else{\r\n         invoices[index].paidStatus = await 0\r\n         invoices[index].paymentAmount = await invoices[index].total\r\n         invoices[index].changed = true;\r\n        }\r\n         await this.setState({invoices:invoices})     \r\n        \r\n        \r\n    }\r\n\r\n    confirmPayment = async (e) =>{\r\n        if(this.state.modalPaymentAmount != null){\r\n        if(this.state.modalPaymentAmount != this.state.modalIvoice.total){\r\n            if(this.state.modalPaidStatus ==1){\r\n                if(this.state.modalPaymentAmount < this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too much')\r\n                }\r\n            }else if(this.state.modalPaidStatus ==2){\r\n                if(this.state.modalPaymentAmount > this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too less')\r\n                }\r\n            }\r\n\r\n        }else{\r\n            alert('cannot add ')\r\n        }\r\n    }else{\r\n        alert('no changes made');\r\n    }\r\n\r\n    }\r\n\r\n    getInvoices = async  (e)=>{\r\n        var qString = \"\"\r\n        var year = null\r\n        var month = null\r\n        var sids = \"\"\r\n        var pids = \"\"\r\n\r\n\r\n        if(this.state.month != null && this.state.month != \"0\"){\r\n            month = await this.state.month\r\n            qString = await qString + \"month=\" +month+\"&\"\r\n        }\r\n\r\n        if(this.state.year != null && this.state.year != \"0\"){\r\n            var year = await this.state.year\r\n            qString = await qString + \"year=\" +year+\"&\"\r\n        }\r\n       \r\n        if(this.state.chosenParents.length>0){\r\n            await this.state.chosenParents.map(async(pid,index)=>{\r\n                pids = await \"pid=\"+pid.toString()+\"&\"\r\n            })\r\n        }\r\n\r\n        if(this.state.chosenStudents.length>0){\r\n            await this.state.chosenStudents.map( async(sid,index)=>{\r\n                sids = await \"sid=\"+sid.toString()+\"&\"\r\n            })\r\n        }\r\n        await console.log(qString,sids,pids)\r\n        await  axios.get('/api/invoices/query?'+qString+pids+\"&\"+sids+\"includeOA=1\",\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n               var invoices = await response.data\r\n                console.log(invoices)\r\n               this.setState({invoices:invoices})\r\n               this.setState({invoicesCopy:invoices})\r\n            \r\n            })       \r\n    }\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    saveChanges = async (e) =>{\r\n\r\n        var nonNullInvoices = await this.state.invoices?.filter(a=>a.changed != null)\r\n        var changedInvoices = await nonNullInvoices?.filter(a=>a.changed == true)\r\n\r\n        await changedInvoices?.map(async (invoice,index)=>{\r\n            \r\n            await  axios.get('/api/invoices/update-payment?id='+invoice._id+'&amount='+invoice.paymentAmount+'&status='+invoice.paidStatus,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                console.log(response.data)\r\n                await this.setState({formSubmitted:true})\r\n            \r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    download =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n\r\n\r\n       var blob = new Blob([\"data:application/pdf;base64,\" + base],\r\n                { type: \"text/plain;charset=utf-8\" });\r\n                var fileURL = URL.createObjectURL(blob);\r\n                window.open(fileURL);\r\n                saveAs(blob, \"static.txt\");\r\n  \r\n    }\r\n\r\n    filterInvoices = (type) =>{\r\n\r\n        \r\n        switch(parseInt(type)){\r\n\r\n            case 0://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 0)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 1://paid exact\r\n            var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 1)\r\n            this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 2://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 2)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            default://paid exact\r\n             \r\n                this.setState({invoices:this.state.invoicesCopy})\r\n                break\r\n         \r\n\r\n\r\n\r\n            \r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container\">\r\n            <h1>Payement Panel</h1>\r\n\r\n            <p>Invoices are retrieved using the filters</p>\r\n            <p>Any over or underpayed invoices will also be retrieved</p>\r\n            <p>Only shows created invoices</p>\r\n\r\n            {\r\n                    this.state.formSubmitted?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                        congrats lessons have been created\r\n                    </div>\r\n                    :null\r\n            }\r\n\r\n            <div className=\"col\">\r\n            <div className=\"row mb-3\">\r\n                    <label  class=\"sr-only\">Month</label>    \r\n                    <select class=\"form-control\" defaultValue={this.state.month} onChange={e => this.setState({month:e.target.value})}>\r\n                        <option value=\"0\">Month</option>\r\n                        {Months.map((month,index)=>(\r\n                            <option selected={this.state.month == (index+1)} value={index+1} >{month}</option>\r\n                        ))}\r\n                     \r\n                    </select>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <label  class=\"sr-only\">Year</label>\r\n                        <select class=\"form-control\"  onChange={e => this.setState({year:e.target.value})}>\r\n                            <option value=\"0\">year</option>\r\n\r\n                            \r\n                            <option selected={this.state.year == 2021} value=\"2021\" >2021</option>\r\n                            <option selected={this.state.year == 2022} value=\"2022\" >2022</option>\r\n                            <option selected={this.state.year == 2023} value=\"2023\" >2023</option>\r\n                            <option selected={this.state.year == 2024} value=\"2024\" >2024</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                \r\n                    \r\n                      \r\n                     \r\n                 \r\n            </div>\r\n            <div>\r\n              \r\n                    \r\n                    <div className=\"row mb-3\">\r\n                        <label  class=\"sr-only\">Parents</label>\r\n                        <select class=\"form-control\"  onChange={e => this.setState({chosenParents: [...this.state.chosenParents,e.target.value]})}>\r\n                            <option>parents</option>\r\n                            {this.state.parents?.map((parent,index)=>(\r\n                                <option value={parent._id}>{parent.firstName + ' ' + parent.lastName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div>\r\n        \r\n                    \r\n                    <div className=\"row mb-3\">\r\n                        <label  class=\"sr-only\">Students</label>\r\n                        <select class=\"form-control\"  onChange={e => this.setState({chosenStudents: [...this.state.chosenStudents,e.target.value]})}>\r\n                            <option>students</option>\r\n                            {this.state.students?.map((student,index)=>(\r\n                                <option value={student.parent._id}>{student.firstName + ' ' + student.lastName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n            \r\n            </div>\r\n\r\n            \r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.getInvoices}>Get Invoices</button>\r\n\r\n                </div>\r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.saveChanges}>Save Changes</button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {this.state.invoices?\r\n            <div className=\"btn-group mb-5\" role=\"group\" aria-label=\"Basic checkbox toggle button group\">\r\n                    \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(3)} for=\"btncheck3\">All</button>\r\n          \r\n            \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(0)} for=\"btncheck3\">Paid Exact</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(1)} for=\"btncheck3\">Paid Less</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(2)} for=\"btncheck3\">Paid More</button>\r\n          \r\n          </div>\r\n            \r\n            \r\n            :null}\r\n            \r\n\r\n            {\r\n                this.state.invoices?\r\n\r\n                    this.state.invoices.length > 0 ? \r\n\r\n                <div className=\"card card-body\" style={{background: 'rgb(204, 204, 255)' }}>                \r\n\r\n                                <div class=\"row\">\r\n                                        <div className=\"col\">\r\n                                            Download\r\n                                        </div>    \r\n                                        <div className=\"col\">\r\n                                            Month\r\n                                        </div> \r\n                                        <div className=\"col\">\r\n                                            Year\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            Parent\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            total\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            created\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            sent\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            Paid Exact\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            Custom Payement\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            Payment Recorded\r\n                                        </div>       \r\n                                    </div> \r\n                            {\r\n                                this.state.invoices.map((invoice,index)=>(\r\n                                    <div class=\"row mb-1\">\r\n                                        <div className=\"col\">\r\n                                            <button className=\"btn btn-danger\" disabled={invoice.created == 0} onClick={e=>this.download(invoice)} ><FontAwesomeIcon icon={faDownload} color=\"green\"  size=\"lg\" /> </button>\r\n                                        </div>    \r\n                                        <div className=\"col\">\r\n                                            {invoice.month}\r\n                                        </div> \r\n                                        <div className=\"col\">\r\n                                            {invoice.year}\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            {invoice.parent.firstName + ' ' + invoice.parent.lastName }\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            {invoice.total}\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            {invoice.created}\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            {invoice.sent?invoice.sent:<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" />}\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button className=\"btn btn-primary\" onClick={e=>this.paidExact(index)}>{\"paid £\"+invoice.total}</button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button className=\"btn btn-warning\" onClick={e=>this.toggleShowPaymentModal(index,invoice)} >Custom payment</button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                invoice.paymentAmount\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>    \r\n                                ))\r\n                            }\r\n\r\n                        </div>    \r\n\r\n                    :\r\n\r\n                        <div className=\"mb-5\">\r\n                            No Invoices Found in this range\r\n                        </div>    \r\n\r\n                \r\n                :null\r\n            }\r\n\r\n            {\r\n                this.state.modalIvoice?\r\n                    <Modal isOpen={this.state.showPaymentModal} toggle={e=>this.toggleShowPaymentModal(null,null)} >\r\n                        <ModalHeader >Custom Payment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {this.state.modalIvoice.parent.firstName}\r\n                                     \r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" onChange={e=>this.setState({modalPaidStatus:1})} />\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid Less\r\n                                            </label>\r\n                                            </div>\r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option3\" onChange={e=>this.setState({modalPaidStatus:2})}/>\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid More\r\n                                            </label>\r\n                                            </div>\r\n\r\n\r\n                                            {this.state.modalPaidStatus?\r\n                                                this.state.modalPaidStatus != 0?\r\n                                                <div className=\"row mb-3\">\r\n                                                <label  class=\"form\">Payment amount</label>    \r\n                                                <input class=\"form-control\" required  type=\"number\" step=\".01\" min=\"0\" onChange={this.setModalPaymentAmount}/>\r\n                                                   \r\n                                                \r\n                                                </div>   \r\n                                                :null                                               \r\n\r\n                                            :null}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                           \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.confirmPayment} >Confirm</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={e=>this.toggleShowPaymentModal(null,null)}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>:null\r\n            }\r\n\r\n        </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PayementPanel","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\MonthlyReport.js",["664"],"import {Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nimport jsPDF from 'jspdf'\r\nclass MonthlyReport extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            fromDate:new Date(\"2021-12-25\"),\r\n            toDate:new Date(\"2022-01-25\"),\r\n            data:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    getData = async (e) =>{\r\n\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n\r\n            if(this.state.fromDate < this.state.toDate){\r\n                    await  axios.get('/api/taken-lessons/query-monthly-report?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()        ,\r\n                    {headers:this.state.options})\r\n                .then(async (response) =>{\r\n                    console.log(response.data)\r\n                    await this.setState({data:response.data})\r\n                \r\n                })\r\n            }else{\r\n                alert('date error')\r\n            }\r\n        }else{\r\n            alert('missing dates')\r\n        }\r\n    }\r\n\r\n    download = async () =>{\r\n        var doc = new jsPDF('p', 'pt', 'a2');     \r\n        doc.setFontSize(10);   \r\n       \r\n        var source = await window.document.getElementById(\"MonthlyReport\")\r\n        await doc.html(\r\n            source\r\n            );\r\n\r\n\r\n           await doc.output(\"dataurlnewwindow\");\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"MonthlyReport\" className=\"container\">\r\n                <h1>Monthly Report</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <label>From Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.fromDate}\r\n                                onChange={date => this.setState({fromDate:date})}\r\n                                />  \r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <label>To Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.toDate}\r\n                                onChange={date => this.setState({toDate:date})}\r\n                                />  \r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-warning\" onClick={this.getData}>Get Report</button>\r\n                    </div>                  \r\n                </div>\r\n                <div className=\"m-2\">\r\n                        <button className=\"btn btn-success\" onClick={this.download}>\r\n                            Download\r\n                        </button>\r\n                    \r\n                </div>    \r\n                {\r\n                    this.state.data?\r\n                        \r\n                        <div className=\"col\">\r\n                            <div className=\"row\">\r\n                            <div class=\"card text-white bg-danger mt-3 mb-3 w-100 \" >\r\n                            <div class=\"card-header\">Revenue</div> \r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">{this.state.data.revenue[0]?.revenue}</h5>\r\n                                \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div class=\"card text-white bg-primary mb-3 w-100 \" >\r\n                            <div class=\"card-header\">Teacher Salaries</div> \r\n                            <div class=\"card-body\">\r\n                                {this.state.data.teacherPay.map((teacherPay,index)=>(\r\n                                    <h5 class=\"card-title\">{teacherPay?.teacher +'   Pay : '+teacherPay.totalPay + \" Actual Rate : \" + this.state.data.actualRates.find((rate)=> rate.teacher[0].fullName == teacherPay.teacher)?.rate} </h5>\r\n                                ))}\r\n                                \r\n                                \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div class=\"card text-white bg-warning mb-3 w-100 \" >\r\n                            <div class=\"card-header\">Cash Revenue</div> \r\n                            <div class=\"card-body\">  {this.state.data.revenueFromCash[0]?.amount}                               \r\n                                \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-info mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Number of Taken Lessons</div> \r\n                                    <div class=\"card-body\">  {this.state.data.numberOfTakenLessons}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-info mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Number of Lessons Added</div> \r\n                                    <div class=\"card-body\">  {this.state.data.numberOfLessonsCreated}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-info mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Number of Students Added</div> \r\n                                    <div class=\"card-body\">  {this.state.data.numberOfStudentsCreated}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-info mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Number of Parents Added</div> \r\n                                    <div class=\"card-body\">  {this.state.data.numberOfParentsCreated}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-success mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Number of Invoices Created</div> \r\n                                    <div class=\"card-body\">  {this.state.data.numberOfInvoicesCreated}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div class=\"card text-white bg-success mb-3 w-100 \" >\r\n                                    <div class=\"card-header\">Cost</div> \r\n                                    <div class=\"card-body\"> £ {this.state.data.cost}                               \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                :null} \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default MonthlyReport","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\StudentRecords.js",["665","666","667","668"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport StudentRecordsRow from './StudentRecordsRow'\r\nimport qs from 'qs'\r\nclass StudentRecords extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sortBy:null,\r\n            skip:0,\r\n            students:null,\r\n            filteredStudents:null,\r\n            sid:null,\r\n            searchString: \"\",\r\n            options :{ authorization: this.props.token,userid:this.props.userId } }\r\n    }\r\n\r\n    componentDidMount =  async ()=>{\r\n        var queryString = await qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var sid = await queryString.sid? queryString.sid : null\r\n        if(sid != null){\r\n            this.setState({sid:sid})\r\n            await this.getData();\r\n        }\r\n    }\r\n\r\n    getData = async () =>{\r\n\r\n        \r\n        if(this.state.sid != null){\r\n\r\n            await axios.get('/api/students/sid?id='+this.state.sid,\r\n            {headers:this.state.options})\r\n            .then(async response => {\r\n                 var data = await response.data;\r\n             \r\n                 this.setState({students:data})\r\n                 this.setState({filteredStudents:data})\r\n               \r\n             \r\n            });  \r\n\r\n        }else{\r\n\r\n        await axios.get('/api/students/search?searchString='+this.state.searchString,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(\"search\")\r\n             this.setState({students:data})\r\n             this.setState({filteredStudents:data})\r\n           \r\n         \r\n        });\r\n\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    prev = async () =>{\r\n        if(this.state.skip != 0){\r\n            await this.setState({skip:this.state.skip-300})\r\n            await this.getData()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    next = async () =>{\r\n\r\n        if(this.state.students.length > 0){\r\n            await this.setState({skip:this.state.skip+300})\r\n            await this.getData()\r\n        }\r\n\r\n    }\r\n\r\n    deleteStudent = async (studentId,index) =>{\r\n        console.log(index)\r\n        var students = this.state.filteredStudents;\r\n\r\n        await axios.delete('/api/students?id='+studentId,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(data)           \r\n         \r\n        });\r\n\r\n        students.splice(index,1)\r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n\r\n    filter = async (e) =>{\r\n        var filter = e.target.value\r\n        this.setState({searchString: e.target.value})\r\n        \r\n        await axios.get('/api/students/search?searchString='+this.state.searchString,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(\"search\")\r\n             this.setState({students:data})\r\n             this.setState({filteredStudents:data})\r\n           \r\n         \r\n        });\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Student Records</h1>\r\n                <div>\r\n                    <label>Sort By</label>\r\n                    <select className=\"form-control form-select\" onChange={e=>this.setState({sortBy:e.target.value})}>\r\n                        <option selected>Open this select menu</option>\r\n                        <option value=\"firstName\">first name</option>\r\n                        <option value=\"lastName\">last name</option>\r\n                        <option value=\"3\">school</option>\r\n                    </select>\r\n                </div>\r\n                {\r\n     \r\n                    <div className=\"mt-4 mb-3\">\r\n                   <input className=\"form-control\" placeholder=\"start typing..\" onChange={this.filter}/>\r\n                </div>\r\n                  \r\n\r\n                }\r\n                \r\n              \r\n                <table class=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">discount</th>\r\n                        <th scope=\"col\">Payment type</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {this.state.filteredStudents?\r\n                        this.state.filteredStudents.map((student,index)=>(\r\n\r\n                            student.firstName != \"deleted\"?\r\n\r\n                            <   StudentRecordsRow \r\n                                options={this.state.options}\r\n                                student={student}\r\n                                deleteStudent={this.deleteStudent}\r\n                            \r\n                                index={index}\r\n                           />\r\n                            :null\r\n                          \r\n                        ))\r\n                       :null}\r\n                    </tbody>\r\n                    </table>\r\n                    {\r\n                     \r\n                        \r\n                        // <div className=\"row\">\r\n                        //     <div className=\"col\">\r\n                        //         <button disabled={this.state.students == null || this.state.skip ==0 } className=\"btn btn-primary\" onClick={this.prev}>prev</button>\r\n        \r\n                        //     </div>\r\n                        //     <div className=\"col\">\r\n                        //         <button disabled={this.state.students == null || this.state.students?.length == 0} className=\"btn btn-primary\" onClick={this.next}>next</button>\r\n                        //     </div>\r\n    \r\n                        // </div>                     \r\n                        \r\n                        \r\n           \r\n                    \r\n                 }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentRecords","C:\\git\\mslc\\mslc\\src\\components\\Admin\\AddNewStudents2.js",["669","670"],"import React,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport Prices from '../Enums/Prices'\r\nimport Subjects from '../Enums/Subjects'\r\nimport LessonTypes from '../Enums/LessonType'\r\nimport Days from '../Enums/Days'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport YearGroups from '../Enums/YearGroup';\r\nimport axios from 'axios'\r\nimport PaymentTypes from '../Enums/PaymentTypes';\r\nimport Constants from '../../Constants';\r\nconst maxLength  = 15;\r\nfunction validateEmail (email) {\r\n    const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regexp.test(email);\r\n  }\r\nclass CreateNewStudent2 extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n            parent:{},\r\n            students:[],\r\n            subjects:Subjects,\r\n            lessonTypes:LessonTypes,\r\n            yearGroups:YearGroups,\r\n            paymentTypes:PaymentTypes,\r\n            teachers:null,\r\n            days:Days,\r\n            formSubmitted:false,\r\n            emailExists:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId }\r\n            \r\n\r\n\r\n          \r\n        }\r\n    }\r\n    componentDidMount = async () =>{\r\n        console.log(\"mount\")\r\n        await this.getTeachers();\r\n        console.log(this.state.teachers)\r\n       \r\n     }\r\n\r\n\r\n    getTeachers = async () =>{\r\n    \r\n        await axios.get('/api/teacher')\r\n        .then(async response => {\r\n            var teachers = response.data\r\n            console.log(teachers)\r\n            this.setState({teachers:teachers})\r\n        })\r\n    }\r\n\r\n    checkIfEmailExists = async (e)=>{\r\n        const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        var email = this.state.parent.email\r\n        var correctFormat = await  regexp.test(email);    \r\n        \r\n        if(correctFormat){\r\n            \r\n            await axios.get('/api/parent/check-email?email='+email)\r\n            .then(async response => {\r\n                console.log(response.data)\r\n                this.setState({emailExists:(response.data.length > 0)})\r\n                \r\n            })\r\n        }else{\r\n            alert('incorrect format for email')\r\n        }\r\n        \r\n    }\r\n\r\n    addStudent = async () =>{\r\n        const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        var correctFormat = await  regexp.test(this.state.parent.email);       \r\n        \r\n        if(correctFormat&&this.state.parent.firstName != null && this.state.parent.lastName != null && this.state.parent.email != null){\r\n           \r\n            var obj = {\r\n                firstName:null,\r\n                lastName:null,\r\n                yearGroup:\"1KS\",\r\n                paymentMethod:0,\r\n                discount:0,\r\n                school:null,\r\n                ability:null,\r\n                lessons:[]\r\n    \r\n            }\r\n    \r\n            this.setState({students:[...this.state.students,obj]})\r\n\r\n        }else{\r\n            alert('missing parent info')\r\n        }\r\n        \r\n    }\r\n\r\n    removeStudent = (index) =>{\r\n        var students = this.state.students;\r\n        students.splice(index,1)\r\n        this.setState({students:students})\r\n\r\n    }\r\n\r\n    removeLesson = (index,lessonIndex) =>{\r\n        var students = this.state.students\r\n        var student = students[index];\r\n       \r\n        student.lessons.splice(lessonIndex,1)\r\n        this.setState({students:students})\r\n\r\n    }\r\n\r\n    addLesson = async (index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        var isCorrect = true;\r\n\r\n        console.log(student.yearGroup)\r\n        if(student.firstName == null || student.lastName == null || student.discount == null || student.school == null || student.yearGroup == null || student.ability == null){\r\n            isCorrect = await false;\r\n        }\r\n\r\n\r\n        if(isCorrect){\r\n        var lesson = {\r\n            subject:null,\r\n            teacher:null,\r\n            rateKey:student.yearGroup.charAt(0)+\"00\",\r\n            day:null,\r\n            price:null,\r\n            startDate:new Date('2021-07-24'),\r\n            endDate:new Date('2024-07-24'),\r\n            padj:0,\r\n            fadj:0\r\n        }\r\n\r\n        student.lessons.push(lesson)\r\n\r\n        this.setState({students:[...students]})\r\n        }else{\r\n            alert('missing info')\r\n        }\r\n    }\r\n\r\n\r\n    setParentFirstName = (e) =>{\r\n        var parent = this.state.parent\r\n\r\n        parent.firstName = e.target.value;\r\n\r\n        this.setState({parent:parent})\r\n\r\n\r\n    }\r\n    setParentLastName = (e) =>{\r\n        var parent = this.state.parent\r\n\r\n        parent.lastName = e.target.value;\r\n\r\n        this.setState({parent:parent})\r\n\r\n\r\n    }\r\n\r\n    setParentEmail = (e) =>{\r\n\r\n        \r\n\r\n        var parent = this.state.parent\r\n\r\n        parent.email = e.target.value;\r\n\r\n        this.setState({parent:parent})\r\n\r\n\r\n    }\r\n\r\n    setStudentFirstName = (e,index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.firstName = e.target.value\r\n\r\n        this.setState({students:students})\r\n    }\r\n\r\n    setStudentLastName = (e,index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.lastName = e.target.value\r\n\r\n        this.setState({students:students})\r\n    }\r\n\r\n    setStudentSchool = (e,index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.school = e.target.value\r\n\r\n        this.setState({students:students})\r\n    }\r\n    setStudentDiscount= (e,index) =>{\r\n\r\n        if(parseFloat(e.target.value) <=100 && parseFloat(e.target.value)>=0){\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.discount = e.target.value\r\n\r\n        this.setState({students:students})\r\n        }else{\r\n            alert('invalid discount')\r\n        }\r\n    }\r\n\r\n    setStudentYearGroup = async (e,index) =>{\r\n      \r\n        var students = this.state.students\r\n        var student = students[index]\r\n\r\n        student.yearGroup = YearGroups[e.target.value]\r\n        \r\n        if(student.lessons.length > 0){\r\n            student.lessons.map(async(lesson,index)=>{               \r\n                \r\n                lesson.rateKey = await this.setCharAt(lesson.rateKey,0,student.yearGroup.charAt(0))\r\n                lesson.groupRateKey = await this.setCharAt(lesson.rateKey,0,student.yearGroup.charAt(0))\r\n                lesson.singleRateKey = await this.setCharAt(lesson.rateKey,0,student.yearGroup.charAt(0))\r\n                console.log(lesson.rateKey);\r\n                lesson.price = await Prices[lesson.rateKey]\r\n\r\n            })\r\n        }\r\n       student.yearGroup = e.target.value\r\n        await this.setState({students:students})\r\n    }\r\n\r\n    setStudentAbility = (e,index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.ability = e.target.value\r\n\r\n        this.setState({students:students})\r\n    }\r\n\r\n    setStudentPaymentMethod = (e,index) =>{\r\n        var students = this.state.students\r\n        var student = students[index]\r\n        student.paymentMethod = e.target.value\r\n\r\n        this.setState({students:students})\r\n    }\r\n\r\n    setCharAt = (str,index,chr) => {\r\n      \r\n        return str?.substring(0,index) + chr + str?.substring(index+1);\r\n    }\r\n\r\n\r\n    setSubject = (e,studentIndex,lessonIndex) =>{\r\n        var subject = Subjects[e.target.value]\r\n        var subjectIndex = e.target.value;\r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        lesson.subject = subjectIndex;\r\n        lesson.rateKey = this.setCharAt(lesson.rateKey,2,subject.charAt(0))\r\n        lesson.groupRateKey = this.setCharAt(lesson.rateKey,2,subject.charAt(0))\r\n        lesson.singleRateKey = this.setCharAt(lesson.rateKey,2,subject.charAt(0))\r\n        lesson.price = Prices[lesson.rateKey]\r\n        lesson.singlePrice = Prices[lesson.singleRateKey]\r\n        console.log(lesson.rateKey)\r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setLessonType = async (e,studentIndex,lessonIndex) =>{\r\n        var lessonType = e.target.value;\r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.rateKey = await this.setCharAt(lesson.rateKey,1,lessonType.charAt(0))\r\n        lesson.groupRateKey = await this.setCharAt(lesson.rateKey,1,\"G\")\r\n        lesson.singleRateKey = await this.setCharAt(lesson.rateKey,1,\"O\")\r\n        lesson.price = await Prices[lesson.rateKey]\r\n        lesson.singlePrice = Prices[lesson.singleRateKey]\r\n        lesson.rate = await lesson.price*Constants.teacherCommision;\r\n\r\n\r\n        if(lessonType.charAt(0) === \"G\")\r\n        {           \r\n            lesson.lessonType = 0\r\n\r\n        } else if(lessonType.charAt(0) === \"O\"){\r\n         \r\n            lesson.lessonType = 1\r\n        }\r\n        console.log(lesson.rateKey)\r\n        await this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setTeacher = (e,studentIndex,lessonIndex) =>{\r\n        var teacherId = e.target.value;\r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.teacher = teacherId\r\n\r\n        console.log(lesson)\r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setLessonDay = (e,studentIndex,lessonIndex) =>{\r\n        var day = e.target.value;\r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.day = day\r\n\r\n        \r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setLessonStartDate = (studentIndex,lessonIndex,date) =>{\r\n      \r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.startDate = date\r\n\r\n        \r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n    setLessonEndDate = (studentIndex,lessonIndex,date) =>{\r\n       \r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.endDate = date\r\n\r\n        \r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setLessonFeeAdj = (e,studentIndex,lessonIndex) =>{\r\n       \r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.fadj = e.target.value?e.target.value:0\r\n\r\n        \r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n    setLessonPayAdj = (e,studentIndex,lessonIndex) =>{\r\n       \r\n        var students = this.state.students\r\n        var student = students[studentIndex]\r\n        var lesson = student.lessons[lessonIndex]\r\n        \r\n        lesson.padj = e.target.value?e.target.value:0\r\n\r\n        \r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n    \r\n\r\n    save = async () =>{\r\n\r\n\r\n            var parent = \r\n            {\r\n                parentFirstName: this.state.parent.firstName,\r\n                parentLastName: this.state.parent.lastName,\r\n                parentEmail: this.state.parent.email\r\n                \r\n\r\n            }\r\n\r\n            parent.students = this.state.students.map((student, index)=>\r\n            {\r\n                var lessons = student.lessons.map((lesson, index)=>\r\n                {\r\n                    var les = \r\n                    {\r\n                        studentId: 0,\r\n                        teacherId: parseInt(lesson.teacher),\r\n                        subject: parseInt(lesson.subject),\r\n                        yearGroup: parseInt(student.yearGroup),\r\n                        feeAdjustment: parseInt(lesson.fadj),\r\n                        payAdjustment: parseInt(lesson.padj)\r\n                    }\r\n                    return les\r\n                })\r\n\r\n                var obj = \r\n                {\r\n                    firstName: student.firstName,\r\n                    lastName: student.lastName,\r\n                    lessons: lessons\r\n                }\r\n\r\n                return obj;\r\n            })\r\n         \r\n\r\n            console.log(parent);\r\n\r\n            const data2 = {\r\n                ParentFirstName: \"james\",\r\n                \"parentLastName\": \"reed\",\r\n                \"parentEmail\": \"hamid-val@hotmail.co.uk\",\r\n                \"students\": [\r\n                  {\r\n                    \"firstName\": \"john\",\r\n                    \"lastName\": \"reed\",\r\n                    \"lessons\": [\r\n                      {\r\n                        \"studentId\": 0,\r\n                        \"teacherId\": 1,\r\n                        \"subject\": 0,\r\n                        \"yearGroup\": 4,\r\n                        \"singleFee\": 30,\r\n                        \"groupFee\": 25,\r\n                        \"singlePay\": 20,\r\n                        \"groupPay\": 15,\r\n                        \"lessonType\":0,\r\n                        startDate: '2022-01-01',\r\n                        endDate: '2025-01-01'\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            \r\n             await axios.post('/api/lesson', data2)\r\n             .then(async(response)=>{\r\n                 await this.setState({formSubmitted:true}) \r\n\r\n                 setTimeout(function(){window.location.reload()}, 5000);\r\n         })\r\n           \r\n\r\n\r\n    \r\n\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n \r\n    render(){\r\n        return(<div >\r\n            <h1>Add New Students</h1>\r\n\r\n\r\n            <div className=\"container\">\r\n                <p>\r\n                    Students don't have to have lessons to be added to the system\r\n                </p>\r\n                {\r\n                    this.state.formSubmitted?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                        congrats lessons have been created\r\n                    </div>\r\n                    :null\r\n                }\r\n\r\n            <div className='form-style card container mb-3' style={{background:'#f2f2f2'}}>\r\n                <div className=\"form-group\">\r\n                     <label >Parent First Name</label>\r\n                     <input  class=\"form-control\" maxLength={maxLength} type=\"text\" placeholder=\"parent first name\" onChange={this.setParentFirstName}  />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label >Parent Last Name</label>\r\n                     <input  class=\"form-control\" maxLength={maxLength} type=\"text\"  placeholder=\"parent last name\" onChange={this.setParentLastName} required   />\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label >Parent Email</label>\r\n                     <input  class=\"form-control\" type=\"email\"  placeholder=\"parent email\" onChange={this.setParentEmail}    />\r\n                 </div>\r\n                 <div>\r\n                     <button className='btn btn-primary' onClick={this.checkIfEmailExists}>check email</button>\r\n                 </div>\r\n                 <div className='mt-3'>\r\n                     {this.state.emailExists == null?\r\n                           null\r\n                     :(\r\n                        this.state.emailExists == true?\r\n                            <div class=\"alert alert-danger\" role=\"alert\">\r\n                                email exists\r\n                            </div>\r\n                            \r\n                            :\r\n                            \r\n                            <div class=\"alert alert-primary\" role=\"alert\">\r\n                                email looks fine\r\n                            </div>\r\n                     )}\r\n                 </div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addStudent} >Add Student</button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-primary\" onClick={this.save} >Save Data</button>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {this.state.students.length>0?\r\n                this.state.students.map((student,index)=>(\r\n                    <div className='form-style card container' style={{background:'#f2f2f2'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >First Name</label>\r\n                            <input  class=\"form-control\"  placeholder=\"first name\" onChange={e=>this.setStudentFirstName(e,index)}  />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >Last Name</label>\r\n                            <input  class=\"form-control\"  placeholder=\"last name\" onChange={e=>this.setStudentLastName(e,index)}  />\r\n                        </div>\r\n                        </div> \r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >School</label>\r\n                            <input  class=\"form-control\"  placeholder=\"school\" onChange={e=>this.setStudentSchool(e,index)}    />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >Discount</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step=\"1\" class=\"form-control\"  placeholder=\"0-100\"  onChange={e=>this.setStudentDiscount(e,index)}  />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >Year Group</label>\r\n                            \r\n                            <select  class=\"form-control\" onChange={e=>this.setStudentYearGroup(e,index)} >\r\n\r\n\r\n                                            {this.state.yearGroups?\r\n                                             \r\n                                             \r\n                                                this.state.yearGroups.map((item,index)=>(\r\n                                                    <option disabled={student.lessons?.length >0} value={index} >{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                            </select>\r\n                        </div>\r\n                        </div> \r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >Ability</label>\r\n                            <input  class=\"form-control\"  placeholder=\"ability..\" onChange={e=>this.setStudentAbility(e,index)}   />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >Pay Type</label>\r\n                            <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>{this.setStudentPaymentMethod(e,index)}}>\r\n                                                \r\n                                                    {this.state.paymentTypes?\r\n                                                        this.state.paymentTypes.map((item,index)=>(\r\n                                                            <option value={index}>{item}</option>\r\n                                                        ))\r\n                                                    :\r\n                                                    <option>error</option>\r\n                                                    }\r\n                            </select>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >lessons</label>\r\n                            <button  class=\"btn btn-success\" onClick={e=>this.addLesson(index)}>Add lessons</button>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label >delete</label>\r\n                            <button  class=\"btn btn-danger\" onClick={e=>this.removeStudent(index)}>delete</button>\r\n                        </div>\r\n                        </div>             \r\n\r\n                    </div>\r\n                        {\r\n                            student.lessons?\r\n\r\n                                student.lessons.map((lesson,lessonIndex)=>(\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Subject</label>\r\n                                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>{this.setSubject(e,index,lessonIndex)}}>\r\n                                                <option></option>\r\n                                                    {this.state.subjects?\r\n                                                        this.state.subjects.map((item,index)=>(\r\n                                                            <option value={index}>{item}</option>\r\n                                                        ))\r\n                                                    :\r\n                                                    <option>error</option>\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Type</label>\r\n                                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>{this.setLessonType(e,index,lessonIndex)}}>\r\n                                                <option></option>\r\n                                                    {this.state.lessonTypes?\r\n                                                        this.state.lessonTypes.map((item,index)=>(\r\n                                                            <option>{item}</option>\r\n                                                        ))\r\n                                                    :\r\n                                                    <option>error</option>\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >teacher</label>\r\n                                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setTeacher(e,index,lessonIndex)}>\r\n                                                    <option></option>\r\n                                                        {this.state.teachers?\r\n                                                        this.state.teachers.map((item,index) => \r\n                                                            <option value={item._id}>{item.firstName}</option>\r\n                                                        )\r\n                                                        :\r\n                                                        <option>error</option>\r\n                                                        }\r\n                                                    </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            { \r\n                                                lesson?\r\n                                                    lesson.rateKey?\r\n                                                        Prices[lesson.rateKey]?\r\n                                                            Prices[lesson.rateKey]\r\n                                                        :\"No Rate\"\r\n                                                    :null\r\n                                                :null\r\n                                                \r\n                                            } \r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label>Pay Adj</label>\r\n                                            <input onChange={(e)=>this.setLessonPayAdj(e,index,lessonIndex)} className=\"form-control\" type=\"number\"/>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label>Fee Adj</label>\r\n                                            <input onChange={(e)=>this.setLessonFeeAdj(e,index,lessonIndex)} className=\"form-control\" type=\"number\"/>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label >days</label>\r\n                                            <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.setLessonDay(e,index,lessonIndex)}>\r\n                                            <option></option>\r\n                                                {this.state.days?\r\n                                                Object.keys(this.state.days).map(key => \r\n                                                    <option value={key}>{this.state.days[key]}</option>\r\n                                                )\r\n                                                :\r\n                                                <option>error</option>\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label >start date</label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={lesson.startDate}\r\n                                                onChange={date => this.setLessonStartDate(index,lessonIndex,date)}\r\n                                                />  \r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label >end date</label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={lesson.endDate}\r\n                                                onChange={date => this.setLessonEndDate(index,lessonIndex,date)}\r\n                                                 />  \r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                        <label >remove</label>\r\n                                        <div className=\"form-group\">\r\n                                            \r\n                                            <button  class=\"btn btn-danger\" onClick={e=>this.removeLesson(index,lessonIndex)} >remove</button>\r\n                                        </div>\r\n                                        </div>   \r\n                                    </div>    \r\n                                ))\r\n                            \r\n                            :null\r\n                        }\r\n                    </div>\r\n                ))\r\n            :null}\r\n\r\n            </div>\r\n\r\n        </div> )  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default CreateNewStudent2;","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\StudentRecordsRow.js",["671"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport YearGroups from '../../Enums/YearGroup';\r\nimport PaymentTypes from '../../Enums/PaymentTypes';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nclass StudentRecordsRow extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showOtherModal:false, \r\n            showDeleteModal:false,  \r\n            showEditModal:false,   \r\n            options :{ authorization: this.props.token,userid:this.props.userId } }\r\n    }\r\n\r\n\r\n    toggleOtherModal = () =>{\r\n        this.setState({showOtherModal:!this.state.showOtherModal})\r\n    }\r\n\r\n    toggleDeleteModal = () =>{\r\n        this.setState({showDeleteModal:!this.state.showDeleteModal})\r\n    }\r\n\r\n    toggleEditModal = () =>{\r\n        this.setState({showEditModal:!this.state.showEditModal})\r\n    }\r\n\r\n    deleteStudent = (e) =>{\r\n        this.props.deleteStudent(this.props.student._id,this.props.index)\r\n        this.toggleDeleteModal()\r\n    }\r\n\r\n\r\n    edit = async(e) => {\r\n      \r\n        await axios.post('/api/students/edit?id='+this.props.student._id,\r\n        {headers:this.props.options,student:this.props.student})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(data)    \r\n             this.toggleEditModal()       \r\n         \r\n        });\r\n\r\n        \r\n\r\n    }\r\n\r\n    updateFirstName = (e) =>{\r\n        this.props.student.firstName = e.target.value\r\n        this.props.student.changed = true\r\n    }\r\n    updateLastName = (e) =>{\r\n        this.props.student.lastName = e.target.value\r\n        this.props.student.changed = true\r\n    }\r\n  \r\n\r\n    setStudentDiscount= (e) =>{\r\n\r\n        if(parseFloat(e.target.value) <=100 && parseFloat(e.target.value)>=0){\r\n            this.props.student.discount = e.target.value\r\n            this.props.student.changed = true\r\n        }else{\r\n            alert('invalid discount')\r\n        }\r\n    }\r\n    updateSchool = (e) =>{\r\n        this.props.student.school = e.target.value\r\n        this.props.student.changed = true\r\n    }\r\n    updateYearGroup = (e) =>{\r\n        this.props.student.yearGroup = e.target.value\r\n        this.props.student.changed = true\r\n    }\r\n    updatePaymentType = (e) =>{\r\n        this.props.student.paymentMethod = e.target.value\r\n        this.props.student.changed = true\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n     \r\n                            <tr>\r\n                                <td>{this.props.index+1}</td>\r\n                                <td>{this.props.student._id}</td>\r\n                                <td>{this.props.student.firstName}</td>\r\n                                <td>{this.props.student.lastName}</td>\r\n                                <td>{this.props.student.discount}</td>\r\n                                <td>{this.props.student.paymentMethod?PaymentTypes[parseInt(this.props.student.paymentMethod)]:null}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={this.toggleDeleteModal}>Delete</button></td>\r\n                                <td><button className=\"btn btn-danger\" onClick={this.toggleEditModal}>Edit</button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={this.toggleOtherModal}>Other</button></td>\r\n\r\n                                <Modal isOpen={this.state.showOtherModal} toggle={this.toggleOtherModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"mb-3\" >\r\n                            <a className=\"btn btn-success\" href={'/admin/edit-student-lessons?id='+this.props.student._id} >View Lessons</a>\r\n                            </div>\r\n                            {/* <div className=\"mb-3\" >\r\n                            <a className=\"btn btn-success\" href={'/admin/modify-taken-lessons?id='+this.props.student._id} >View Taken Lessons</a>\r\n                            </div>  */}\r\n                            <div className=\"mb-3\" >\r\n                            <a className=\"btn btn-success\" href={'/admin/payment-panel?sid='+this.props.student._id} >View Invoice / Payments</a>\r\n                            </div>\r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            \r\n                            <Button color=\"secondary\" onClick={this.toggleOtherModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={this.toggleDeleteModal} >\r\n                        <ModalHeader >You are about to delete a student</ModalHeader>\r\n                        \r\n                        <ModalBody>\r\n\r\n                            <div>\r\n                                Warning! <br/>\r\n                                1. this will delete all their lessons <br/>\r\n\r\n                                2 . all their taken lessons will be unreferenced <br/>  \r\n                            </div>\r\n                            \r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.deleteStudent}>Delete</Button>\r\n                            <Button color=\"secondary\" onClick={this.toggleDeleteModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showEditModal} toggle={this.toggleEditModal} >\r\n                        <ModalHeader >Edit Student Details</ModalHeader>\r\n                        <ModalBody>\r\n                            <p>Note: \r\n                                only change if absolutly necessary, if it's easier to delete and create a new student, then please do,\r\n\r\n                                any details in taken lessons by this student will not be updated\r\n                            </p>\r\n\r\n                            <div className=\"container\">\r\n                                <div className=\"row form-group\">\r\n                                    <label>Frist Name</label>\r\n                                    <input className=\"form-control\" type=\"text\" maxLength=\"20\" onChange={this.updateFirstName}></input>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input className=\"form-control\" type=\"text\" maxLength=\"20\" onChange={this.updateLastName}></input>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <label>Discount</label>                               \r\n                                    <input type=\"number\" min=\"0\" max=\"100\" step=\"1\" class=\"form-control\"  placeholder=\"0-100\"  onChange={e=>this.setStudentDiscount(e)}  />\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <label>Year Group</label>\r\n                                    <select  class=\"form-control\" onChange={e=>this.updateYearGroup(e)} >\r\n                                            {YearGroups?                                           \r\n                                             \r\n                                                YearGroups.map((item,index)=>(\r\n                                                    <option  value={item} >{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                                    </select>\r\n             \r\n                                </div>\r\n\r\n                                <div className=\"row form-group\">\r\n                                    <label>Payment Type</label>\r\n                                    <select  class=\"form-control\" onChange={e=>this.updatePaymentType(e)} >\r\n                                            {PaymentTypes?                                           \r\n                                             \r\n                                                PaymentTypes.map((item,index)=>(\r\n                                                    <option  value={index} >{item}</option>\r\n                                                ))\r\n                                            :\r\n                                            <option>error</option>\r\n                                            }\r\n                                    </select>\r\n             \r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            \r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.edit}>Edit</Button>\r\n                            <Button color=\"secondary\" onClick={this.toggleEditModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                            </tr>\r\n                           \r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentRecordsRow","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\ParentRecords.js",["672","673"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport ParentRecordsRow from './ParentRecordsRow'\r\n\r\nclass ParentRecords extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sortBy:null,\r\n            skip:0,\r\n            parents:null,\r\n            filteredParents:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } }\r\n    }\r\n\r\n    getData = async () =>{\r\n        await axios.get('/api/parents/sort-all?sortBy='+this.state.sortBy,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(data)\r\n             this.setState({parents:data})\r\n             this.setState({filteredParents:data})\r\n           \r\n         \r\n        });\r\n\r\n    }\r\n\r\n    prev = async () =>{\r\n        if(this.state.skip != 0){\r\n            await this.setState({skip:this.state.skip-300})\r\n            await this.getData()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    next = async () =>{\r\n\r\n        if(this.state.parents.length > 0){\r\n            await this.setState({skip:this.state.skip+300})\r\n            await this.getData()\r\n        }\r\n    }\r\n\r\n    deleteParent = async (parentId,index) =>{\r\n        console.log(index)\r\n        var parents = this.state.filteredParents;\r\n\r\n         await axios.delete('/api/parents?id='+parentId,\r\n         {headers:this.state.options})\r\n         .then(async response => {\r\n              var data = await response.data;\r\n              console.log(data)           \r\n         \r\n         });\r\n\r\n        parents.splice(index,1)\r\n        this.setState({parents:parents})\r\n       \r\n\r\n    }\r\n\r\n    filter = (e) =>{\r\n        var filter = e.target.value\r\n        var parents = this.state.parents;\r\n        var filteredParents = parents.filter((a)=>(a.firstName.toLowerCase().includes(filter) || a.lastName.toLowerCase().includes(filter)))\r\n        this.setState({filteredParents:filteredParents})\r\n        \r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Parent Records</h1>\r\n                <div>\r\n                    <label>Sort By</label>\r\n                    <select className=\"form-control form-select\" onChange={e=>this.setState({sortBy:e.target.value})}>\r\n                        <option selected>Open this select menu</option>\r\n                        <option value=\"firstName\">first name</option>\r\n                        <option value=\"lastName\">last name</option>\r\n                        <option value=\"3\">school</option>\r\n                    </select>\r\n                </div>\r\n                {\r\n                    this.state.filteredParents?\r\n\r\n\r\n                    <div className=\"mt-4 mb-3\">\r\n                   <input className=\"form-control\" placeholder=\"start typing..\" onChange={this.filter}/>\r\n                </div>\r\n                    :null\r\n\r\n                }\r\n                <div>\r\n                    <button className=\"btn btn-primary m-3\" onClick={e=>this.getData()}>GetData</button>\r\n                </div>\r\n                <table class=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">email</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {this.state.filteredParents?\r\n                        this.state.filteredParents.map((parent,index)=>(\r\n\r\n                            parent.firstName != \"deleted\"?\r\n\r\n                            <  ParentRecordsRow \r\n                             parent={parent}\r\n                             index={index}\r\n                             deleteParent={this.deleteParent}\r\n                             options={this.state.options}\r\n                             />\r\n                            :null\r\n                        \r\n                          \r\n                        ))\r\n                       :null}\r\n                    </tbody>\r\n                    </table>\r\n\r\n            \r\n                        {/* <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-primary\" disabled={this.state.parents == null || this.state.skip ==0 }  onClick={this.prev}>prev</button>\r\n\r\n                    </div>\r\n                    <div className=\"col\">\r\n                         <button className=\"btn btn-primary\" disabled={this.state.parents == null || this.state.parents?.length == 0} onClick={this.next}>next</button>\r\n                    </div>\r\n\r\n                </div> */}\r\n                        \r\n             \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentRecords","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\ParentRecordsRow.js",["674","675"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport AddNewStudentForm from './AddNewStudentForm'\r\nclass ParentRecordsRow extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showOtherModal:false,\r\n            showDeleteModal:false, \r\n            showEditModal:false,     \r\n            showAddStudentModal:false,  \r\n            students:[],\r\n            options :this.props.options}\r\n    }\r\n\r\n\r\n    toggleOtherModal = () =>{\r\n        this.setState({showOtherModal:!this.state.showOtherModal})\r\n    }\r\n    toggleDeleteModal = () =>{\r\n        this.setState({showDeleteModal:!this.state.showDeleteModal})\r\n    }\r\n    toggleEditModal = () =>{\r\n        this.setState({showEditModal:!this.state.showEditModal})\r\n    }\r\n    toggleAddStudentModal = () =>{\r\n        this.setState({showAddStudentModal:!this.state.showAddStudentModal})\r\n    }\r\n\r\n\r\n    deleteParent = (e) =>{\r\n        this.props.deleteParent(this.props.parent._id,this.props.index)\r\n        this.toggleDeleteModal()\r\n    }\r\n    edit = async(e) => {\r\n\r\n        const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        var correctFormat = await  regexp.test(this.props.parent.email);\r\n        \r\n        if(correctFormat){\r\n\r\n            await axios.post('/api/parents/edit?id='+this.props.parent._id,\r\n         {headers:this.props.options,parent:this.props.parent})\r\n         .then(async response => {\r\n              var data = await response.data;\r\n              console.log(data)    \r\n              this.toggleEditModal()       \r\n         \r\n         });\r\n\r\n        }else{\r\n            alert('incorrect email format')\r\n        }\r\n         \r\n\r\n        \r\n\r\n    }\r\n\r\n    updateFirstName = (e) =>{\r\n        this.props.parent.firstName = e.target.value\r\n        this.props.parent.changed = true\r\n    }\r\n    updateLastName = (e) =>{\r\n        this.props.parent.lastName = e.target.value\r\n        this.props.parent.changed = true\r\n    }\r\n    updateEmail = (e) =>{\r\n        this.props.parent.email = e.target.value\r\n        this.props.parent.changed = true\r\n    }\r\n    getStudents = async (e) =>{\r\n        var pid = this.props.parent._id\r\n\r\n        await axios.get('/api/students/pid?pid='+pid,\r\n         {headers:this.props.options,parent:this.props.parent})\r\n         .then(async response => {\r\n              var data = await response.data;\r\n                  console.log(data)\r\n              this.setState({students:data})       \r\n         \r\n         });\r\n\r\n\r\n    }\r\n \r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n     \r\n                            <tr>\r\n                                <td>{this.props.parent._id}</td>\r\n                                <td>{this.props.parent.firstName}</td>\r\n                                <td>{this.props.parent.lastName}</td>\r\n                                <td>{this.props.parent.email}</td>\r\n                                <td><button className=\"btn btn-danger\" onClick={this.toggleDeleteModal} >Delete</button></td>\r\n                                <td><button className=\"btn btn-danger\" onClick={this.toggleEditModal}>Edit</button></td>\r\n                                <td><button className=\"btn btn-primary\" onClick={this.toggleOtherModal}>Other</button></td>\r\n\r\n                                <Modal isOpen={this.state.showOtherModal} toggle={this.toggleOtherModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"mb-3\" >\r\n                            <a className=\"btn btn-danger\" onClick={this.toggleAddStudentModal} >Add Student</a>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                            <a className=\"btn btn-success\" href={'/admin/payment-panel?pid='+this.props.parent._id}>invoice / payment records</a>\r\n                            </div>\r\n                            <div className=\"mb-3\" >\r\n                            <a className=\"btn btn-primary\" onClick={this.getStudents} >Students</a>\r\n                            </div>\r\n                            {\r\n                                this.state.students.length>0?\r\n                                    this.state.students.map((student,index)=>(\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                    {student.firstName + \" \" + student.lastName}\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                    <a className=\"btn btn-success\" href={'/admin/edit-student-lessons?id='+student._id}>View lessons</a>\r\n                                            </div>\r\n                                             {/* <div className=\"col\">\r\n                                                    <a className=\"btn btn-success\" href={'/admin/modify-taken-lessons?id='+student._id}>View taken lessons</a>\r\n                                            </div> */}\r\n                                            <div className=\"col\">\r\n                                                    <a className=\"btn btn-success\" href={'/admin/student-records?sid='+student._id}>student records</a>\r\n                                            </div>\r\n\r\n                           \r\n                                        \r\n\r\n                                        </div>\r\n\r\n                                    ))\r\n                                :null\r\n                            }\r\n                        \r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            \r\n                            <Button color=\"secondary\" onClick={this.toggleOtherModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showDeleteModal} toggle={this.toggleDeleteModal} >\r\n                        <ModalHeader >You are about to delete a parent,\r\n                            all students/lessons related to this parent will be deleted\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            \r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.deleteParent}>Delete</Button>\r\n                            <Button color=\"secondary\" onClick={this.toggleDeleteModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showEditModal} toggle={this.toggleEditModal} >\r\n                        <ModalHeader >Edit Parent Details</ModalHeader>\r\n                        <ModalBody>\r\n                            <p>Note: \r\n                                only change if absolutly necessary, if it's easier to delete and create a new parent, then please do,\r\n\r\n                                \r\n                            </p>\r\n\r\n                            <div className=\"container\">\r\n                                <div className=\"row form-group\">\r\n                                    <label>Frist Name</label>\r\n                                    <input type=\"text\" maxLength=\"15\" className=\"form-control\" onChange={this.updateFirstName}></input>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input type=\"text\" maxLength=\"15\" className=\"form-control\" onChange={this.updateLastName}></input>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <label>Email</label>\r\n                                    <input type=\"email\" className=\"form-control\" onChange={this.updateEmail}></input>\r\n                                </div>\r\n                                \r\n                                \r\n\r\n                            </div>\r\n                            \r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.edit}>Edit</Button>\r\n                            <Button color=\"secondary\" onClick={this.toggleEditModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showAddStudentModal} toggle={this.toggleAddStudentModal} >\r\n                        <ModalHeader >Add Student</ModalHeader>\r\n                        <ModalBody>\r\n                        <AddNewStudentForm parentId={this.props.parent._id}\r\n                         toggle={this.toggleAddStudentModal}\r\n                         options={this.state.options}\r\n                         />\r\n\r\n                          \r\n                         \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                        \r\n                            <Button color=\"secondary\" onClick={this.toggleAddStudentModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                            </tr>\r\n                           \r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentRecordsRow","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Reports\\AddNewStudentForm.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceTable2.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"import react,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\nimport jsPDF from 'jspdf'\r\nimport {ToggleButtonGroup,ToggleButton,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle,faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nrequire ('jspdf-autotable')\r\nDate.prototype.formatDDMMYYYY = function(){\r\n    return (this.getDate() +\"/\"+ (this.getMonth() + 1)+ \r\n    \"/\" +  this.getFullYear());\r\n}\r\n\r\nclass InvoiceTable2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            data:null,\r\n            students:[],\r\n            filteredStudents:[],\r\n            parents:[],\r\n            filteredParents:[],\r\n            fromDate:new Date(\"Fri Mar 19 2021 00:00:00 GMT+0000 (Greenwich Mean Time)\"),\r\n            toDate:new Date(\"Fri Jul 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)\"),\r\n            invoiceType:null,\r\n            specificStudents:[],\r\n            studentsOnDateRange:[],\r\n            isListPrepared:false,\r\n            chosenPids:[],\r\n            action:0,\r\n            showPaymentModal:false,\r\n            chosenInvoice:null,\r\n            changeTo:null,\r\n            redirectUrl:\"/\",\r\n            modalPaidStatus:null,\r\n            canRefresh:true,\r\n            invoiceRecords:null,\r\n            invoiceRecordsCopy:null,\r\n            loading:false,\r\n            numberOfStudentsToGet:0,\r\n            numberOfParentsToGet:0,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n\r\n    }\r\n\r\n    moreStudents = async (e)=>{\r\n\r\n        \r\n        await this.getAllStudents();\r\n\r\n\r\n    }\r\n    moreParents = async (e)=>{\r\n\r\n      \r\n        await this.getAllParents()\r\n\r\n\r\n    }\r\n\r\n    setInvoiceType = async  (e) =>{\r\n \r\n\r\n        if(this.state.invoiceType != null){\r\n            this.setState({invoiceType:null})\r\n        }else{\r\n            this.setState({invoiceType:e})\r\n        }\r\n      \r\n        await this.setState({isListPrepared:false})\r\n     \r\n        await this.setState({chosenPids:[]})\r\n        await this.setState({specificStudents:[]})\r\n      \r\n    }\r\n\r\n   getStudentsFromPids = async (pids) =>{\r\n\r\n    var idsString = \"\";\r\n\r\n    \r\n    \r\n    pids.map((id,index)=>{\r\n        idsString = idsString + 'pids=' + id.toString()\r\n        if((pids.length-1) != index){\r\n            idsString = idsString+'&'\r\n        } \r\n    })\r\n    await console.log(idsString);\r\n\r\n    await  axios.get('/api/students/pids?'+idsString,\r\n    {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var students = await response.data\r\n            console.log(response.data)\r\n            this.setState({students:students})\r\n\r\n        })\r\n\r\n   }\r\n\r\n   getStudentsWhoHaveLessonsInDatesRangeOnly = async ()=>{\r\n      \r\n        var students = []\r\n        console.log(this.state.options)\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            this.setState({loading:true})\r\n            await  axios.post('/api/taken-lessons/distinct-student-in-range',\r\n                {headers:this.state.options,data:{fromDate:this.state.fromDate.toString(),toDate:this.state.toDate.toString() }})\r\n            .then(async (response) =>{\r\n                console.log(response.data)\r\n                students = await response.data\r\n                this.setState({loading:false})\r\n            \r\n            })\r\n        }\r\n\r\n\r\n        return students\r\n   }\r\n\r\n   getInvoicesByStudent = async ()=>{\r\n      \r\n    var students = []\r\n    var idsString = \"\";\r\n    this.state.specificStudents.map((student,item)=>{\r\n        idsString += ('sids='+student._id.toString()+'&')\r\n    })\r\n    \r\n\r\n    if(this.state.fromDate != null && this.state.toDate != null){\r\n        this.setState({loading:true})\r\n        await  axios.get('/api/invoices/invoice-by-student?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()+'&'+idsString        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            console.log(response.data,\"data\")\r\n            students = await response.data\r\n            this.setState({loading:false})\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    return students\r\n}\r\n\r\ngetInvoicesByParent = async ()=>{\r\n     \r\n    var students = []\r\n    var idsString =\"\";\r\n    this.state.chosenPids.map((pid,item)=>{\r\n        idsString += ('pids='+pid.toString()+'&')\r\n    })\r\n    \r\n        \r\n    if(this.state.fromDate != null && this.state.toDate != null){\r\n        await  axios.get('/api/invoices/invoice-by-parent?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()+'&'+idsString        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            console.log(response.data)\r\n            students = await response.data\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    return students\r\n}\r\n\r\n    getAllStudents = async () =>{\r\n\r\n        this.setState({loading:true})\r\n        await  axios.get('/api/students/all-custom?skip='+this.state.numberOfStudentsToGet+'&limit=25',\r\n            {headers:this.state.options})\r\n        .then(async response=>{\r\n            console.log(response.data)\r\n            var students = await this.state.students.concat(response.data)\r\n            this.setState({students:students})\r\n            this.setState({filteredStudents:students})\r\n            this.setState({loading:false})\r\n            this.setState({numberOfStudentsToGet:this.state.numberOfStudentsToGet+25})\r\n        })\r\n    }\r\n\r\n    getAllParents = async () =>{\r\n        this.setState({loading:true})\r\n        await  axios.get('/api/parents/all-custom?skip='+this.state.numberOfParentsToGet+'&limit=25',\r\n            {headers:this.state.options})\r\n        .then(async response=>{\r\n     \r\n            var parents = await this.state.parents.concat(response.data)\r\n            this.setState({parents:parents})\r\n            this.setState({filteredParents:parents})\r\n            this.setState({loading:false})\r\n            this.setState({numberOfParentsToGet:this.state.numberOfParentsToGet+25})\r\n        })\r\n    }\r\n\r\n    setCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({specificStudents:[...this.state.specificStudents, item]})\r\n        }else{\r\n            const index = await this.state.specificStudents.indexOf(item);\r\n            console.log(index)\r\n                if (index > -1) {\r\n                    var list = await this.state.specificStudents.filter(a=>a!=item);\r\n                    this.setState({specificStudents:list});\r\n                }\r\n\r\n        }\r\n\r\n\r\n        console.log(this.state.specificStudents);\r\n\r\n       \r\n    }\r\n\r\n    setParentCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({chosenPids:[...this.state.chosenPids, item._id]})\r\n        }else{\r\n            const index = await this.state.chosenPids.indexOf(item._id);\r\n            \r\n                if (index > -1) {\r\n                    var list = await this.state.chosenPids.filter(a=>a!=item._id);\r\n                    this.setState({chosenPids:list});\r\n                }\r\n\r\n        }\r\n        console.log(this.state.chosenPids)\r\n       \r\n    }\r\n\r\n\r\n    getStudentsFromParent = async (pid) =>{\r\n\r\n        var students = [];\r\n        await  axios.get('/api/students/pid?pid='+pid,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var data = await response.data\r\n            students = data.map((s)=>{\r\n                 var obj =   {_id: s._id,firstName:s.firstName,lastName:s.lastName }\r\n\r\n                    return obj\r\n        })\r\n        \r\n        })\r\n        return students;\r\n    }\r\n\r\n\r\n\r\n    getTakenLessonForStudent = async (sid) =>{\r\n\r\n        var takenLessons = [];\r\n        await  axios.get('/api/taken-lessons/query?sid='+sid+\r\n        '&from='+this.state.fromDate.toString()+'&to='+this.state.toDate.toString()        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var data = await response.data\r\n            takenLessons = data.map((tl)=>{\r\n                 var obj =   {correction: tl.correction,\r\n                                date: tl.date,\r\n                                day: tl.day,\r\n                                discount: tl.discount,\r\n                                hours: tl.hours,\r\n                                isExtra: tl.isExtra,\r\n                                price: tl.price,\r\n                                rateKey:  tl.rateKey,\r\n                                subject: tl.subject\r\n                                }\r\n\r\n                    return obj\r\n        })\r\n        \r\n        })\r\n        return takenLessons;\r\n    }\r\n\r\n    prepareInvoiceList = async (e) =>{\r\n\r\n        console.log(this.state.invoiceType)\r\n        if(this.state.invoiceType != null){\r\n\r\n            switch(parseInt(this.state.invoiceType)) {\r\n                \r\n                case 0:                    \r\n                    var invoiceRecords = await this.getStudentsWhoHaveLessonsInDatesRangeOnly();\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    await this.setState({invoiceRecordsCopy:invoiceRecords})\r\n                    this.setState({isListPrepared:true})\r\n                  break;\r\n                case 1:\r\n                    var invoiceRecords = await this.getInvoicesByStudent()\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    await this.setState({invoiceRecordsCopy:invoiceRecords})\r\n                    await this.setState({isListPrepared:true})\r\n                  break;\r\n                case 2:\r\n                    await this.setState({isListPrepared:true})\r\n                  // code block\r\n                  break;\r\n                case 3:\r\n                    ////still to do\r\n                    \r\n                    var invoiceRecords = await this.getInvoicesByParent()\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    await this.setState({invoiceRecordsCopy:invoiceRecords})\r\n                    // await this.setState({students:students})\r\n                    await this.setState({isListPrepared:true})\r\n                  // code block\r\n                  break;\r\n                default:\r\n                    alert('fail')\r\n                  // code block\r\n              }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    createInvoices = async () =>{ // for all records\r\n        var data = await this.state.invoiceRecords;\r\n\r\n        data.map(async(ir,index)=>{\r\n            await this.storeInvoice(ir.parent._id)\r\n        })\r\n    }\r\n\r\n    createInvoicesForNotCreated = async () =>{\r\n        var data = await this.state.invoiceRecords.filter((ir)=>ir.created == 0) \r\n        data.map(async(ir,index)=>{\r\n            await this.storeInvoice(ir.parent._id)\r\n        })\r\n\r\n    }\r\n\r\n    sendInvoicesForAllRecords = async () =>{\r\n        var data = await this.state.invoiceRecords.filter(ir=>ir.created != 0)\r\n        var invoices = await data.map(ir=>ir)\r\n        await this.sendInvoices(invoices);\r\n\r\n    }\r\n\r\n    sendInvoiceForNotSent = async (e) =>{\r\n        var irs = await this.state.invoiceRecords.filter(ir=>ir.created != 0)\r\n        var data = await irs.filter(ir=>ir.sent == 0)\r\n        var invoices = await data.map(ir=>ir)\r\n        await this.sendInvoices(invoices);\r\n\r\n    }\r\n\r\n    openPaymentModal = (e) =>{\r\n        this.togglePaymentModal(e)\r\n        //this.setState({chosenInvoice:invoice})\r\n        \r\n\r\n    }\r\n\r\n    togglePaymentModal = (e) =>{\r\n        this.setState({showPaymentModal2:!this.state.showPaymentModal2})\r\n    }\r\n\r\n    executeAction = async () =>{\r\n        var action = parseInt(this.state.action);\r\n\r\n        switch(action) {\r\n            case 1:\r\n              await this.createInvoices();\r\n              \r\n              break;\r\n            case 2:\r\n              this.createInvoicesForNotCreated();\r\n              break;\r\n            case 3:\r\n              this.sendInvoicesForAllRecords();\r\n               break;\r\n            case 4:\r\n                this.sendInvoiceForNotSent();\r\n                break;\r\n            default:\r\n              alert('no action to call');\r\n          }\r\n\r\n          setTimeout(\r\n            () => {\r\n                this.refreshData();\r\n               \r\n        \r\n        }, \r\n            3000\r\n          );\r\n\r\n        \r\n    }\r\n\r\n    test = async (e)=>{\r\n        await  axios.get('/api/invoices/test?sd=2021-03-08&ed=2021-06-25&pid=5ff0a77083571c3cb43d7890',\r\n                    {headers:this.state.options})\r\n                .then(async (response) =>{\r\n                    var res = await response.data\r\n                    console.log(res)\r\n                \r\n                })\r\n    }\r\n\r\n    sendInvoices = async  (invoices)  =>{\r\n        if(invoices.length > 0){\r\n            var ids = await invoices.map(a=> a._id)\r\n\r\n            console.log(invoices,\"ids\")\r\n\r\n            var idsString = \"\";\r\n\r\n            ids.map((id,index)=>{\r\n                idsString = idsString + '&ids='+ id.toString()\r\n            })\r\n\r\n          \r\n            var res = await  axios.get('/api/invoices/send?'+idsString,\r\n                    {headers:this.state.options}).then(response => { \r\n                        console.log(response.status)\r\n                    })\r\n                    .catch(error => {\r\n                       \r\n                        if(error.response.status == 401){\r\n                            alert('invoices cannot be sent at the moment')\r\n                        }\r\n                  \r\n                    });\r\n            if(invoices.length > 100){\r\n                alert('only 100 were sent, filter for unsent and send again tomorrow')\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    storeInvoice =async  (pid) =>{\r\n        \r\n        var startDate = this.state.fromDate\r\n        var endDate = this.state.toDate\r\n        var month = this.state.toDate.getMonth()+1\r\n        var year = this.state.toDate.getFullYear();\r\n        \r\n        \r\n\r\n        await  axios.post('/api/invoices?pid='+pid+\r\n            '&year='+year+'&month='+month+'&sd='+startDate.toString()+'&ed='+endDate.toString(),\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            \r\n           console.log(response.data)\r\n        })\r\n\r\n\r\n    }\r\n\r\n  \r\n\r\n\r\n    createInvoice3 = async (parent)=>{\r\n\r\n        const students = await this.getStudentsFromParent(parent._id);\r\n\r\n        const studs =  students.map(async(student,index)=>{\r\n            var lessons = await  this.getTakenLessonForStudent(student._id)\r\n            \r\n            student.takenLessons = await lessons\r\n        })\r\n\r\n        const numFruits = await Promise.all(studs)\r\n        var lessonsString = \"\";\r\n        var total = 0\r\n\r\n        students.map((student,index)=>{\r\n            lessonsString =lessonsString+`<div class=\"row mt-3\" style=\"font-size:5px\" >\r\n                                            <div class=\"col\">\r\n                                                Student : ${student.firstName}\r\n                                            </div>\r\n                                          </div>`\r\n            var tableString = `\r\n                            \r\n                                    <div class=\"row\" style=\"font-size:5px\" >\r\n                                        <div class=\"col\" style=\"width:30px !important\" >Date</div>\r\n                                        <div class=\"col\" style=\"width:30px !important\">Subject</div>\r\n                                        <div class=\"col\" style=\"width:30px !important\">Correction</div>\r\n                                        <div class=\"col\" style=\"width:30px !important\">Hours</div>\r\n                                        <div class=\"col\" style=\"width:30px !important\">Price</div>\r\n                                        <div class=\"col\" style=\"width:30px !important\">Total</div>\r\n                                    </div>\r\n                              \r\n            \r\n                                `;\r\n\r\n            student.takenLessons.map((tl,index)=>{\r\n                var date = (new Date(tl.date)).formatDDMMYYYY().toString()\r\n                tableString=tableString+`<div class=\"row\" style=\"font-size:5px\"  >   \r\n                                                <div class=\"col\" style=\"width:30px\" >${date.toString()}</div>\r\n                                                <div class=\"col\" style=\"width:30px\" >${tl.subject.toString()}</div>\r\n                                                <div class=\"col\" style=\"width:30px\">${tl.correction.toString()}</div>\r\n                                                <div class=\"col\" style=\"width:30px\">${tl.hours.toString()}</div>\r\n                                                <div class=\"col\" style=\"width:30px\">${tl.price.toString()}</div>\r\n                                                <div class=\"col\" style=\"width:30px\">${(tl.price*tl.hours).toString()}</div>\r\n            \r\n                                                </div>`\r\n                total += (tl.price*tl.hours)\r\n            })\r\n            \r\n            lessonsString+=tableString\r\n        })\r\n\r\n        var doc = await  new jsPDF()\r\n        var str = \r\n        `\r\n        <html>\r\n            <head>\r\n                <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n            </head>\r\n        \r\n            <body>\r\n                <div id=\"container\" class=\"container\" style=\"width:210px;\">\r\n                    <h1 class=\"mb-3\" style=\"font-size:10px !important;\" >MSLC Invoice</h1>\r\n                    <div style=\"font-size:5px;\" >Cheques payable to :  MS Learning Circle Ltd</div>\r\n                    <div style=\"font-size:5px\" >Electronic payments to: </div>\r\n                    <div class=\"mb-3\" style=\"font-size:5px\" >Bank :  HSBC</div>\r\n\r\n                    <div class=\"mb-3\"  style=\"font-size:7px\" >Total for invoice : <b>£${total.toString()}</b></div>\r\n\r\n\r\n                    ${lessonsString}\r\n\r\n\r\n\r\n                </div>\r\n                \r\n            </body>\r\n            <style>\r\n            \r\n            </style>\r\n        </html>\r\n        `\r\n        console.log(str)\r\n        await doc.html(str)\r\n        await doc.save()\r\n    }\r\n\r\n    createInvoice = async(parent)=>{\r\n\r\n        const students = await this.getStudentsFromParent(parent._id);\r\n\r\n        const studs =  students.map(async(student,index)=>{\r\n            var lessons = await  this.getTakenLessonForStudent(student._id)\r\n            \r\n            student.takenLessons = await lessons\r\n        })\r\n\r\n        const numFruits = await Promise.all(studs)\r\n        var lessonsString = \"\";\r\n\r\n        students.map((student,index)=>{\r\n            lessonsString =lessonsString+`<p>Student : ${student.firstName}</p>`\r\n            var tableString = `<table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Date</th>\r\n                                        <th>subject</th>\r\n                                        <th>-</th>\r\n                                        <th>Hours</th>\r\n                                        <th>Price</th>\r\n                                        <th>Fee</th>\r\n                                    <tr>\r\n                                </thead>\r\n            \r\n                                <tbody>`;\r\n            student.takenLessons.map((tl,index)=>{\r\n                var date = (new Date(tl.date)).formatDDMMYYYY().toString()\r\n                tableString=tableString+`<tr>   <td>${date.toString()}</td>\r\n                                                <td>${tl.subject.toString()}</td>\r\n                                                <td>${tl.correction.toString()}</td>\r\n                                                <td>${tl.hours.toString()}</td>\r\n                                                <td>${tl.price.toString()}</td>\r\n                                                <td>${(tl.price*tl.hours).toString()}</td>\r\n                                             </tr>`\r\n            })\r\n            tableString+=`</tbody></table>`\r\n            lessonsString+=tableString\r\n        })\r\n   \r\n        var doc = await new jsPDF();\r\n        var str = await `<div style=\"font-size:5px\">\r\n                            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n                            <style>\r\n                            \r\n                            </style>\r\n                            <h1  >MSLC Invoice</h1>\r\n                            <p  >CHEQUES PAYABLE TO: MS Learning Circle Ltd</p>\r\n                            <p  >ELECTRONIC PAYMENTS TO:</p>\r\n                            <p  >Bank: HSBC</p>\r\n\r\n                            <p>Parent : ${parent.firstName}</p>\r\n\r\n                            ${lessonsString}\r\n                            \r\n                           \r\n                            </div>\r\n\r\n                        </div>`\r\n            await doc.html(str);\r\n        await doc.save()\r\n     \r\n       \r\n\r\n    }\r\n\r\n\r\n    createInvoice2 = async (parent) =>{\r\n\r\n        const students = await this.getStudentsFromParent(parent._id);\r\n\r\n        const studs =  students.map(async(student,index)=>{\r\n            var lessons = await  this.getTakenLessonForStudent(student._id)\r\n            \r\n            student.takenLessons = await lessons\r\n        })\r\n\r\n        const numFruits = await Promise.all(studs)\r\n        var height = 10\r\n        var increment = 5;\r\n        var leftMargin = 20\r\n        var doc = await new jsPDF()\r\n       await doc.text('', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('MSLC Monthly Invoice', leftMargin, height)\r\n        height+=increment*3;\r\n       await doc.setFontSize(9).text('CHEQUES PAYABLE TO: MS Learning Circle Ltd', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('ELECTRONIC PAYMENTS TO:', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('BANK :                     HSBC PLC', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('ACCOUNT NAME:    MS Learning Circle Ltd', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('SORT CODE:           40-07-18', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('ACCOUNT NO:         71304682', leftMargin, height)\r\n        height+=increment;\r\n       await doc.text('Parent : '+parent.firstName, leftMargin, height)\r\n       var total = 0;\r\n            await students.map((student,index)=>{\r\n                height += increment*2;\r\n                doc.text('Student : '+student.firstName, leftMargin, height)\r\n                height += increment;\r\n                var data = []\r\n                var tableHeight = 0;\r\n                \r\n                    student.takenLessons.map((lesson,index)=>{\r\n                        tableHeight += 10;\r\n                        var date = (new Date(lesson.date)).formatDDMMYYYY().toString()\r\n                        var obj = [\r\n                                    date,\r\n                                    lesson.subject,\r\n                                    lesson.correction,\r\n                                    lesson.hours.toString(),\r\n                                    lesson.price.toString(),\r\n                                    (lesson.price*lesson.hours).toString()\r\n\r\n                        ]\r\n\r\n                                  total += (lesson.price*lesson.hours);\r\n                        data.push(obj)\r\n                    })\r\n                    \r\n                    doc.autoTable({ head:[[\"date\",\"subject\",\"correction\",\"hours\",\"price\",\"FPL\"]],body:data,startY:height})\r\n                    height = height + tableHeight\r\n                   \r\n            })\r\n            \r\n            doc.text('Fee For Month £'+total.toString(), 100, 60)\r\n            console.log(doc.output('datauri').toString());\r\n            doc.save();\r\n    }\r\n\r\n\r\n\r\n    createRedirectUrl = () =>{\r\n            \r\n\r\n    if(this.state.parentsMap != null){  \r\n            var url = \"payment-panel?temp=test\";          \r\n            Object.keys(this.state.parentsMap).map((pid,i) => {\r\n                url = url+ \"&pid=\"+pid\r\n            })\r\n \r\n            url = url + \"&month=\"+ (this.state.toDate.getMonth()+1)\r\n            url = url + \"&year=\"+ this.state.toDate.getFullYear();\r\n\r\n\r\n          this.setState({redirectUrl:url})\r\n          console.log(this.state.redirectUrl)\r\n\r\n        }else{\r\n            alert('no url ');\r\n            \r\n        }\r\n\r\n      \r\n\r\n    }\r\n\r\n    updatePayment = (invoice) =>{\r\n        this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n        this.setState({chosenInvoice:invoice})\r\n        console.log(invoice)\r\n\r\n    }\r\n\r\n    paidExact = (e) =>{\r\n        this.setState({modalPaidStatus:0})\r\n        this.setState({changeTo:this.state.chosenInvoice.total})\r\n        \r\n    }\r\n\r\n    confirmPaymentUpdate = async () =>{\r\n\r\n        if(this.state.modalPaidStatus != null){\r\n\r\n            if(this.state.changeTo != null){\r\n\r\n                var error = false;\r\n\r\n                if(this.state.modalPaidStatus == 0 && (this.state.changeTo != this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(this.state.modalPaidStatus == 1 && (this.state.changeTo >=  this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(this.state.modalPaidStatus == 2 && (this.state.changeTo <=  this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(!error){\r\n                    var invoice = await this.state.chosenInvoice\r\n                    await  axios.get('/api/invoices/update-payment?id='+invoice._id+'&amount='+this.state.changeTo+'&status='+this.state.modalPaidStatus,\r\n                            {headers:this.state.options})\r\n                        .then(async (response) =>{\r\n                            console.log(response.data)\r\n                        \r\n                        })\r\n\r\n                    this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n                    alert('payment updated');\r\n                    }else{\r\n                        alert('payemnt entry error')\r\n                    }\r\n                }else{\r\n                alert('change to is null');\r\n            }\r\n\r\n\r\n        }else{\r\n            alert('null paid status')\r\n        }\r\n\r\n        \r\n    }\r\n    refreshData = async (e) =>{\r\n        this.prepareInvoiceList();\r\n     \r\n\r\n       \r\n    }\r\n\r\n    filterStudents = async (term) =>{\r\n\r\n        var filteredStudents = this.state.students.filter((s)=>s.firstName.toLowerCase().includes(term.toLowerCase()) || s.lastName.toLowerCase().includes(term.toLowerCase()))\r\n        this.setState({filteredStudents:filteredStudents})\r\n    }\r\n\r\n    filterParents = async (term) =>{\r\n\r\n        var filteredParents = this.state.parents.filter((p)=>p.firstName.toLowerCase().includes(term.toLowerCase()) || p.lastName.toLowerCase().includes(term.toLowerCase()))\r\n        this.setState({filteredParents:filteredParents})\r\n    }\r\n\r\n    filterForUnsent = async (e) =>{\r\n        var irs = await this.state.invoiceRecordsCopy.filter(ir=>ir.created == null || ir.sent == 0 )\r\n      \r\n        await this.setState({invoiceRecords:irs})\r\n\r\n    }\r\n\r\n    filterForSent = async (e) =>{\r\n        var irs = await this.state.invoiceRecordsCopy.filter(ir=>ir.created > 0)\r\n        var invoiceRecords = await irs.filter((a)=>a.sent > 0)\r\n        await this.setState({invoiceRecords:invoiceRecords})\r\n\r\n    }\r\n\r\n    bothSentAndUnsent =async (e)=>{\r\n        this.setState({invoiceRecords:this.state.invoiceRecordsCopy})\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n\r\n                <div className=\"h1\">\r\n                    Invoice Table\r\n                </div>  \r\n                <div className=\"container\">\r\n                    <h3>Invoice Dates</h3>                   \r\n            \r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>From Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.fromDate}\r\n                                onChange={date => this.setState({fromDate:date})}\r\n                                />  \r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <label>To Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.toDate}\r\n                                onChange={date => this.setState({toDate:date})}\r\n                                />  \r\n                        </div>\r\n                    </div>\r\n\r\n                {\r\n                    this.state.fromDate != null && this.state.toDate != null ?\r\n\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic checkbox toggle button group\">\r\n                    \r\n                    <button class=\"btn btn-primary\" disabled={(this.state.invoiceType != 0 && this.state.invoiceType != null) || this.state.loading} onClick={(e)=>this.setInvoiceType(0)} for=\"btncheck3\">Students in range</button>\r\n                  \r\n                    \r\n                    <button class=\"btn btn-primary\" disabled={(this.state.invoiceType != 1 && this.state.invoiceType != null) || this.state.loading} onClick={(e)=>this.setInvoiceType(1)} for=\"btncheck3\">Students</button>\r\n                  \r\n                    \r\n                    <button class=\"btn btn-primary\" disabled={(this.state.invoiceType != 2 && this.state.invoiceType != null) || this.state.loading} onClick={(e)=>this.setInvoiceType(2)} for=\"btncheck3\">all</button>\r\n\r\n                    <button class=\"btn btn-primary\" disabled={(this.state.invoiceType != 3 && this.state.invoiceType != null) || this.state.loading} onClick={(e)=>this.setInvoiceType(3)} for=\"btncheck3\">parents</button>\r\n                  </div>\r\n                 \r\n                    :null\r\n                }\r\n             \r\n\r\n                {\r\n                    this.state.invoiceType == 1?\r\n                        <div style={{textAlign:'left'}}>\r\n\r\n                            <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">search</span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"first name.. last name..\" onChange={e=>this.filterStudents(e.target.value)}/>\r\n                            </div>   \r\n\r\n                            {this.state.filteredStudents?\r\n                            \r\n                                this.state.filteredStudents.map((item,index)=>(\r\n                                    <div class=\"form-check\">\r\n                                   {!this.state.isListPrepared? <input class=\"form-check-input\" type=\"checkbox\" value={item} id={index} onChange={e=>this.setCheckbox(e,item)} />:null}\r\n                                    <label class=\"form-check-label\" for=\"flexCheckChecked\">\r\n                                        {item.firstName + ' ' + item.lastName}\r\n                                    </label>\r\n                                    </div>\r\n\r\n                                ))\r\n                            \r\n                            \r\n                            :null}\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <button className=\"btn btn-primary\" disabled={this.state.loading} onClick={this.moreStudents}>more</button>\r\n                                </div>                                   \r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                <button className=\"btn btn-primary\" disabled={this.state.loading} onClick={this.prepareInvoiceList}>Prepare Invoice List</button>\r\n                            </div> \r\n\r\n                        </div>\r\n                    :null\r\n\r\n\r\n                    \r\n\r\n              \r\n\r\n                }\r\n\r\n                {\r\n                    this.state.invoiceType == 3?\r\n                        <div style={{textAlign:'left'}} >\r\n\r\n                             <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">search</span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"first name.. last name..\" onChange={e=>this.filterParents(e.target.value)}/>\r\n                            </div>   \r\n\r\n                            {this.state.filteredParents?\r\n                            \r\n                                this.state.filteredParents.map((item,index)=>(\r\n                                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value={item} id={index} onChange={e=>this.setParentCheckbox(e,item)} />\r\n                                    <label class=\"form-check-label\" for=\"flexCheckChecked\">\r\n                                        {item.firstName + ' ' + item.lastName}\r\n                                    </label>\r\n                                    </div>\r\n\r\n                                ))\r\n                            \r\n                            \r\n                            :null}\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <button className=\"btn btn-primary\" disabled={this.state.loading} onClick={this.moreParents}>more</button>\r\n                                </div>                                   \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn btn-primary\" disabled={this.state.loading} onClick={this.prepareInvoiceList}>Prepare Invoice List</button>\r\n                            </div> \r\n\r\n                        </div>\r\n                    :null\r\n\r\n              \r\n\r\n                }             \r\n\r\n\r\n                  {this.state.invoiceType != 1 && this.state.invoiceType != 3  && this.state.invoiceType != null?\r\n\r\n                        <div>\r\n                        <button disabled={!this.state.canRefresh} disabled={this.state.loading} className=\"btn btn-primary m-5\" \r\n                            onClick={this.prepareInvoiceList}\r\n                            >Prepare Invoice List</button>\r\n                        </div>\r\n                  \r\n                  : null}  \r\n                   \r\n             \r\n                    {\r\n                        this.state.isListPrepared && this.state.invoiceRecords?\r\n                        <div>\r\n              \r\n              <ToggleButtonGroup  variant={\"outline-primary\"} type=\"radio\" name=\"options\" defaultValue={1}>\r\n                    <Button onClick={this.bothSentAndUnsent} variant={\"outline-dark\"} value={1}>All</Button>\r\n                    <Button onClick={this.filterForSent} variant={\"outline-dark\"} value={2}>Sent</Button>\r\n                    <Button onClick={this.filterForUnsent} variant={\"outline-dark\"} value={3}>Not Sent</Button>\r\n                </ToggleButtonGroup>\r\n                      </div>\r\n                        :null\r\n                    }\r\n\r\n\r\n           \r\n\r\n\r\n                {\r\n                    this.state.isListPrepared && this.state.invoiceRecords?\r\n                        <div className=\"row\">\r\n                            <div className=\"col m-2\" style={{border:'solid 1px black',borderRadius:'5px'}}>\r\n                            <p>Invoice Period  {this.state.fromDate.formatDDMMYYYY().toString()} -- {this.state.toDate.formatDDMMYYYY().toString()}</p>\r\n                            {/* <button className=\"btn btn-warning\" onClick={this.createInvoices}>Create and Store Invoice</button> */}\r\n\r\n\r\n                            <select className=\"form-control\" aria-label=\"Default select example\" onChange={e=>this.setState({action:e.target.value})}>\r\n                                <option >Open this select menu</option>\r\n                                <option value=\"1\">create invoices for all records</option>\r\n                                <option value=\"2\">create invoices for when created = false</option>\r\n                                <option value=\"3\">send emails for all records</option>\r\n                                <option value=\"4\">send emails for when sent = false</option>\r\n                            </select>\r\n\r\n                            <button className=\"btn btn-primary m-2\" onClick={this.executeAction}>\r\n                                    Go!\r\n\r\n                            </button>\r\n                            <a className=\"btn btn-primary m-5\" href={this.state.redirectUrl}>\r\n                                    Go to Payments!\r\n                            </a>\r\n                            </div>   \r\n                       \r\n                          \r\n                            <div className=\"col m-1\" >{\r\n                                this.state.showPaymentModal && (this.state.chosenInvoice != null)?\r\n           \r\n                               <div className=\"row card\" style={{border:'solid 1px black',borderRadius:'5px'}}>                                \r\n                                   <div className=\"col\">\r\n                                       <h5>Edit Payment</h5>\r\n                                       <div className=\"row\">\r\n                                           <div className=\"col\" >\r\n                                            <label>ID</label>\r\n                                           </div>\r\n                                           <div className=\"col\" >\r\n                                            <div>{this.state.chosenInvoice._id}</div>\r\n                                           </div>                                                   \r\n                                       </div>\r\n                                       <div className=\"row\">\r\n                                            <div className=\"col\" >\r\n                                                    <label>Total</label>\r\n                                           </div>\r\n                                           <div className=\"col\" >\r\n                                                <div>{this.state.chosenInvoice.total}</div>\r\n                                           </div>  \r\n                                         \r\n                                       </div>\r\n                                       <div className=\"row mb-3\">\r\n                                            <div className=\"col\" >\r\n                                            <label>PaymentAmount</label>\r\n                                           </div>\r\n                                           <div className=\"col\" >\r\n                                           <div>{this.state.chosenInvoice.paymentAmount}</div>\r\n                                           </div>  \r\n                                         \r\n                                       </div>      \r\n                                 \r\n                                                        <div class=\"form-check\">\r\n                                                       <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" onChange={e=>this.setState({modalPaidStatus:1})} />\r\n                                                       <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                           Paid Less\r\n                                                       </label>\r\n                                                       </div>\r\n                                                       <div class=\"form-check\">\r\n                                                       <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option3\" onChange={e=>this.setState({modalPaidStatus:2})}/>\r\n                                                       <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                           Paid More\r\n                                                       </label>\r\n                                                       </div>\r\n                                                       <div class=\"form-check\">\r\n                                                       <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option3\" onChange={this.paidExact}/>\r\n                                                       <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                           Paid Exact\r\n                                                       </label>\r\n                                                       </div>\r\n                                       \r\n                                       \r\n                                       <div className=\"row mb-3\">\r\n                                            <div className=\"col\" >\r\n                                            <label >change to</label>\r\n                                           </div>\r\n                                           <div className=\"col\" >\r\n                                           <input className=\"form-control\" value={this.state.changeTo} onChange={(e)=>this.setState({changeTo:e.target.value})}></input>\r\n                                           </div>  \r\n                                         \r\n                                       </div>\r\n                                       <button className=\"btn btn-primary  m-23\" onClick={this.confirmPaymentUpdate} >Confirm</button>\r\n                                       \r\n                                       <button className=\"btn btn-danger m-2\" onClick={(e)=>this.setState({showPaymentModal:false})} >cancel</button>\r\n           \r\n                                   </div>    \r\n           \r\n           \r\n                               </div>\r\n                            \r\n                            :null}\r\n                            </div>     \r\n                           \r\n                           \r\n                           </div>                    \r\n                    :null\r\n\r\n                    \r\n                }\r\n\r\n            \r\n                </div>\r\n               \r\n                \r\n                {this.state.invoiceRecords != null && this.state.canRefresh?\r\n                   \r\n                        this.state.invoiceRecords.length>0?\r\n                            <div className=\"container\">\r\n                                <div className=\"row table-dark\">\r\n                                <div className=\"col\">\r\n                                        #\r\n                                    </div> \r\n                                    <div className=\"col\">\r\n                                        Download\r\n                                    </div> \r\n                                    <div className=\"col\">\r\n                                        Parent\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        Created\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        Sent\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        Payment\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        Total\r\n                                    </div>    \r\n                                </div>    \r\n                            \r\n                            {this.state.invoiceRecords.map((ir,index)=>(\r\n                                <div id={index}  className=\"row table-dark\">\r\n                                    <div className='col'>\r\n                                            {index +1}\r\n                                    </div>\r\n                                <div className=\"col\">\r\n                                    <button className=\"btn btn-danger\"\r\n                                        onClick={()=>this.createInvoice3({_id:ir._id,firstName:ir.parent.firstName,lastName:ir.parent.lastName})}\r\n                                    >create invoice</button>\r\n                                        \r\n                                    <hr></hr>\r\n                                </div> \r\n                                <div className=\"col\">\r\n                                    {ir.parent.firstName + \" \" + ir.parent.lastName }\r\n                                    {/* <ParentRow parent = {parent}/>  */}\r\n                                </div> \r\n                              \r\n                 \r\n                                <div className=\"col\">\r\n                                    {ir.created>0? ir.created :<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" /> }\r\n                                </div> \r\n                                <div className=\"col\">\r\n                                    {ir.sent>0? ir.sent :<FontAwesomeIcon icon={faTimesCircle} /> }                               \r\n                                </div>    \r\n                                <div className=\"col\">  \r\n                                   <button className=\"btn btn-primary\" disabled={ir.created == 0} onClick={(e)=>this.updatePayment(ir)} > {ir.paymentAmount? ir.paymentAmount:<FontAwesomeIcon icon={faTimesCircle}/>}</button>                               \r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    {ir.total !=null ? ir.total:<FontAwesomeIcon icon={faTimesCircle} /> }\r\n\r\n                                    \r\n                                </div>  \r\n                               \r\n\r\n                                \r\n                                </div>    \r\n                            ))}\r\n                            </div>\r\n                        \r\n                        :null\r\n                :\r\n                null\r\n                }\r\n              \r\n                \r\n    \r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvoiceTable2","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceStatusTable.js",["720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'jspdf-autotable'\r\nimport jsPDF from 'jspdf'\r\nimport { css } from '@emotion/react'\r\n\r\nDate.prototype.formatDDMMYYYY = function(){\r\n    return (this.getDate() +\"/\"+ (this.getMonth() + 1)+ \r\n    \"/\" +  this.getFullYear());\r\n}\r\n\r\nconst override = css`\r\n  margin-left:-90px\r\n`;\r\n\r\n\r\nclass InvoiceStatusTable extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            data:null,\r\n            students:null,\r\n            parents:null,\r\n            parentsMap:null,\r\n            dataTree:{parents:[]},\r\n            fromDate:null,\r\n            toDate:null,\r\n            mapCreated:false,\r\n            treeCreated:false,\r\n            position:1,\r\n            invoiceType:null,\r\n            specificStudents:[],\r\n            studentsOnDateRange:[],\r\n            isListPrepared:false,\r\n            chosenPids:[],\r\n            action:0,\r\n            showPaymentModal:false,\r\n            chosenInvoice:null,\r\n            changeTo:null,\r\n            redirectUrl:\"/\",\r\n            modalPaidStatus:null,\r\n            canRefresh:true,\r\n            invoiceRecords:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.getAllStudents();\r\n        await this.getAllParents();\r\n     \r\n    }\r\n\r\n    setInvoiceType = async  (e) =>{\r\n        console.log(e.target.value);\r\n        await this.getAllStudents();\r\n        this.setState({invoiceType:e.target.value})\r\n        await this.setState({mapCreated:false})\r\n        await this.setState({treeCreated:false})\r\n        await this.setState({isListPrepared:false})\r\n        await this.setState({dataTree:{parents:[]}})\r\n        await this.setState({chosenPids:[]})\r\n        await this.setState({specificStudents:[]})\r\n      \r\n    }\r\n\r\n   getSpecificStudents = async () =>{\r\n\r\n   }\r\n\r\n   getStudentsFromPids = async (pids) =>{\r\n\r\n    var idsString = \"\";\r\n\r\n    \r\n    \r\n    pids.map((id,index)=>{\r\n        idsString = idsString + 'pids=' + id.toString()\r\n        if((pids.length-1) != index){\r\n            idsString = idsString+'&'\r\n        } \r\n    })\r\n    await console.log(idsString);\r\n\r\n    await  axios.get('/api/students/pids?'+idsString,\r\n    {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var students = await response.data\r\n            console.log(response.data)\r\n            this.setState({students:students})\r\n\r\n        })\r\n\r\n   }\r\n\r\n   getStudentsWhoHaveLessonsInDatesRangeOnly = async ()=>{\r\n      \r\n        var students = []\r\n\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            await  axios.get('/api/taken-lessons/invoice-students?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()        ,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                console.log(response.data)\r\n                students = await response.data\r\n            \r\n            })\r\n        }\r\n\r\n\r\n        return students\r\n   }\r\n\r\n   getInvoicesByStudent = async ()=>{\r\n      \r\n    var students = []\r\n    var idsString = \"\";\r\n    this.state.specificStudents.map((student,item)=>{\r\n        idsString += ('sids='+student._id.toString()+'&')\r\n    })\r\n    \r\n\r\n    if(this.state.fromDate != null && this.state.toDate != null){\r\n        await  axios.get('/api/invoices/invoice-by-student?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()+'&'+idsString        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            console.log(response.data)\r\n            students = await response.data\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    return students\r\n}\r\n\r\ngetInvoicesByParent = async ()=>{\r\n      \r\n    var students = []\r\n    var idsString =\"\";\r\n    this.state.chosenPids.map((pid,item)=>{\r\n        idsString += ('pids='+pid.toString()+'&')\r\n    })\r\n    \r\n\r\n    if(this.state.fromDate != null && this.state.toDate != null){\r\n        await  axios.get('/api/invoices/invoice-by-parent?fromDate='+this.state.fromDate.toString()+'&toDate='+this.state.toDate.toString()+'&'+idsString        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            console.log(response.data)\r\n            students = await response.data\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    return students\r\n}\r\n\r\n    getAllStudents = async () =>{\r\n        await  axios.get('/api/students/all',\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            console.log(response.data)\r\n            this.setState({students:response.data})\r\n        })\r\n    }\r\n\r\n    getAllParents = async () =>{\r\n        await  axios.get('/api/parents/all',\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            \r\n            this.setState({parents:response.data})\r\n        })\r\n    }\r\n\r\n    setCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({specificStudents:[...this.state.specificStudents, item]})\r\n        }else{\r\n            const index = await this.state.specificStudents.indexOf(item);\r\n            console.log(index)\r\n                if (index > -1) {\r\n                    var list = await this.state.specificStudents.filter(a=>a!=item);\r\n                    this.setState({specificStudents:list});\r\n                }\r\n\r\n        }\r\n\r\n\r\n        console.log(this.state.specificStudents);\r\n\r\n       \r\n    }\r\n\r\n    setParentCheckbox = async (e,item) =>{\r\n        var isChecked = await e.target.checked\r\n        if(isChecked){\r\n            this.setState({chosenPids:[...this.state.chosenPids, item._id]})\r\n        }else{\r\n            const index = await this.state.chosenPids.indexOf(item._id);\r\n            \r\n                if (index > -1) {\r\n                    var list = await this.state.chosenPids.filter(a=>a!=item._id);\r\n                    this.setState({chosenPids:list});\r\n                }\r\n\r\n        }\r\n        console.log(this.state.chosenPids)\r\n       \r\n    }\r\n  \r\n\r\n    createMap = async () =>{\r\n        var parentsMap = await new Map()\r\n        await this.state.students.map((student)=>{\r\n            if(!parentsMap.has(student.parent._id)){\r\n                parentsMap[student.parent._id] = [student]\r\n            }else{\r\n                parentsMap[student.parent._id].push(student)\r\n            }\r\n        })\r\n         \r\n        await this.setState({parentsMap:parentsMap})\r\n        await this.setState({mapCreated:true})\r\n    }\r\n    \r\n    getInvoices = async (month,year) =>{\r\n        var invoices = []\r\n        await  axios.get('/api/invoices/query?month='+month+'&year='+year,\r\n        {headers:this.state.options})\r\n                    .then(async (response) =>{\r\n                        invoices = await response.data\r\n                                            \r\n                    }) \r\n        return invoices\r\n\r\n    }\r\n\r\n\r\n    createDataTree = async () =>{\r\n\r\n        var month = this.state.toDate.getMonth()+1\r\n        var year = this.state.toDate.getFullYear();\r\n\r\n        var invoices = await this.getInvoices(month,year)\r\n        \r\n\r\n        await this.setState({dataTree:{parents:[]}})   \r\n        await this.createRedirectUrl();\r\n        if(this.state.fromDate < this.state.toDate){\r\n            \r\n       \r\n             \r\n        var dataTree = await  this.state.dataTree\r\n        Object.keys(this.state.parentsMap).map((pid,i) => {\r\n            var parent = Object.assign({},this.state.parentsMap[pid][0].parent) \r\n            //var students = this.state.parentsMap[pid].concat()\r\n            \r\n           \r\n            // parent.students = []\r\n            // students.map(async (student,index)=>{\r\n                \r\n            //    var takenLessons = await this.getTakenLessonForStudent(student)             \r\n               \r\n            //    student.parent = null\r\n            //    student.takenLessons = takenLessons\r\n            //    parent.students.push(student)\r\n            // })\r\n            \r\n\r\n            dataTree.parents.push(parent)           \r\n\r\n                  \r\n    })  \r\n        \r\n        this.setState({treeCreated:true})\r\n        this.setState({dataTree:dataTree})\r\n        }else{\r\n\r\n            alert('dates error')\r\n        }\r\n        var parents = dataTree.parents;\r\n\r\n        //console.log(parents);      \r\n\r\n        await parents.map((parent,index)=>{\r\n            var invoice = invoices? invoices.filter(a=>a.parent._id == parent._id) :[] \r\n\r\n            if(invoice[0] != null)\r\n            {\r\n                invoice[0].data = null\r\n                invoice[0].parent = null \r\n            }           \r\n\r\n            parent.invoice = invoice.length>0?invoice[0]:null                      \r\n\r\n            \r\n        })   \r\n        \r\n        console.log(dataTree)\r\n        await this.setState({dataTree:dataTree})\r\n        \r\n\r\n\r\n\r\n        \r\n    }\r\n\r\n    getStudentsFromParent = async (pid) =>{\r\n\r\n        var students = [];\r\n        await  axios.get('/api/students/pid?pid='+pid,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var data = await response.data\r\n            students = data.map((s)=>{\r\n                 var obj =   {_id: s._id,firstName:s.firstName,lastName:s.lastName }\r\n\r\n                    return obj\r\n        })\r\n        \r\n        })\r\n        return students;\r\n    }\r\n\r\n\r\n\r\n    getTakenLessonForStudent = async (sid) =>{\r\n\r\n        var takenLessons = [];\r\n        await  axios.get('/api/taken-lessons/query?sid='+sid+\r\n        '&from='+this.state.fromDate.toString()+'&to='+this.state.toDate.toString()        ,\r\n            {headers:this.state.options})\r\n        .then(async (response) =>{\r\n            var data = await response.data\r\n            takenLessons = data.map((tl)=>{\r\n                 var obj =   {correction: tl.correction,\r\n                                date: tl.date,\r\n                                day: tl.day,\r\n                                discount: tl.discount,\r\n                                hours: tl.hours,\r\n                                isExtra: tl.isExtra,\r\n                                price: tl.price,\r\n                                rateKey:  tl.rateKey,\r\n                                subject: tl.subject\r\n                                }\r\n\r\n                    return obj\r\n        })\r\n        \r\n        })\r\n        return takenLessons;\r\n    }\r\n\r\n    prepareInvoiceList = async (e) =>{\r\n\r\n        if(this.state.invoiceType != null){\r\n\r\n            switch(parseInt(this.state.invoiceType)) {\r\n                \r\n                case 0:                    \r\n                    var invoiceRecords = await this.getStudentsWhoHaveLessonsInDatesRangeOnly();\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    this.setState({isListPrepared:true})\r\n                  break;\r\n                case 1:\r\n                    var invoiceRecords = await this.getInvoicesByStudent()\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    await this.setState({isListPrepared:true})\r\n                  break;\r\n                case 2:\r\n                    await this.setState({isListPrepared:true})\r\n                  // code block\r\n                  break;\r\n                case 3:\r\n                    ////still to do\r\n                    \r\n                    var invoiceRecords = await this.getInvoicesByParent()\r\n                    await this.setState({invoiceRecords:invoiceRecords})\r\n                    // await this.setState({students:students})\r\n                    await this.setState({isListPrepared:true})\r\n                  // code block\r\n                  break;\r\n                default:\r\n                    alert('fail')\r\n                  // code block\r\n              }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    createInvoices = async () =>{ // for all records\r\n        var data = await this.state.invoiceRecords;\r\n\r\n        data.map(async(ir,index)=>{\r\n            await this.storeInvoice(ir._id)\r\n        })\r\n    }\r\n\r\n    createInvoicesForNotCreated = async () =>{\r\n        var data = await this.state.invoiceRecords.filter((ir)=>ir.invoices[0] == null) \r\n        data.map(async(ir,index)=>{\r\n            await this.storeInvoice(ir._id)\r\n        })\r\n\r\n    }\r\n\r\n    sendInvoicesForAllRecords = async () =>{\r\n        var data = await this.state.invoiceRecords.filter(ir=>ir.invoices[0] != null)\r\n        var invoices = await data.map(ir=>ir.invoices[0])\r\n        await this.sendInvoices(invoices);\r\n\r\n    }\r\n\r\n    sendInvoiceForNotSent = async (e) =>{\r\n        var irs = await this.state.invoiceRecords.filter(ir=>ir.invoices[0] != null)\r\n        var data = await irs.filter(ir=>ir.invoices[0].sent == false)\r\n        var invoices = await data.map(ir=>ir.invoices[0])\r\n        await this.sendInvoices(invoices);\r\n\r\n    }\r\n\r\n    openPaymentModal = (e) =>{\r\n        this.togglePaymentModal(e)\r\n        //this.setState({chosenInvoice:invoice})\r\n        \r\n\r\n    }\r\n\r\n    togglePaymentModal = (e) =>{\r\n        this.setState({showPaymentModal2:!this.state.showPaymentModal2})\r\n    }\r\n\r\n    executeAction = async () =>{\r\n        var action = parseInt(this.state.action);\r\n\r\n        switch(action) {\r\n            case 1:\r\n              await this.createInvoices();\r\n              \r\n              break;\r\n            case 2:\r\n              this.createInvoicesForNotCreated();\r\n              break;\r\n            case 3:\r\n              this.sendInvoicesForAllRecords();\r\n               break;\r\n            case 4:\r\n                this.sendInvoiceForNotSent();\r\n                break;\r\n            default:\r\n              alert('no action to call');\r\n          }\r\n\r\n          setTimeout(\r\n            () => {\r\n                this.refreshData();\r\n               \r\n        \r\n        }, \r\n            3000\r\n          );\r\n\r\n        \r\n    }\r\n\r\n    test = async (e)=>{\r\n        await  axios.get('/api/invoices/test?sd=2021-03-08&ed=2021-06-25&pid=5ff0a77083571c3cb43d7890',\r\n                    {headers:this.state.options})\r\n                .then(async (response) =>{\r\n                    var res = await response.data\r\n                    console.log(res)\r\n                \r\n                })\r\n    }\r\n\r\n    sendInvoices = async  (invoices)  =>{\r\n        if(invoices.length > 0){\r\n            var ids = invoices.map(a=> a._id)\r\n\r\n            console.log(ids)\r\n\r\n            var idsString = \"\";\r\n\r\n            ids.map((id,index)=>{\r\n                idsString = idsString + '&ids='+ id.toString()\r\n            })\r\n\r\n\r\n            await  axios.get('/api/invoices/send?'+idsString,\r\n                    {headers:this.state.options})\r\n                .then(async (response) =>{\r\n                    var res = await response.data\r\n                    console.log(res)\r\n                \r\n                })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    storeInvoice =async  (pid) =>{\r\n        \r\n        var startDate = this.state.fromDate\r\n        var endDate = this.state.toDate\r\n        var month = this.state.toDate.getMonth()+1\r\n        var year = this.state.toDate.getFullYear();\r\n        \r\n    \r\n\r\n        await  axios.post('/api/invoices?pid='+pid+\r\n            '&year='+year+'&month='+month+'&sd='+startDate+'&ed='+endDate,\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            \r\n           console.log(response.data)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    sendInvoice = async ()=>{\r\n\r\n        await  axios.get('/api/invoices/all',\r\n        {headers:this.state.options})\r\n    .then(async response=>{\r\n        \r\n       \r\n       var buffer = await response.data[0].data.data\r\n       var b64 = Buffer.from(buffer).toString('base64')\r\n\r\n      window.open(\"data:application/pdf,\" + encodeURI(b64))\r\n    })\r\n\r\n    }\r\n\r\n\r\n    createInvoice = async (parent) =>{\r\n\r\n        const students = await this.getStudentsFromParent(parent._id);\r\n\r\n        const studs =  students.map(async(student,index)=>{\r\n            var lessons = await  this.getTakenLessonForStudent(student._id)\r\n            \r\n            student.takenLessons = await lessons\r\n        })\r\n\r\n        const numFruits = await Promise.all(studs)\r\n        var height = 10\r\n        var doc = await new jsPDF()\r\n       await doc.text('', 10, height)\r\n        height+=10;\r\n       await doc.text('CHEQUES PAYABLE TO:', 10, height)\r\n        height+=10;\r\n       await doc.text('ELECTRONIC PAYMENTS TO:', 10, height)\r\n        height+=10;\r\n       await doc.text('Parent Name '+parent.firstName, 10, height)\r\n            await students.map((student,index)=>{\r\n                height += 10;\r\n                doc.text('Student '+student.firstName, 10, height)\r\n                var data = []\r\n                var total = 0;\r\n                    student.takenLessons.map((lesson,index)=>{\r\n                        height += 5;\r\n                        var date = (new Date(lesson.date)).formatDDMMYYYY().toString()\r\n                        var obj = [\r\n                                    date,\r\n                                    lesson.subject,\r\n                                    lesson.correction,\r\n                                    lesson.hours.toString(),\r\n                                    lesson.price.toString(),\r\n                                    (lesson.price*lesson.hours).toString()\r\n\r\n                        ]\r\n\r\n                                  total += (lesson.price*lesson.hours);\r\n                        data.push(obj)\r\n                    })\r\n                   \r\n                    doc.autoTable({ head:[[\"date\",\"subject\",\"correction\",\"hours\",\"price\",\"FPL\"]],body:data,startY:height})\r\n                    doc.text('Fee For Month £'+total.toString(), 50, 20)\r\n            })\r\n            \r\n\r\n            console.log(doc.output('datauri').toString());\r\n            doc.save();\r\n    }\r\n\r\n\r\n    createRedirectUrl = () =>{\r\n            \r\n\r\n    if(this.state.parentsMap != null){  \r\n            var url = \"payment-panel?temp=test\";          \r\n            Object.keys(this.state.parentsMap).map((pid,i) => {\r\n                url = url+ \"&pid=\"+pid\r\n            })\r\n \r\n            url = url + \"&month=\"+ (this.state.toDate.getMonth()+1)\r\n            url = url + \"&year=\"+ this.state.toDate.getFullYear();\r\n\r\n\r\n          this.setState({redirectUrl:url})\r\n          console.log(this.state.redirectUrl)\r\n\r\n        }else{\r\n            alert('no url ');\r\n            \r\n        }\r\n\r\n      \r\n\r\n    }\r\n\r\n    updatePayment = (invoice) =>{\r\n        this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n        this.setState({chosenInvoice:invoice})\r\n        console.log(invoice)\r\n\r\n    }\r\n\r\n    paidExact = (e) =>{\r\n        this.setState({modalPaidStatus:0})\r\n        this.setState({changeTo:this.state.chosenInvoice.total})\r\n        \r\n    }\r\n\r\n    confirmPaymentUpdate = async () =>{\r\n\r\n        if(this.state.modalPaidStatus != null){\r\n\r\n            if(this.state.changeTo != null){\r\n\r\n                var error = false;\r\n\r\n                if(this.state.modalPaidStatus == 0 && (this.state.changeTo != this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(this.state.modalPaidStatus == 1 && (this.state.changeTo >=  this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(this.state.modalPaidStatus == 2 && (this.state.changeTo <=  this.state.chosenInvoice.total )){\r\n                    error = true\r\n                }\r\n                if(!error){\r\n                    var invoice = await this.state.chosenInvoice\r\n                    await  axios.get('/api/invoices/update-payment?id='+invoice._id+'&amount='+this.state.changeTo+'&status='+this.state.modalPaidStatus,\r\n                            {headers:this.state.options})\r\n                        .then(async (response) =>{\r\n                            console.log(response.data)\r\n                        \r\n                        })\r\n\r\n                    this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n                    alert('payment updated');\r\n                    }else{\r\n                        alert('payemnt entry error')\r\n                    }\r\n                }else{\r\n                alert('change to is null');\r\n            }\r\n\r\n\r\n        }else{\r\n            alert('null paid status')\r\n        }\r\n\r\n        \r\n    }\r\n    refreshData = async (e) =>{\r\n        this.prepareInvoiceList();\r\n     \r\n\r\n       \r\n    }\r\n\r\n    render(){\r\n\r\n        var parents = this.state.dataTree.parents\r\n\r\n        setTimeout(\r\n            () => {\r\n                this.setState({ position: 1 });\r\n               \r\n        \r\n        }, \r\n            3000\r\n          );\r\n\r\n        return(\r\n            <div>\r\n\r\n                <div className=\"h1\">\r\n                    Invoice status Table\r\n                </div>  \r\n             \r\n            \r\n                <div className=\"container\">\r\n                    <h3>Invoice Dates</h3>                  \r\n            \r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>From Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.fromDate}\r\n                                onChange={date => this.setState({fromDate:date})}\r\n                                />  \r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <label>To Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.toDate}\r\n                                onChange={date => this.setState({toDate:date})}\r\n                                />  \r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n              )\r\n    }\r\n}\r\n\r\nexport default InvoiceStatusTable","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Teachers\\AllTeachers.js",[],"C:\\git\\mslc\\mslc\\src\\components\\NavBar.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Omega\\OmegaPanel.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\PaymentTypes.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\Months.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Omega\\HackRegister.js",["745"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport EnterData from '../Register';\r\nclass HackRegister extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            teachers: null,\r\n            teacherToHackId:null,\r\n            teacherToHackUserId:null,\r\n            options :{ userid:this.props.userId }\r\n           }\r\n    }\r\n\r\n    componentDidMount =  async ()=>{\r\n        await axios.get('/api/teachers/all',\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n         \r\n             this.setState({teachers:data})\r\n           \r\n         \r\n        });  \r\n    }  \r\n\r\n    setTeacherToHack = async (index) =>{\r\n        var teacher = this.state.teachers[index];\r\n        console.log(teacher);\r\n        this.setState({teacherToHackId:teacher._id})\r\n        this.setState({teacherToHackUserId:teacher.userId})\r\n\r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Hack Teacher</h1>\r\n\r\n                <table className=\"table table-responsiv table-light\">\r\n                        <thead>\r\n                            <th>\r\n                                <tr>Full Name</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>Email</tr>\r\n                            </th>\r\n                      \r\n                            <th>\r\n                                <tr>Bonus</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>Role</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>-</tr>\r\n                            </th>\r\n                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.teachers?.length>0?\r\n                                this.state.teachers.map((item,index)=>(\r\n                                    <tr>\r\n                                        <td>{item.fullName}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.bonus}</td>\r\n                                        <td>{item.role}</td>\r\n                                        <td><button className=\"btn btn-danger\" onClick={e=>this.setTeacherToHack(index)}>Hack</button></td>\r\n                                    </tr>\r\n\r\n                                ))\r\n                            :null\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div>\r\n                        {\r\n                            this.state.teacherToHackId?\r\n                            <EnterData id={this.state.teacherToHackId} userId={this.state.teacherToHackUserId} role={2}   /> \r\n                            :null\r\n                        }\r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HackRegister","C:\\git\\mslc\\mslc\\src\\components\\Omega\\EnterData.js",["746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"C:\\git\\mslc\\mslc\\src\\components\\Omega\\HackLesson.js",["776"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport MyLessons from './MyLessons';\r\nclass HackLesson extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            teachers: null,\r\n            teacherToHackId:null,\r\n            teacherToHackUserId:null,\r\n            options :{ userid:this.props.userId }\r\n           }\r\n    }\r\n\r\n    componentDidMount =  async ()=>{\r\n        await axios.get('/api/teachers/all',\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n         \r\n             this.setState({teachers:data})\r\n           \r\n         \r\n        });  \r\n    }  \r\n\r\n    setTeacherToHack = async (index) =>{\r\n        var teacher = this.state.teachers[index];\r\n        console.log(teacher);\r\n        this.setState({teacherToHackId:teacher._id})\r\n        this.setState({teacherToHackUserId:teacher.userId})\r\n\r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Hack Teacher</h1>\r\n\r\n                <table className=\"table table-responsive table-light\">\r\n                        <thead>\r\n                            <th>\r\n                                <tr>Full Name</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>Email</tr>\r\n                            </th>\r\n                      \r\n                            <th>\r\n                                <tr>Bonus</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>Role</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>-</tr>\r\n                            </th>\r\n                \r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.teachers?.length>0?\r\n                                this.state.teachers.map((item,index)=>(\r\n                                    <tr>\r\n                                        <td>{item.fullName}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.bonus}</td>\r\n                                        <td>{item.role}</td>\r\n                                        <td><button className=\"btn btn-danger\" onClick={e=>this.setTeacherToHack(index)}>Hack</button></td>\r\n                                    </tr>\r\n\r\n                                ))\r\n                            :null\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div>\r\n                        {\r\n                            this.state.teacherToHackId?\r\n                            <MyLessons id={this.state.teacherToHackId} userId={this.state.teacherToHackUserId} role={2} />\r\n                         \r\n                            :null\r\n                        }\r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HackLesson","C:\\git\\mslc\\mslc\\src\\components\\Omega\\MyLessons.js",["777","778","779","780","781"],"import react,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nDate.prototype.formatDDMMYYYY = function(){\r\n    return (this.getDate() +\"/\"+ (this.getMonth() + 1) + \r\n    \"/\" +  this.getFullYear());\r\n}\r\nclass MyLessons extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {fromDate:null,\r\n            toDate:null,\r\n            takenLessons:null,\r\n            isResults:false,\r\n            subtotal:null,\r\n            lessonToDelete:null,\r\n            lessonToDeleteId:null,\r\n            justSaved:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId }   \r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.setMinMaxDates()\r\n    }\r\n\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()        \r\n        \r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() >= 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n\r\n        await this.setState({maxDate:new Date(maxYear,maxMonth,25)})\r\n        await this.setState({minDate:new Date(minYear,minMonth,26)})\r\n\r\n        await console.log(this.state.minDate,this.state.maxDate)\r\n        \r\n       \r\n        \r\n      \r\n    }\r\n\r\n    getLessons = async () =>{\r\n        console.log(this.props.id)\r\n        await  axios.get('/api/taken-lessons/teacher/fromtodate?tid='+this.props.id+\r\n            '&fromDate='+this.state.fromDate+'&toDate='+this.state.toDate,\r\n            {headers:this.state.options})\r\n        .then(response=>{\r\n            this.setState({takenLessons:response.data})\r\n            this.calculateSubtotal(response.data);\r\n            this.setState({isResults:true})\r\n\r\n        })\r\n    }\r\n\r\n    search = (e) =>{\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            if(this.state.fromDate<this.state.toDate){\r\n                this.getLessons()\r\n            }else{\r\n                alert('cannot query between these dates');\r\n            }\r\n        }else{\r\n            alert('enter dates')\r\n        }\r\n    }\r\n\r\n    calculateSubtotal = (lessons) =>{\r\n        if(lessons != null){\r\n            var subtotal  = 0;\r\n\r\n            lessons.map((lesson,index)=>{\r\n                var ppl = lesson.payPerLesson;\r\n                subtotal = subtotal +ppl\r\n            })\r\n            \r\n         \r\n            this.setState({subtotal:subtotal})\r\n\r\n        }else{\r\n            this.setState({subtotal:null})\r\n        }\r\n    }\r\n    toggleModal = () =>{\r\n        \r\n        this.setState({showModal:!this.state.showModal})\r\n    }\r\n    deleteLesson = async () =>{\r\n        this.toggleModal()\r\n        console.log()\r\n        await axios.delete('/api/taken-lessons/delete?id='+this.state.lessonToDeleteId,{headers:this.state.options})\r\n        .then(response =>{\r\n            console.log(response)\r\n        })\r\n\r\n        this.setState({justSaved:true})\r\n                \r\n                setTimeout(()=>\r\n                    this.setState({justSaved:false})\r\n                , 3000);\r\n\r\n        this.search();\r\n      \r\n    }\r\n\r\n    setLesson = (e,id)=>{\r\n        this.setState({lessonToDeleteId:id})\r\n        this.toggleModal()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div >\r\n            <div id=\"MyLessonsContainer\" className=\"container\">\r\n                <h1 className=\"pd-sm \">My Lessons</h1>\r\n                {\r\n                    this.state.justSaved?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }\r\n                    <div className=\"row\">\r\n                    <div className=\"col\">\r\n                            <form>\r\n                                <div class=\"form-group\">\r\n                                    <label ><h4>From : </h4> </label>\r\n                                    <DatePicker className=\"form-control\"\r\n                                    selected={this.state.fromDate}\r\n                                    onChange={date => this.setState({fromDate:date})}\r\n                                    /> \r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label ><h4>To : </h4></label>\r\n                                    <DatePicker className=\"form-control\"\r\n                                    selected={this.state.toDate}\r\n                                    onChange={date => this.setState({toDate:date})}\r\n                                    /> \r\n                                </div>\r\n\r\n\r\n                            \r\n                            </form>\r\n                \r\n                           \r\n                                <button className=\"btn btn-primary mb-3\"\r\n                                    onClick={this.search}\r\n                                >Search</button>\r\n                            \r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    {this.state.isResults?\r\n                    \r\n                        this.state.subtotal?\r\n                            <button className=\"btn btn-success\" disabled={true} >{'£ '+ this.state.subtotal}</button>\r\n                        :null\r\n                    \r\n                    :null}\r\n                </div>\r\n\r\n                </div>\r\n\r\n                \r\n\r\n      \r\n\r\n                <div>\r\n                    {this.state.isResults?\r\n                    \r\n                        this.state.takenLessons?\r\n                        \r\n                            this.state.takenLessons.length > 0 ?\r\n                            \r\n                                <div>\r\n                                    <table className=\"table table-responsive\">\r\n                                        <thead>\r\n                                            <th>\r\n                                                Date\r\n                                            </th>\r\n                                            <th>\r\n                                                Name\r\n                                            </th>\r\n                                            <th>\r\n                                                Subject\r\n                                            </th>\r\n                                            <th>\r\n                                                Correction\r\n                                            </th>\r\n                                            <th>\r\n                                                RPH\r\n                                            </th>\r\n                                            <th>\r\n                                                Hours\r\n                                            </th>\r\n                                            <th>\r\n                                                PPL\r\n                                            </th>\r\n                                            <th>\r\n                                                Delete\r\n                                            </th>\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                           \r\n                                           {this.state.takenLessons.map((item,index)=>(\r\n                                               <tr>\r\n                                                   <td>\r\n                                                       {new Date(item.date).formatDDMMYYYY()}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.student.firstName}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.subject}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.correction}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.rate}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.hours}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.payPerLesson}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {new Date(item.date) <= this.state.maxDate && new Date(item.date) >= this.state.minDate?\r\n                                                        <button className=\"btn btn-danger\"\r\n                                                        onClick={e=>this.setLesson(e,item._id)}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       :\r\n                                                       <button className=\"btn btn-danger\"\r\n                                                        disabled={true}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       }\r\n\r\n                                                        \r\n                                                   </td>\r\n                                               </tr>\r\n                                           ))}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                    \r\n\r\n                            :<div><button className=\"btn btn-warning\" disabled={true}>No Lessons Found !</button></div>\r\n\r\n                        :null\r\n                        \r\n                    :null}\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                           the lesson will be removed for today, to remove permenantly please contact an admin, providing the student's name and subject\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.deleteLesson}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyLessons","C:\\git\\mslc\\mslc\\src\\components\\Omega\\Queries.js",["782","783","784"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport MyLessons from './MyLessons';\r\nimport CsvDownload from 'react-json-to-csv'\r\nimport DatePicker from \"react-datepicker\";\r\nDate.prototype.addDays = function(days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}\r\n\r\nclass Queries extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            missedInformedLessons:null,\r\n            startDate: null,\r\n            endDate: null,\r\n            deleteTakenLessonStartDate: null,\r\n            deleteTakenLessonEndDate: null,\r\n            options :{ userid:this.props.userId }\r\n           }\r\n    }\r\n\r\n    componentDidMount =  async ()=>{\r\n  \r\n    } \r\n    \r\n    \r\n    getMissedInformedLesson = async (e) =>{\r\n\r\n        if(this.state.startDate == null || this.state.endDate == null){\r\n            alert('null dates')\r\n            return\r\n        }\r\n\r\n        var startDate = this.state.startDate\r\n        var endDate = this.state.endDate;\r\n        var nextDay = startDate;\r\n\r\n        var lessons = []\r\n\r\n        while(nextDay <= endDate)\r\n        {\r\n            await axios.get('/api/lessons/get-missed-informed-lessons?date='+nextDay,{headers:this.state.options})\r\n            .then(async response => {\r\n            \r\n           await  lessons.push(response.data)\r\n         \r\n        });\r\n            var nextDay = await nextDay.addDays(1)\r\n        }\r\n        var merged = await [].concat.apply([], lessons);\r\n        await this.setState({missedInformedLessons: merged})\r\n        console.log(merged)\r\n\r\n        \r\n    }\r\n\r\n    updateTeacherTakenLessons = async (e) =>{\r\n        var teacherId = \"60f5f64b8711222d3891e3aa\"\r\n        var date = new Date(2022,1,26)\r\n        await axios.get('/api/taken-lessons/update-taken-lessons?id='+teacherId+'&date='+date,{headers:this.state.options})\r\n        .then(async response => {\r\n        \r\n      console.log(response.data)\r\n\r\n        });  \r\n    }\r\n\r\n    runQuery = async (e) =>{\r\n        var teacherId = \"61c318094d7fdf07d1afc7b9\"\r\n        await axios.get('/api/lessons/add-new-attributes?id='+teacherId,{headers:this.state.options})\r\n        .then(async response => {\r\n        \r\n       console.log(response.data)\r\n\r\n        }); \r\n    }\r\n\r\n    sendEmails = async (e)=>\r\n    {\r\n        await axios.get('/api/preinvoices/send-pre-invoice?id=635e64e83da386700ea8f2cc',{headers:this.state.options})\r\n        .then(async response => {\r\n        \r\n      console.log(response.data)\r\n\r\n        });  \r\n    }\r\n\r\n    deleteTakenLessons = async (e) =>{\r\n        var lesson = {teacher:\"\",\r\n        subject:\"maths\",\r\n        correction:1,\r\n        student:\"\",\r\n        rateKey:\"\",\r\n        rate:1,\r\n        price:10,\r\n        day:0,\r\n        startDate:new Date(2022,10,1),\r\n        endDate:new Date(2022,10,1),\r\n        isCoverLesson:true,\r\n        fadj:1,\r\n        padj:4,\r\n        groupRate: 2,\r\n        groupPrice:2,\r\n        groupRateKey:\"djh\",\r\n        singleRate:3,\r\n        singlePrice:1,\r\n        singleRateKey:\"\",\r\n        lessonType:1}\r\n        await axios.post('/api/taken-lessons/post-lesson',{headers:this.state.options, data: {lesson: lesson}})\r\n        .then(async response => {\r\n        \r\n       \r\n        }); \r\n    } \r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Queries </h1>\r\n\r\n                <table className=\"table table-responsive table-light\">\r\n                        <thead>\r\n                            <th>\r\n                                <tr>Query Name</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>start date</tr>\r\n                            </th>\r\n                            <th>\r\n                                <tr>end date</tr>\r\n                            </th>\r\n                      \r\n                        \r\n                \r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    missed informed lessons\r\n                                </td>\r\n                                <td>\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                        dateFormat=\"dd/MM/yyyy\"\r\n                                    \r\n                                        selected={this.state.startDate}\r\n                                        onChange={date => this.setState({startDate:date})} />  \r\n                                </td>\r\n                                <td>\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                        dateFormat=\"dd/MM/yyyy\"\r\n                                   \r\n                                        selected={this.state.endDate}\r\n                                        onChange={date => this.setState({endDate:date})}\r\n                                         />  \r\n                                </td>\r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={this.getMissedInformedLesson}>Run</button>\r\n                                </td>\r\n                             \r\n                                <td>\r\n                                {this.state.missedInformedLessons?\r\n                                <button className='btn btn-primary' ><CsvDownload data={this.state.missedInformedLessons} /></button>\r\n                                :\"no data\"}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    update taken lessons\r\n                                </td>\r\n                                <td>\r\n                                    enter teacher Id\r\n                                </td>\r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={this.updateTeacherTakenLessons} >Run</button>\r\n                                </td>                             \r\n                                <td>\r\n                                    Done\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    update all lessons with new attributes\r\n                                </td>\r\n                                <td>\r\n                                    enter teacher Id\r\n                                </td>\r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={this.runQuery} >Run</button>\r\n                                </td>                             \r\n                                <td>\r\n                                    Done\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    post taken lesson\r\n                                </td>\r\n                              \r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={this.deleteTakenLessons} >Run</button>\r\n                                </td>                             \r\n                                <td>\r\n                                    Done\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    send a few emails to personal email\r\n                                </td>\r\n                              \r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={this.sendEmails} >Run</button>\r\n                                </td>                             \r\n                                <td>\r\n                                    Done\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div>\r\n                        {\r\n                            this.state.teacherToHackId?\r\n                            <MyLessons id={this.state.teacherToHackId} userId={this.state.teacherToHackUserId} />\r\n                         \r\n                            :null\r\n                        }\r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Queries","C:\\git\\mslc\\mslc\\src\\components\\Register.js",["785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"import {Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Toggle } from 'reactstrap';\r\nimport AllLessonsRow from './AllLessonsRow'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport qs from 'qs'\r\nimport Switch from \"react-switch\";\r\nimport {getDateData} from '../Helper'\r\nimport dayjs from 'dayjs'\r\n\r\nclass Register extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            data:null,\r\n            extraLessons:[],\r\n            extraEnteredLessons:[],\r\n            chosenDate:null,\r\n            justExtra: false,\r\n            justExtraBtnMsg: \"only extra lessons\",\r\n            showRegularLessonModal:false,\r\n            showExtraLessonModal:false,\r\n            regularLessonModalIndex:null,\r\n            extraLessonModalIndex:null,\r\n            allLessons:null,\r\n            filteredAllLessons:[],\r\n            searchString:null,\r\n            extraLesson:null,\r\n            studentNotOnList:false,\r\n            teacherId:null,\r\n            showSaveModal:false,\r\n            justSaved:false,\r\n            noChanges:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            changesSaved:false,\r\n            changedNotSaved:false,\r\n            tooltipOpen: false,\r\n            error: false,\r\n            errorMessage: null,\r\n            modalError: false,\r\n            modalErrorMessage: null,\r\n            matches: window.matchMedia(\"(min-width: 768px)\").matches,\r\n            options :{userid:this.props.userId },\r\n            todaysDate: new Date(),\r\n            nextPreInvoiceDate:null,\r\n            nextPostInvoiceDate:null,\r\n            isLockDown: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async ()=>{\r\n              \r\n    var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var date = queryString.date? queryString.date : null\r\n        if(date != null){\r\n            var dateString =date;\r\n            var splitDate = dateString.split('/');\r\n            var month = splitDate[1] - 1; //Javascript months are 0-11\r\n\r\n            var date = new Date(splitDate[2], month, splitDate[0]);\r\n\r\n            if(Object.prototype.toString.call(date) === \"[object Date]\"){\r\n                this.setDate(new Date(date))\r\n             }\r\n        }\r\n        var date = new Date();\r\n        await this.setState({teacherId:this.props.id})\r\n        await this.setState({options: {userid:this.props.userId}})\r\n        await this.setDate(date)\r\n        \r\n    \r\n      // await this.setMinMaxDates();\r\n\r\n\r\n        var nextPreInvoiceDate = await this.getNextDate(15, this.state.todaysDate)\r\n        var nextPostInvoiceDate = await this.getNextDate(25, this.state.todaysDate)\r\n        var isTakenLessonsLocked = await await this.isInvoiceDay(this.state.todaysDate)\r\n\r\n        this.setState({nextPreInvoiceDate:nextPreInvoiceDate})\r\n        this.setState({nextPostInvoiceDate:nextPostInvoiceDate})\r\n        this.setState({isLockDown: isTakenLessonsLocked})\r\n\r\n        \r\n    }\r\n\r\n    getNextDate = async(day, todaysDate) =>\r\n    {\r\n        var td = await  new Date(todaysDate)\r\n        var dt = td.getDate();\r\n\r\n        td.setDate(day);\r\n        if (dt >= day) {\r\n            td.setMonth(td.getMonth() + 1);\r\n        }\r\n\r\n        td.setHours(23, 59, 59, 0);\r\n        td = dayjs(td).format(\"DD MMMM YYYY\")\r\n        return td;\r\n    }\r\n\r\n    isInvoiceDay = async(todaysDate) =>\r\n    {\r\n        var td = await  new Date(todaysDate)\r\n        var dt = td.getDate();\r\n        return dt == 15 || dt == 14 || dt == 24 || dt == 25 \r\n    }\r\n\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()       \r\n\r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() > 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n        \r\n        this.setState({maxDate:new Date(maxYear,maxMonth,27)})\r\n        this.setState({minDate:new Date(minYear,minMonth,26)})\r\n       \r\n\r\n      \r\n    }\r\n\r\n    addExtraLesson = async (lesson) =>{\r\n    \r\n        if(lesson != null){\r\n            lesson.hours = 1\r\n            this.setState({extraEnteredLessons:this.state.extraEnteredLessons.concat(lesson)})\r\n            this.toggleExtraLessonModal()\r\n        }else{\r\n            \r\n            \r\n            this.setState({modalErrorMessage: \"Lesson Not Chosen\"})\r\n            this.triggerModalErrorMessage();\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    triggerErrorMessage = () =>{\r\n        this.setState({error: true})\r\n        setTimeout(()=>{\r\n            this.setState({error:false})\r\n            this.setState({errorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n    triggerModalErrorMessage = () =>{\r\n        this.setState({modalError: true})\r\n        setTimeout(()=>{\r\n            this.setState({modalError:false})\r\n            this.setState({modalErrorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n\r\n    updateCorrection = (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n        item = this.state.extraEnteredLessons[index]     \r\n\r\n        item.correction = parseInt(e.target.value);\r\n        \r\n        if(item.correction != item.prevCorrection){\r\n            item.updateCorrection = true  \r\n          \r\n        }\r\n\r\n  \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n\r\n    updateLessonType = (e, index, isExtraLesson = false, isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n     \r\n            item = this.state.extraEnteredLessons[index]\r\n\r\n        var lessonType = parseInt(e.target.value)      \r\n       \r\n\r\n        if(lessonType == 0){\r\n             item.price = item.groupPrice\r\n             item.rateKey = item.groupRateKey\r\n             item.rate = item.groupRate\r\n             item.actualLessonType = 0\r\n   \r\n        }else if(lessonType == 1){\r\n            item.price = item.singlePrice\r\n            item.rateKey = item.singleRateKey\r\n            item.rate = item.singleRate\r\n            item.actualLessonType = 1\r\n        }\r\n\r\n        item.updateLessonType = true;\r\n        \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n    updateHours = async (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var hours = e.target.value;\r\n       \r\n        if(hours == \"\"){\r\n            hours = parseInt(0);\r\n        }\r\n        \r\n       \r\n        var item = this.state.data[index]\r\n   \r\n        item.hours = await  hours;\r\n\r\n       \r\n        if(item.hours != item.prevHours){\r\n            item.updateHours = true\r\n          \r\n        }\r\n        \r\n        this.setState({data:this.state.data})\r\n    }\r\n\r\n    updateTakenLessonCorrection = async (id,correction)=>{\r\n\r\n        await  axios.post('/api/taken-lessons/update-correction?userId='+\r\n        this.props.userId+'&id='+id+'&c='+correction,{headers:this.state.options})\r\n        .then(response=>{\r\n                  \r\n        })\r\n    }\r\n    updateTakenLessonHours = async (id,hours) => {        \r\n        \r\n        await  axios.post('/api/taken-lessons/update-hours?userId='+\r\n        this.props.userId+'&id='+id+'&h='+hours,{ headers:this.state.options })\r\n        .then(response=>{\r\n         \r\n           \r\n        })\r\n    }\r\n    createTakenLesson = async (item, isExtra = false)=>{  \r\n        if(parseFloat(item.hours) != 0){\r\n\r\n    \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n            var teacherId = item.teacher\r\n            var subject = item.subject;\r\n            var correction = item.correction\r\n            var studentId = item.student._id\r\n            var rateKey = item.rateKey;\r\n            var rate = item.rate;\r\n            var price  = item.price;\r\n            var hours = item.hours;\r\n            var date = this.state.chosenDate;\r\n            var discount = item.student.discount;\r\n            var day = item.day;        \r\n         \r\n        \r\n                var url = await '/api/taken-lessons?userId='+\r\n                this.props.userId+'&tid='+teacherId+\r\n                '&s='+subject+\r\n                '&rkey='+rateKey+\r\n                '&day='+day+\r\n                '&sid='+studentId+\r\n                '&p='+price+\r\n                '&c='+correction+\r\n                '&h='+hours+\r\n                '&rate='+rate+\r\n                '&da='+date+\r\n                '&di='+discount+\r\n                '&slt='+item.setLessonType+\r\n                '&alt='+item.actualLessonType+\r\n                '&ie='+isExtra;\r\n           \r\n         if(item.correction != 3){  /// 3 = ignore     \r\n            await axios.post(url,{headers:options})\r\n             .then(response =>{\r\n                 \r\n            })\r\n \r\n        }\r\n    }\r\n    }\r\n    deleteTakenLesson = async (lesson) =>{\r\n       \r\n        await axios.delete('/api/taken-lessons?userId='+\r\n        this.props.userId+'&id='+lesson.takenId)\r\n        .then(response =>{\r\n         \r\n        })\r\n\r\n    }\r\n\r\n    updateTakenLessonType = async (lessonId, takenLessonId, lessonType) =>{\r\n\r\n    \r\n        var apiStr = '/api/taken-lessons/update-lesson-type?userid='+this.props.userId+'&id='+lessonId.toString()+'&tid='+takenLessonId.toString()+'&type='+lessonType.toString()\r\n    \r\n        await axios.post(apiStr,{headers:this.state.options})\r\n        .then(response =>{\r\n          \r\n        })\r\n    }\r\n    checkFormat = (data) =>{\r\n       \r\n                var formatValues = data.map(lesson=> parseFloat(lesson.hours) != null)\r\n               \r\n                if(formatValues.includes(false)){\r\n                    return false\r\n                }else{\r\n                    return true\r\n                }\r\n \r\n    }\r\n\r\n    checkIfDataNeedsUpdate = (data)=>{\r\n\r\n        var formatValues = data?.map(lesson=> lesson.updateCorrection == true || lesson.updateHours == true || lesson.updateLessonType == true)\r\n        \r\n        if(formatValues?.includes(true)){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    checkChangesNotSaved = async () =>{        \r\n\r\n        var needsUpdate_regular = await this.checkIfDataNeedsUpdate(this.state.data) \r\n        var needsUpdate_ExtraEntered = await this.checkIfDataNeedsUpdate(this.state.extraEnteredLessons);\r\n        var needsUpdate_Extra = await this.state.extraLessons.length > 0\r\n        var hasChanges = (needsUpdate_regular || needsUpdate_ExtraEntered || needsUpdate_Extra)&&this.state.chosenDate != null\r\n        return hasChanges && !this.state.changesSaved\r\n    } \r\n    \r\n    saveAndUpdate = async (e) =>{\r\n\r\n        var obj = {}\r\n    \r\n        obj.lessons = this.state.extraEnteredLessons\r\n        obj.teacherId = this.state.teacherId\r\n        console.log(this.state.extraEnteredLessons)\r\n        var date = new Date(this.state.chosenDate)\r\n        obj.year = date.getFullYear().toString()\r\n        obj.month = date.getMonth().toString()\r\n        obj.day = date.getDate().toString()\r\n\r\n        await  axios.post('/api/taken-lessons/update-many?userId='+\r\n        this.props.userId,{headers:this.state.options, data: obj})\r\n        .then(response=>{\r\n            this.setState({justSaved:true})\r\n                \r\n           \r\n            setTimeout(()=>{\r\n                this.setState({justSaved:false})\r\n                \r\n                this.checkLessons()\r\n                \r\n            }\r\n            , 3000);\r\n        })\r\n    }\r\n\r\n    setDate = async (date) =>{\r\n   \r\n             await this.setState({chosenDate:date})\r\n\r\n            await this.setState({dayOfWeek:date.getDay()})\r\n\r\n           \r\n            await this.checkLessons();\r\n          \r\n     \r\n    }\r\n   \r\n    checkLessons = async ()=>{\r\n\r\n    \r\n            await this.setState({data:null})\r\n            await this.setState({extraEnteredLessons:null})\r\n           await this.setState({extraLessons:null})\r\n           await  this.setState({extraLessons:[]})\r\n        await  axios.get('/api/lessons/get-teacher-lessons?userId='+\r\n                            this.props.userId+'&tid='+this.state.teacherId\r\n                        +'&date='+this.state.chosenDate,{headers:this.state.options, data:{test:\"test\"}})\r\n            .then(response=>{\r\n                var data = response.data\r\n                this.setState({data:null})\r\n                this.setState({data:data})\r\n\r\n                console.log(data)\r\n\r\n            \r\n            })  \r\n\r\n\r\n            var dateObj = getDateData(this.state.chosenDate)\r\n\r\n        await  axios.get('/api/taken-lessons/teacher/date?userId='+\r\n                        this.props.userId+'&tid='+this.state.teacherId\r\n                    +'&date='+this.state.chosenDate\r\n                    +'&year='+dateObj.year\r\n                    +'&month='+dateObj.month\r\n                    +'&day='+dateObj.day,{headers:this.state.options})\r\n        .then(response=>{\r\n            var data = response.data\r\n            console.log(data)\r\n            this.setState({extraEnteredLessons:null})   \r\n            this.setState({extraEnteredLessons:data})\r\n        \r\n        })\r\n\r\n\r\n       \r\n\r\n    }\r\n\r\n    toggleJustExtra = async ()  =>{\r\n        await this.setState({justExtra:!this.state.justExtra})\r\n        if(this.state.justExtra){\r\n            this.setState({justExtraBtnMsg:\"only regular lessons\"})\r\n        }else{\r\n            this.setState({justExtraBtnMsg:\"only extra lessons\"})\r\n            \r\n        }\r\n    }\r\n\r\n    removeRegularLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.data;\r\n            lessons[index].delete = true\r\n           \r\n\r\n            this.setState({data:lessons})\r\n          }\r\n\r\n        if(this.state.showRegularLessonModal){\r\n            this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        }\r\n        \r\n    }\r\n\r\n    removeExtraLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.extraLessons;\r\n            lessons.splice(index)\r\n        \r\n            this.setState({extraLessons:lessons})\r\n          }\r\n\r\n        \r\n    }\r\n\r\n    toggleRegularLessonModal = (e,index) =>{\r\n        this.setState({regularLessonModalIndex:index})\r\n        this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        \r\n\r\n    }\r\n\r\n    toggleExtraLessonModal = (e,index) =>{\r\n\r\n        if(this.state.chosenDate == null){\r\n            this.setState({errorMessage: \"No date chosen\"})\r\n            this.triggerErrorMessage()            \r\n            return\r\n        }\r\n\r\n        this.setState({extraLessonModalIndex:index})\r\n        this.setState({showExtraLessonModal: !this.state.showExtraLessonModal})\r\n        this.getAllTeacherStudents();\r\n\r\n    }\r\n    toggleChangesNotSavedModal  = (e) =>{\r\n        this.setState({showNotSavedModel:!this.state.showNotSavedModel})\r\n    }\r\n  \r\n\r\n    getAllTeacherStudents = async ()=>{\r\n       \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n\r\n           \r\n            await axios.get('/api/lessons/teacher/notday?id='+this.state.teacherId+'&day='+this.state.dayOfWeek+'&date='+this.state.chosenDate,\r\n            { headers:options })\r\n            .then(response =>{\r\n            var lessons = response.data;\r\n      \r\n            this.setState({allLessons:lessons})\r\n            this.setState({filteredAllLessons:lessons})\r\n\r\n\r\n        })\r\n    }\r\n    setStudentSearch = (e)=>{\r\n        var searchString = e.target.value? e.target.value : \"\"; \r\n        this.setState({searchString:searchString})\r\n        var filtered = this.state.allLessons.filter((item,index)=>(\r\n        \r\n            item.student?.firstName.toLowerCase().includes(searchString.toLowerCase()) ||\r\n            item.student?.lastName.toLowerCase().includes(searchString.toLowerCase())\r\n\r\n        ))\r\n        this.setState({extraLesson:null})\r\n        this.setState({filteredAllLessons:filtered})\r\n\r\n    }\r\n\r\n    setSelected = (lesson) =>{\r\n        this.setState({extraLesson:lesson})\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          tooltipOpen: !this.state.tooltipOpen\r\n        });\r\n    }\r\n\r\n    addToTakenLessonList(e, index){\r\n        var lesson = this.state.data[index];\r\n\r\n        if(lesson.hours == null)\r\n        {\r\n            alert(\"empty hours\")\r\n            return\r\n        }\r\n        var takenLessons = this.state.extraEnteredLessons;\r\n        \r\n        var date = new Date(this.state.chosenDate)\r\n        lesson.date = date\r\n        lesson.isExtra = true;\r\n        lesson.isLessonTaken = false\r\n        lesson.invoiceDate = dayjs(date).format('DD-MM-YYYY')\r\n        \r\n        lesson._id = null\r\n        \r\n        \r\n        takenLessons.push(lesson)        \r\n        \r\n        this.setState({extraEnteredLessons: takenLessons})\r\n    }\r\n\r\n    removeFromTakenLessonList(e, index){\r\n      \r\n        var takenLessons = this.state.extraEnteredLessons\r\n        takenLessons.splice(index,1)\r\n\r\n        takenLessons.map((lesson, index)=>{\r\n            let hours = lesson.hours\r\n            lesson.hours = hours\r\n        })\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n        \r\n        this.setState({extraEnteredLessons: this.state.extraEnteredLessons})\r\n    } \r\n    \r\n    checkTakenLesson(e, index){\r\n      \r\n        var takenLessons = this.state.extraEnteredLessons\r\n        var lesson = takenLessons[index]\r\n        \r\n        lesson.isLessonTaken = lesson.isLessonTaken? !lesson.isLessonTaken : true;\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n    }\r\n  \r\n    \r\n    render(){\r\n        return(\r\n            <div id=\"EnterDataContainer\" > \r\n\r\n                <p className='invoice-dates'>\r\n                    {/* <strong>Next Post invoice date : </strong>{this.state.nextPostInvoiceDate? this.state.nextPostInvoiceDate.toString(): null}<br/>           \r\n                    <strong>Next Pre invoice date  : </strong>{this.state.nextPreInvoiceDate? this.state.nextPreInvoiceDate.toString(): null} */}\r\n                </p>             \r\n\r\n                {\r\n                     this.state.error && this.state.errorMessage?\r\n                     <div className=\"alert alert-danger\" role=\"alert\">\r\n                         {this.state.errorMessage}                         \r\n                     </div>\r\n                 :null\r\n                }\r\n\r\n            \r\n                {\r\n                    this.state.justSaved?\r\n                        <div className=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n\r\n\r\n\r\n                {\r\n                    this.state.noChanges?\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {this.state.chosenDate == null?\r\n                            \"no date chosen\"\r\n                            :\"no changes made!\"}\r\n                            \r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n                \r\n                {\r\n                    this.state.matches?\r\n                    <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col-4\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">           \r\n                        <div className='d-inline mb-1 mr-4'>\r\n                            {\r\n                                this.state.isLockDown?\r\n                                (\r\n                                    <button className=\"btn btn-outline-warning\" disabled={true}>\r\n                                        Add \r\n                                    </button>\r\n                                )\r\n                                :(\r\n                                    <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add \r\n                                    </button>\r\n                                )\r\n                                \r\n                            }\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            {\r\n                                this.state.isLockDown?\r\n                                (\r\n                                    <button className=\"btn btn-outline-warning\"  disabled={true}>\r\n                                            Save\r\n                                    </button>  \r\n                                )\r\n                                :(\r\n                                    <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                        Save\r\n                                    </button>  \r\n                                )\r\n                                \r\n                            }\r\n                                              \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n:\r\n                <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col\">           \r\n                        <div className='d-inline mb-1 mr-2'>\r\n                            <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                    Save\r\n                            </button>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                }\r\n               \r\n\r\n          \r\n                \r\n                <div class={\"row \"+  (this.state.matches? \"margin\": \"\")}>\r\n                    <div class=\"col-5 lesson-list\">\r\n                        <table id=\"EnterDataTable\" className=\" table\">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th >\r\n                                        Name\r\n                                    </th>\r\n                                    <th   >\r\n                                        Subject\r\n                                    </th>\r\n                                    <th>\r\n                                        Hours(s)\r\n                                    </th>\r\n                                    <th>\r\n                                        Pay\r\n                                    </th>\r\n                                    <th   >\r\n                                        -\r\n                                    </th>                             \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data?\r\n                                    this.state.data.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>{item.student?.firstName}</td>\r\n                                            <td>{item.subject}</td>\r\n                                            <td><input key={index} type=\"number\"  maxLength=\"3\" className=\"form-control type-col\"  defaultValue={item.hours?item.hours:null} style={item.prevHours != item.hours? {background:'lightgreen'} :null} onChange={(e)=>{this.updateHours(e,index)}}/></td>\r\n                                            <td>{item.hours * item.groupRate}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    this.state.isLockDown?\r\n                                                    (<button className='btn btn-warning' disabled={true}>+</button>)\r\n                                                    :                                                    \r\n                                                    (\r\n                                                        <button className='btn btn-success' onClick={(e)=>this.addToTakenLessonList(e,index)}>+</button>\r\n                                                    )\r\n                                                }\r\n                                            \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                :null}                  \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table id=\"EnterDataTable\" className=\" table table-responsive table-responsive-otter\">\r\n                            <thead>\r\n                            <th class=\"col-1\">\r\n                                        -\r\n                                    </th>\r\n                                    <th class=\"col-3\">\r\n                                        Name\r\n                                    </th>\r\n                                    <th  class=\"col-1\" >\r\n                                        Subject\r\n                                    </th>\r\n                                    {/* <th className=\"type-col\">\r\n                                        Type\r\n                                    </th>\r\n                                    <th className='type-col'  >\r\n                                        -\r\n                                    </th> */}\r\n                                    <th class=\"type-col\"  >\r\n                                        Hours\r\n                                    </th> \r\n                                    <th class=\"type-col\"  >\r\n                                        Pay\r\n                                    </th> \r\n                                    \r\n                                    <th class=\"col-1\">\r\n                                        -\r\n                                    </th> \r\n                                    <th className='col-1'>\r\n                                        -\r\n                                    </th>                           \r\n                              \r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.extraEnteredLessons?\r\n                                    this.state.extraEnteredLessons.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>\r\n                                            {this.props.role >= 2?\r\n                                                <div>\r\n                                                {\r\n                                                    item.isInvoicePaid == true?\r\n                                                    <h6><span class=\"badge badge-success mr-3\">Paid</span></h6>\r\n                                                    : <h6><span class=\"badge badge-danger mr-3\">Un-paid</span></h6>\r\n                                                }  \r\n                                                {\r\n                                                    item.stripeInvoiceId?\r\n                                                    <h6><span class=\"badge badge-primary mr-3\">invoiced</span></h6>\r\n                                                    : <h6><span class=\"badge badge-danger mr-3\">not invoiced</span></h6>\r\n                                                } \r\n                                                {\r\n                                                    item.stripeRefundId?\r\n                                                    <h6><span class=\"badge badge-warning mr-3\">refunded</span></h6>\r\n                                                    : null\r\n                                                } \r\n                                                </div>:null\r\n                                                }\r\n                                            </td>\r\n                                            <td className='taken-lesson-row'>\r\n                                                                                             \r\n                                                \r\n                                                {item.student?.firstName}</td>\r\n                                            <td>{item.subject}</td>\r\n                                            {/* <td >\r\n                                                {item.alreadyEntered? item.actualLessonType :item.rateKey?.charAt(1)}\r\n                                                 <div className=\"form-group type-col\">                                        \r\n                                                    <select defaultValue={item.alreadyEntered? item.actualLessonType :item.rateKey?.charAt(1) == \"G\"? 0:1} className=\"form-control\" onChange={(e)=>this.updateLessonType(e,index,false)}>\r\n                                                                                        \r\n                                                    <option value={0} >G</option>\r\n                                                    <option value={1} >1</option>\r\n                                                    </select>                                                 \r\n                                                \r\n                                                </div>\r\n                                            </td> */}\r\n                                            {/* <td  >    \r\n                                                {item.correction}                                            \r\n                                            { <div className=\"form-group type-col\">\r\n                                            \r\n                                                <select defaultValue={item.correction} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.updateCorrection(e,index,false)}>\r\n                                                                                \r\n                                                                        {Corrections?\r\n                                                                        \r\n                                                                        \r\n                                                                            Corrections.map((item,index)=>(\r\n                                                                                <option key={index} value={index} >{item?.toUpperCase().charAt(0)}</option>\r\n                                                                            ))\r\n                                                                        :\r\n                                                                        <option>error</option>\r\n                                                                        }\r\n                                                </select>                      \r\n                                            </div>                                             }\r\n                                            </td> */}\r\n                                        <td id=\"hours\">\r\n                                            {item.hours}\r\n                                        </td>\r\n                                        <td>\r\n                                            {item.hours*item.rate}\r\n                                        </td>\r\n                                        <td>\r\n                                                {\r\n                                                    item.isInvoicePaid == true || item.stripeInvoiceId != null?\r\n                                                    null\r\n                                                    : \r\n                                                    \r\n                                                    (\r\n                                                        \r\n                                                            this.state.isLockDown?\r\n                                                            (<button className='btn btn-warning' disabled={true}>+</button>)\r\n                                                            :                                                    \r\n                                                            (\r\n                                                                <button className='btn btn-danger' onClick={(e)=>this.removeFromTakenLessonList(e,index)}>x</button>\r\n                                                            )\r\n                                                        \r\n                                                       \r\n                                                    )\r\n                                                }  \r\n                                         </td>  \r\n                                         <td>\r\n                                         <Switch onChange={e => this.checkTakenLesson(e, index)} checked={item.isLessonTaken? item.isLessonTaken : false } />\r\n                                         </td> \r\n                                        </tr>\r\n                                    ))\r\n                                :null}                   \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>           \r\n                   \r\n                    <Modal isOpen={this.state.showRegularLessonModal} toggle={this.toggleRegularLessonModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                           the lesson will be removed for today, to remove permenantly please contact an admin, providing the student's name and subject\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={(e)=>this.removeRegularLesson(e,this.state.regularLessonModalIndex)}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleRegularLessonModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showExtraLessonModal} toggle={this.toggleExtraLessonModal} >\r\n                        <ModalHeader >You are about to add an extra lesson</ModalHeader>\r\n                        <ModalBody>\r\n                        {\r\n                            this.state.modalError && this.state.modalErrorMessage?\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {this.state.modalErrorMessage}                         \r\n                            </div>\r\n                        :null\r\n                        }\r\n\r\n                       \r\n                        <label for=\"inputEmail4\">Student</label>\r\n                        <input value={this.state.extraLesson?this.state.extraLesson.student?.firstName +\" \":null} className=\"form-control\" onChange={this.setStudentSearch} placeholder=\"search for students ...\"/>\r\n                        <div id=\"AddExtraLessonModal\" class=\"mb-3 mt-3\">\r\n                            <Button color=\"primary\" onClick={(e)=>this.addExtraLesson(this.state.extraLesson)}>Add Extra Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleExtraLessonModal}>Cancel</Button>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"col\" style={{cursor:'pointer'}}\r\n                         size={this.state.filteredAllLessons?.length} onChange={this.setStudent}  style={{display:this.state.showStudentList}}>\r\n                            \r\n                            {this.state.filteredAllLessons != null?this.state.filteredAllLessons.map((item,index)=>(\r\n\r\n                                \r\n                               <AllLessonsRow\r\n                                item={item}\r\n                                index={index}\r\n                                key={index}\r\n                                addExtraLesson = {this.addExtraLesson}\r\n                                setSelected = {this.setSelected}\r\n                               />\r\n\r\n                            )):null}\r\n                        </div> \r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            \r\n                        </ModalFooter>\r\n      \r\n                    </Modal>               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Register);","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, NavItem } from 'reactstrap';\r\nimport qs from 'qs'\r\nimport { saveAs } from 'file-saver';\r\nimport Months from '../../Enums/Months'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport dayjs from 'dayjs'\r\nimport DatePicker from \"react-datepicker\";\r\nimport InvoiceType from '../../Enums/InvoiceTypes';\r\nclass PreInvoicePaymentPanel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n            fromDate: new Date(),\r\n            toDate:new Date(),\r\n            parents:null,\r\n            students:null,\r\n            chosenParentId:null,\r\n            chosenStudentId:null,\r\n            findBy:2,\r\n            chosenParent:null,\r\n            includeMonth:false,\r\n            includeYear:false,\r\n            inlcudeStudentsParents:false,\r\n            invoices:null,\r\n            invoicesCopy:null,\r\n            showPaymentModal:false,\r\n            modalIvoice:null,\r\n            modalInvoiceIndex:null,\r\n            modalPaidStatus:null,\r\n            modalPaymentAmount:null,\r\n            month:null,\r\n            year:null,\r\n            formSubmitted:false,\r\n            invoicesSent: false,\r\n            fetchingInvoices: false,\r\n            isPreview: true,\r\n            justSent:[],\r\n            invoiceType:null,\r\n            showReInvoiceModal:false,\r\n            chosenReInvoice:null,\r\n            reInvoiceFromDate:null,\r\n            reInvoiceToDate:null,\r\n            previewReinvoiceData:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    // Write, Edit and Run your Javascript code using JS Online Compiler\r\n        // var batches = [1,2,3,4,5]\r\n        // var i = 0;                  //  set your counter to 1\r\n\r\n        // function myLoop() {         //  create a loop function\r\n        // setTimeout(function() {   //  call a 3s setTimeout when the loop is called\r\n        //     console.log(batches[i]);   //  your code here\r\n        //     i++;                    //  increment the counter\r\n        //     if (i < batches.length) {           //  if the counter < 10, call the loop function\r\n        //     myLoop();             //  ..  again which will trigger another \r\n        //     }                       //  ..  setTimeout()\r\n        // }, 500)\r\n        // }\r\n\r\n        // myLoop();  \r\n\r\n    componentDidMount = async () =>{\r\n\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var pid = queryString.pid? queryString.pid : null\r\n        var sid = queryString.sid? queryString.sid : null\r\n        var month = queryString.month? queryString.month : null\r\n        var year = queryString.year? queryString.year : null\r\n\r\n        if(year != null){\r\n            this.setState({year:year})\r\n            this.setState({includeYear:true})\r\n        }\r\n        if(month != null){\r\n            \r\n            this.setState({month:month})\r\n            this.setState({includeMonth:true})\r\n        }\r\n        if(sid != null){\r\n            var list = []\r\n            if(!Array.isArray(sid)){\r\n                list = [sid]\r\n            }else{\r\n                list = sid\r\n            }\r\n            \r\n            this.setState({chosenStudents:list})\r\n            \r\n        }\r\n        if(pid != null){\r\n            var list = []\r\n            if(!Array.isArray(pid)){\r\n                list = [pid]\r\n            }else{\r\n                list = pid\r\n            }\r\n            \r\n            this.setState({chosenParents:list})\r\n            this.setState({inlcudeStudentsParents:true})\r\n            this.setState({findBy:0})\r\n        }\r\n\r\n\r\n       var parents = await this.getParents()\r\n       this.setState({parents:parents})\r\n\r\n       var students = await this.getStudents()\r\n       this.setState({students:students})\r\n\r\n       var toDate = new Date()\r\n       toDate.setDate(25)\r\n       toDate.setMonth((new Date()).getMonth())\r\n       this.setState({toDate: toDate})\r\n\r\n       var fromDate = new Date()\r\n       fromDate.setDate(26)\r\n       fromDate.setMonth((new Date()).getMonth()-1)\r\n       this.setState({fromDate: fromDate})    \r\n       await this.getInvoiceType(fromDate, toDate)\r\n\r\n\r\n    }\r\n\r\n    chooseParent = async (index) =>\r\n    {\r\n\r\n        if(index != null && index >= 0)\r\n        {   \r\n            var chosenParents = this.state.chosenParents;\r\n            var chosenParentId = this.state.parents[index]._id\r\n\r\n            if(chosenParentId != null)\r\n            {        \r\n                this.setState({chosenParentId: chosenParentId})\r\n            }\r\n            \r\n        }else\r\n        {\r\n            alert(\"no parent found!\")\r\n        }\r\n\r\n    }\r\n\r\n    chooseStudent = async (index) =>\r\n    {\r\n\r\n        if(index != null && index >= 0)\r\n        {   \r\n            var chosenStudents = this.state.chosenStudents;\r\n            var chosenStudentId = this.state.students[index]._id\r\n\r\n            if(chosenStudentId != null)\r\n            {\r\n                this.setState({chosenStudentId: chosenStudentId})\r\n            }\r\n            \r\n        }else\r\n        {\r\n            alert(\"no student found!\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getInvoiceType= async (fromDate, toDate) => {\r\n        var now = dayjs()\r\n        var fromDate = dayjs(fromDate)\r\n        var toDate = dayjs(toDate)\r\n        var invoicetype = InvoiceType.Mixed\r\n\r\n        if(fromDate.isBefore(now) && toDate.isBefore(now))\r\n        {\r\n            invoicetype = InvoiceType.PostInvoice\r\n        }\r\n\r\n        if(now.isBefore(fromDate) && now.isBefore(toDate))\r\n        {\r\n            invoicetype = InvoiceType.PreInvoice\r\n        }\r\n\r\n        await this.setState({invoiceType: invoicetype})\r\n    }\r\n\r\n\r\n    sendInvoices = async (e) =>{\r\n        var invoices = this.state.invoices\r\n        var options = this.state.options\r\n        this.setState({justSent:[]})\r\n        await this.setState({invoicesSent:true})\r\n\r\n        var justSent = []\r\n    \r\n        var i = 0;\r\n    \r\n         this.sendInvoice=()=>{\r\n        \r\n            setTimeout(async()=>{\r\n                var invoice = invoices[i]\r\n\r\n                \r\n                await  axios.get('/api/preinvoicesstripe/send-pre-invoice?id='+invoice._id,\r\n                {headers:options}).then((response)=>{\r\n                    console.log(response.data.firstName)\r\n                })                \r\n            \r\n            \r\n            \r\n            i++;\r\n            if(i < invoices.length){\r\n                this.sendInvoice();\r\n                \r\n              }\r\n\r\n\r\n            }, 200)\r\n\r\n        }\r\n       \r\n        this.sendInvoice();\r\n\r\n\r\n        setTimeout(()=>{this.setState({invoicesSent: false})}, 20000);\r\n        \r\n        setTimeout(this.getInvoices, 50000);\r\n         this.state.invoicesSent = true\r\n         \r\n     \r\n    \r\n    }\r\n\r\n    createPreInvoices = async (e, isPreview = false) =>{\r\n\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n                \r\n            await  axios.get('/api/preinvoicesstripe/get-lessons-by-parent?fromDate='+this.state.fromDate\r\n            +'&toDate='+this.state.toDate\r\n            +'&isPreview='+isPreview \r\n            +'&invoiceType='+this.state.invoiceType,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{            \r\n            \r\n                const interval = setInterval(function() {\r\n                    // method to be executed;\r\n                    this.getInvoices()\r\n                  }, 3);\r\n\r\n            })\r\n\r\n        }else{\r\n            alert('null Dates')\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    previewInvoiceData = async () =>\r\n    {\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n                \r\n            await  axios.get('/api/preinvoicesstripe/preview-get-lessons-by-parent?fromDate='+this.state.fromDate\r\n            +'&toDate='+this.state.toDate\r\n            +'&invoiceType='+this.state.invoiceType,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{            \r\n            \r\n                        console.log(response.data)\r\n\r\n            })\r\n\r\n        }else{\r\n            alert('null Dates')\r\n        }\r\n        \r\n    }\r\n\r\n    checkForPreInvoiceIssues = async (e) =>{\r\n\r\n    \r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n                  \r\n            await  axios.get('/api/preinvoicesstripe/check-for-invoiced-lessons?fromDate='+\r\n            this.state.fromDate+'&toDate='+this.state.toDate,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n              \r\n            \r\n                      console.log(response.data)\r\n\r\n            })\r\n\r\n        }else{\r\n            alert('null Dates')\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    getParents = async () =>{\r\n        var parents = [];\r\n\r\n        await  axios.get('/api/parents/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                parents = await response.data\r\n            \r\n            })\r\n\r\n        return parents\r\n    }\r\n\r\n    getStudents = async () =>{\r\n        var students = [];\r\n\r\n        await  axios.get('/api/students/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                students = await response.data\r\n            \r\n            })\r\n\r\n        return students\r\n    }\r\n\r\n    toggleShowPaymentModal = async (index = null,invoice = null) =>{\r\n        this.setState({modalIvoice:invoice})\r\n        this.setState({modalIvoiceIndex:index})\r\n        this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n    }\r\n\r\n    setModalPaymentAmount = async (e) =>{\r\n        var amount = e.target.value;\r\n        this.setState({modalPaymentAmount:amount})\r\n\r\n    }\r\n\r\n    resolveInvoice = async () =>{\r\n         this.state.invoices[this.state.modalIvoiceIndex].paidStatus = await this.state.modalPaidStatus\r\n         this.state.invoices[this.state.modalIvoiceIndex].paymentAmount = await this.state.modalPaymentAmount\r\n         this.state.invoices[this.state.modalIvoiceIndex].changed = await true\r\n\r\n\r\n         this.setState({modalInvoiceIndex:null})\r\n         this.setState({modalPaymentAmount:null})\r\n         this.setState({modalPaidStatus:null})\r\n         this.setState({modalIvoice:null})\r\n         this.toggleShowPaymentModal();\r\n         \r\n        \r\n    }\r\n\r\n    paidExact = async (index) =>{\r\n        var  invoices = await this.state.invoices.slice()\r\n\r\n\r\n        if(invoices[index].changed != null){\r\n            invoices[index].paidStatus = null\r\n            invoices[index].paymentAmount = null\r\n            invoices[index].changed = null;\r\n\r\n        }else{\r\n         invoices[index].paidStatus = await 0\r\n         invoices[index].paymentAmount = await invoices[index].total\r\n         invoices[index].changed = true;\r\n        }\r\n         await this.setState({invoices:invoices})     \r\n        \r\n        \r\n    }\r\n\r\n    confirmPayment = async (e) =>{\r\n        if(this.state.modalPaymentAmount != null){\r\n        if(this.state.modalPaymentAmount != this.state.modalIvoice.total){\r\n            if(this.state.modalPaidStatus ==1){\r\n                if(this.state.modalPaymentAmount < this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too much')\r\n                }\r\n            }else if(this.state.modalPaidStatus ==2){\r\n                if(this.state.modalPaymentAmount > this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too less')\r\n                }\r\n            }\r\n\r\n        }else{\r\n            alert('cannot add ')\r\n        }\r\n    }else{\r\n        alert('no changes made');\r\n    }\r\n\r\n    }\r\n\r\n    getInvoices = async  (e)=>{\r\n        var qString = \"\"    \r\n\r\n        var hasValue = false;\r\n\r\n        if(this.state.month != null && this.state.month != -1){\r\n            qString = await qString + \"month=\" + this.state.month\r\n            hasValue = true;\r\n        }\r\n\r\n        if(this.state.year != null && this.state.year != -1){\r\n            if(hasValue){\r\n                qString += \"&\"\r\n            }\r\n            qString = await qString + \"year=\" + this.state.year\r\n            hasValue = true;\r\n        }\r\n\r\n        if(this.state.chosenParentId != null)\r\n        {\r\n            if(hasValue){\r\n                qString += \"&\"\r\n            }\r\n            qString = await qString + \"parent=\" + this.state.chosenParentId\r\n            hasValue = true;\r\n        }\r\n\r\n        if(this.state.chosenStudentId != null)\r\n        {\r\n            if(hasValue){\r\n                qString += \"&\"\r\n            }\r\n            qString = await qString + \"student=\" + this.state.chosenStudentId\r\n        }\r\n\r\n        console.log(qString)\r\n        await  axios.get('/api/preinvoicesstripe/get-pre-invoices?'+qString,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n               var invoices = await response.data\r\n                console.log(response.data)\r\n               this.setState({invoices:invoices})\r\n               this.setState({invoicesCopy:invoices})\r\n\r\n               setTimeout(()=>{this.setState({fetchingInvoices: false})}, 3000);\r\n               await this.setState({fetchingInvoices:true})\r\n               \r\n            \r\n            })       \r\n    } \r\n\r\n\r\n    \r\n\r\n    saveChanges = async (e) =>{\r\n\r\n        var nonNullInvoices = await this.state.invoices?.filter(a=>a.changed != null)\r\n        var changedInvoices = await nonNullInvoices?.filter(a=>a.changed == true)\r\n\r\n        await changedInvoices?.map(async (invoice,index)=>{\r\n\r\n            var obj = {paymentAmount: invoice.paymentAmount, paidStatus: invoice.paidStatus}\r\n            \r\n            await  axios.post('/api/preinvoicesstripe/update-pre-invoices?id='+invoice._id,\r\n                {headers:this.state.options, data: obj})\r\n            .then(async (response) =>{\r\n                setTimeout(this.getInvoices, 5000);\r\n                setTimeout(()=>{this.setState({formSubmitted: false})}, 6000);\r\n                await this.setState({formSubmitted:true})\r\n            \r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n    downloadPdf =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n        console.log(base)\r\n       window.open(\"data:application/pdf;base64,\" + base);\r\n  \r\n    }\r\n\r\n    downloadPdf2 =async (invoice) =>{\r\n      if(invoice.data == null){\r\n        alert('no invoice')\r\n        return\r\n    }\r\n        var buffer = await invoice.data;\r\n        var b64 = (buffer).toString('base64')\r\n       var base = await b64\r\n        //console.log(base)\r\n       //window.open(\"data:application/pdf;base64,\" + base);\r\n        var link = document.createElement('a');\r\n        link.href = \"data:application/pdf;base64,\" + base;\r\n        link.download = invoice.parent.firstName+\"_\"+invoice.parent.lastName+'.pdf';\r\n        link.dispatchEvent(new MouseEvent('click'));\r\n  \r\n    }\r\n\r\n    download =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n\r\n\r\n       var blob = new Blob([\"data:application/pdf;base64,\" + base],\r\n                { type: \"text/plain;charset=utf-8\" });\r\n                var fileURL = URL.createObjectURL(blob);\r\n                window.open(fileURL);\r\n                saveAs(blob, \"static.pdf\");\r\n  \r\n    }\r\n\r\n    calculateBalance = (invoice) =>{\r\n        var preInvoiceAmount = invoice.total\r\n        var postInvoiceAmount = invoice.postInvoice[0]?.total\r\n        var paidAmount = invoice.paymentAmount;\r\n\r\n        var adjustmentFromPayment = Math.abs(paidAmount - preInvoiceAmount);\r\n        var adjustmentFromInvoice = Math.abs(postInvoiceAmount - preInvoiceAmount)\r\n\r\n        if(paidAmount < preInvoiceAmount){\r\n            adjustmentFromPayment *= -1\r\n        }\r\n\r\n        if(postInvoiceAmount > preInvoiceAmount){\r\n            adjustmentFromInvoice *= -1\r\n        }\r\n        return adjustmentFromInvoice + adjustmentFromPayment;\r\n    }\r\n\r\n    filterInvoices = (type) =>{\r\n\r\n        \r\n        switch(parseInt(type)){\r\n\r\n            case 0://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 0)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 1://paid exact\r\n            var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 1)\r\n            this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 2://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 2)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            default://paid exact\r\n             \r\n                this.setState({invoices:this.state.invoicesCopy})\r\n                break\r\n                \r\n        }\r\n\r\n    }\r\n\r\n    filter = (e) =>{\r\n        var searchString = e.target.value.toString().toLowerCase()\r\n        var invoices = this.state.invoicesCopy;\r\n        var filteredInvoices = invoices?.filter(x => \r\n            x.parent.firstName.toLowerCase().includes(searchString) \r\n        || x.parent.lastName.toLowerCase().includes(searchString)\r\n        || x.studentString.toLowerCase().includes(searchString))\r\n\r\n        this.setState({invoices: filteredInvoices})\r\n\r\n    }\r\n\r\n    updateDate = async (date, isFromDate = true) => \r\n    {\r\n        if(isFromDate)\r\n        {\r\n            await this.setState({fromDate: date})\r\n            await this.getInvoiceType(date, this.state.toDate)\r\n        }\r\n        else\r\n        {\r\n            await this.setState({toDate: date})\r\n            await this.getInvoiceType(this.state.fromDate, date)\r\n        }        \r\n        \r\n    }\r\n\r\n    toggleReInvoiceModal = async (index) => \r\n    {\r\n        var invoice = this.state.invoices[index]\r\n        this.setState({chosenReInvoice: invoice})\r\n        this.setState({showReInvoiceModal: !this.state.showReInvoiceModal})\r\n    }\r\n\r\n    previewReinvoice = async () =>\r\n    {\r\n        var invoiceId = this.state.chosenReInvoice._id;\r\n        var fromDate = dayjs(this.state.reInvoiceFromDate)\r\n        var toDate = dayjs(this.state.reInvoiceToDate)\r\n        \r\n      \r\n        var fromDay = fromDate.get('date')\r\n        var fromMonth = fromDate.get('month')\r\n        var fromYear = fromDate.get('year')\r\n\r\n        var toDay = toDate.get('date')\r\n        var toMonth = toDate.get('month')\r\n        var toYear = toDate.get('year')\r\n\r\n        var url = `/api/preinvoicesstripe/reinvoice/${invoiceId}/${fromDay}/${fromMonth}/${fromYear}/${toDay}/${toMonth}/${toYear}`\r\n        await  axios.get(url,\r\n        {headers:this.state.options, data: null})\r\n        .then(async (response) =>{\r\n       \r\n       this.setState({previewReinvoiceData: response.data})\r\n    \r\n    })\r\n    }\r\n\r\n    createNewPreInvoice = async () =>\r\n    {\r\n        var invoiceId = this.state.chosenReInvoice._id;\r\n        var fromDate = dayjs(this.state.reInvoiceFromDate)\r\n        var toDate = dayjs(this.state.reInvoiceToDate)\r\n        \r\n      \r\n        var fromDay = fromDate.get('date')\r\n        var fromMonth = fromDate.get('month')\r\n        var fromYear = fromDate.get('year')\r\n\r\n        var toDay = toDate.get('date')\r\n        var toMonth = toDate.get('month')\r\n        var toYear = toDate.get('year')\r\n\r\n        var url = `/api/preinvoicesstripe/reinvoiceconfirm/${invoiceId}/${fromDay}/${fromMonth}/${fromYear}/${toDay}/${toMonth}/${toYear}`\r\n        await  axios.get(url,\r\n        {headers:this.state.options, data: null})\r\n        .then(async (response) =>{\r\n       \r\n       \r\n    \r\n        })\r\n    }\r\n\r\n    getInvoiceDetails = async (index) => \r\n    {\r\n        var invoice = await this.state.invoices[index]._id\r\n\r\n        var url = `/omega/invoice-details?id=${invoice._id}`\r\n        this.props.history.push(url)\r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container card card-body mt-3\">\r\n            <h1>Invoice Panel</h1>\r\n\r\n            <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label class=\"m-1\">From Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.fromDate}\r\n                                onChange={date => this.updateDate(date, true)}\r\n                                />  \r\n                        </div>\r\n                        <div className=\"col \" >\r\n                            <label class=\"m-1\">To Date</label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.toDate}\r\n                                onChange={date => this.updateDate(date, false)}\r\n                                />  \r\n                        </div>\r\n                    </div>\r\n            <div>\r\n                <button className='btn btn-primary m-2 mb-3' onClick={(e)=>{this.checkForPreInvoiceIssues(e)}}>Check for issues</button>\r\n                <a className='btn btn-danger m-2 mb-3' href={'/omega/preview-invoice'}>Preview Invoice Data</a>\r\n                <button className='btn btn-primary m-2 mb-3' onClick={this.createPreInvoices}>Create Invoices</button>      \r\n                <h6>Invoice Type <span class=\"badge badge-secondary\">{Object.keys(InvoiceType)[this.state.invoiceType]}</span></h6>       \r\n            </div>\r\n           \r\n\r\n            {\r\n                    this.state.formSubmitted?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                       changes saved\r\n                    </div>\r\n                    :null\r\n            }\r\n\r\n            {\r\n                    this.state.invoicesSent?\r\n                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                       invoices sent\r\n                    </div>\r\n                    :null\r\n            }\r\n            {\r\n                    this.state.fetchingInvoices?\r\n                        <div class=\"alert alert-warning\" role=\"alert\">\r\n                       invoices refreshed\r\n                    </div>\r\n                    :null\r\n            }\r\n\r\n\r\n\r\n            <div className=\"col\">\r\n            <div className=\"row mb-3\">\r\n                    <label  class=\"sr-only\">Month</label>    \r\n                    <select class=\"form-control\"  onChange={e => this.setState({month:e.target.value})}>\r\n                        <option  value={-1}>none (Month)</option>\r\n                        {Months.map((month,index)=>(\r\n                            <option selected={this.state.month == (index+1)} value={index+1} >{month}</option>\r\n                        ))}\r\n                     \r\n                    </select>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <label  class=\"sr-only\">Year</label>\r\n                        <select class=\"form-control\"   onChange={e => this.setState({year:e.target.value})}>\r\n                                <option value={-1}>none (year)</option>                            \r\n                            <option selected={this.state.year == 2021} value=\"2021\" >2021</option>\r\n                            <option selected={this.state.year == 2022} value=\"2022\" >2022</option>\r\n                            <option selected={this.state.year == 2023} value=\"2023\" >2023</option>\r\n                            <option selected={this.state.year == 2024} value=\"2024\" >2024</option>\r\n                        </select>\r\n                    </div>  \r\n\r\n                    {\r\n                        this.state.parents != null?\r\n                     <div className=\"row mb-3\">\r\n                         <label  class=\"sr-only\">Parents</label>\r\n                         <select class=\"form-control\"  onChange={e => this.chooseParent(e.target.value)}>\r\n                         <option value={null}>none (parent)</option> \r\n                         {\r\n                            this.state.parents.map((parent, index)=>\r\n                            (\r\n                                <option value={index}>{parent.firstName}</option>                                \r\n                            ))\r\n                         }  \r\n                             \r\n                         </select>\r\n                     </div>   :null\r\n                    }  \r\n\r\n                    {\r\n                        this.state.students != null?\r\n                     <div className=\"row mb-3\">\r\n                         <label  class=\"sr-only\">Parents</label>\r\n                         <select class=\"form-control\"  onChange={e => this.chooseStudent(e.target.value)}> \r\n                         <option value={null}>none (student)</option>\r\n                         {\r\n                            \r\n                            this.state.students.map((student, index)=>\r\n                            (\r\n                                <option value={index}>{student.firstName}</option>                                \r\n                            ))\r\n                         }  \r\n                             \r\n                         </select>\r\n                     </div>   :null\r\n                    }  \r\n\r\n                 \r\n            </div>\r\n         \r\n            \r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.getInvoices}>Get Invoices</button>\r\n\r\n                </div>\r\n                {\r\n                    this.state.invoices?.length > 0? \r\n                    <div>\r\n                        <button className='btn btn-warning m-2' disabled={this.state.formSubmitted || this.state.invoicesSent || this.state.fetchingInvoices} onClick={this.sendInvoices}>Send Invoices</button>\r\n                    </div>\r\n                    : null\r\n                }\r\n                \r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.saveChanges}>Save Changes</button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {this.state.invoices?\r\n            <div className=\"btn-group mb-5\" role=\"group\" aria-label=\"Basic checkbox toggle button group\">\r\n                    \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(3)} for=\"btncheck3\">All</button>\r\n          \r\n            \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(0)} for=\"btncheck3\">Paid Exact</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(1)} for=\"btncheck3\">Paid Less</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(2)} for=\"btncheck3\">Paid More</button>\r\n\r\n\r\n           \r\n          \r\n          </div>     \r\n \r\n            \r\n            :null}\r\n\r\n            { <input type=\"text\" class=\"form-control mb-3\" placeholder=\"name...\" onChange={this.filter}/>}\r\n\r\n            {\r\n                this.state.justSent.length > 0?\r\n                    <div>\r\n                        {this.state.justSent.map((parent, index)=>{\r\n                            <div>\r\n                                {parent.firstName}\r\n                            </div>    \r\n                        })}\r\n                    </div>    \r\n                :null\r\n            }\r\n            \r\n\r\n            {\r\n                this.state.invoices?\r\n\r\n                    this.state.invoices.length > 0 ? \r\n\r\n              <div className='mb-3 mt-3'>              \r\n                    \r\n                <div className=\"card card-body\" style={{background: 'rgb(204, 204, 255)' }}>                \r\n\r\n                                <div class=\"row\">\r\n                                        <div className=\"col\">\r\n                                            stripe id\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            url\r\n                                        </div>        \r\n                                        <div className=\"col\">\r\n                                            Month/Year\r\n                                        </div>                                  \r\n                                        <div className=\"col\">\r\n                                            Parent\r\n                                        </div> \r\n                                        <div className=\"col\">\r\n                                            Sent\r\n                                        </div>                             \r\n                                        <div className=\"col\">\r\n                                            Paid\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            Invoice Type\r\n                                        </div> \r\n                                        <div className='col'>\r\n                                            Invoice status\r\n                                        </div>  \r\n                                        <div className='col'>\r\n                                            Re-invoice\r\n                                        </div>\r\n\r\n                                        <div className='col'>\r\n                                            Details\r\n                                        </div>                                 \r\n                                      \r\n                                             \r\n                                    </div> \r\n                            {\r\n                                this.state.invoices.map((invoice,index)=>(\r\n                                    \r\n                                    <div class={\"row mb-1 \"+(invoice.invoiceStatus == \"deleted\" || invoice.invoiceStatus == \"void\"? \"row-disabled\":\"\")}>\r\n                                        <div className=\"col text-id\">                                          \r\n                                            {invoice.stripeInvoiceId}                                          \r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <a href={invoice.invoiceUrl} >invoice</a>\r\n                                        </div>    \r\n                                        <div className=\"col\">\r\n                                            {invoice.month + \"/\" + invoice.year}\r\n                                        </div> \r\n                                      \r\n                                        <div className=\"col\">\r\n                                            {invoice.parent.firstName + ' ' + invoice.parent.lastName}\r\n                                        </div>  \r\n\r\n                                        <div className=\"col\">\r\n                                            {invoice.invoiceUrl != null?<FontAwesomeIcon icon={faCheck}/>:<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" />}\r\n                                        </div>  \r\n                                        \r\n                                        <div className=\"col\">\r\n                                            {invoice.isInvoicePaid?<FontAwesomeIcon icon={faCheck}/>:<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" />}\r\n                                        </div>  \r\n                                        <div className='col'>\r\n                                            {invoice.incoiceType? \"type\" : \"no type\"}\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            {invoice.invoiceStatus}\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            <button className='btn btn-danger' onClick={e=>this.toggleReInvoiceModal(index)}>Re-Invoice</button>\r\n                                        </div>  \r\n                                        <div className='col'>\r\n                                            <a className='btn btn-danger' target={'_blank'} href={'/omega/invoice-details?id='+invoice._id}>details</a>\r\n                                        </div>                             \r\n                                    \r\n\r\n                                    </div>    \r\n                                ))\r\n                            }\r\n\r\n                        </div>    \r\n                        </div>   \r\n\r\n                    :\r\n\r\n                        <div className=\"mb-5\">\r\n                            No Invoices Found in this range\r\n                        </div>    \r\n\r\n                \r\n                :null\r\n            }\r\n\r\n            {\r\n                this.state.modalIvoice?\r\n                    <Modal isOpen={this.state.showPaymentModal} toggle={e=>this.toggleShowPaymentModal(null,null)} >\r\n                        <ModalHeader >Custom Payment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {this.state.modalIvoice.parent.firstName}\r\n                                     \r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" onChange={e=>this.setState({modalPaidStatus:1})} />\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid Less\r\n                                            </label>\r\n                                            </div>\r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option3\" onChange={e=>this.setState({modalPaidStatus:2})}/>\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid More\r\n                                            </label>\r\n                                            </div>\r\n\r\n\r\n                                            {this.state.modalPaidStatus?\r\n                                                this.state.modalPaidStatus != 0?\r\n                                                <div className=\"row mb-3\">\r\n                                                <label  class=\"form\">Payment amount</label>    \r\n                                                <input class=\"form-control\" required  type=\"number\" step=\".01\" min=\"0\" onChange={this.setModalPaymentAmount}/>\r\n                                                   \r\n                                                \r\n                                                </div>   \r\n                                                :null                                               \r\n\r\n                                            :null}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                           \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.confirmPayment} >Confirm</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={e=>this.toggleShowPaymentModal(null,null)}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>:null\r\n            }\r\n\r\n\r\n            {\r\n                \r\n                    <Modal isOpen={this.state.showReInvoiceModal} toggle={this.toggleReInvoiceModal} >\r\n                        <ModalHeader >are you sure you want to Re-Invoice?</ModalHeader>\r\n                        <ModalBody>\r\n                            <p>A new invoice will be issued</p>\r\n                            <p>the old invoiced will be drafted</p>\r\n                            <p>do not re-invoice if the client has paid for the invoice</p>\r\n                            <p>Parent: {this.state.chosenReInvoice?.parent.firstName + \" \" + this.state.chosenReInvoice?.parent.lastName  }</p>\r\n                            <p>From Date</p>\r\n                            <p>Dates will be inclusive</p>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.reInvoiceFromDate}\r\n                                onChange={date => this.setState({reInvoiceFromDate: date})}\r\n                                /> \r\n                            <p>To Date</p>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.reInvoiceToDate}\r\n                                onChange={date => this.setState({reInvoiceToDate: date})}\r\n                                /> \r\n                            <p>An invoice will be generated for the taken lessons of the dates you enter</p>\r\n                            <button class=\"btn btn-primary\" onClick={this.previewReinvoice}>Preview Re-invoice</button>\r\n\r\n                            {\r\n                                this.state.previewReinvoiceData != null?\r\n                                (\r\n                                    <div>\r\n                                    <p>\r\n                                        {this.state.previewReinvoiceData.fullName}\r\n                                    </p>\r\n\r\n                                    {\r\n                                        this.state.previewReinvoiceData?.studentsLessons?.forEach((lessonGroup,index)=>\r\n                                        {\r\n                                            <div>yo</div>\r\n                                        })\r\n                                    }\r\n                                    \r\n                                    {this.state.previewReinvoiceData?.studentsLessons?.map((lessonGroup,index)=>\r\n                                    (   \r\n                                        <div key={index}>\r\n                                            \r\n                                            <p>{lessonGroup?.student?.firstName + \" \"+ lessonGroup?.student?.lastName}</p>\r\n                                             {\r\n                                                lessonGroup?.lessons.map((lesson, index)=>\r\n                                                (\r\n                                                    <p>{lesson?.subject + \" \" + lesson?.price + \" \"+ lesson?.hours + \" \"}</p>\r\n\r\n                                                ))\r\n                                            }\r\n                                            <hr/>\r\n                                        </div>\r\n                                        \r\n                                    ))}\r\n                                    </div>                                    \r\n                                )\r\n                                :null\r\n                            }\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.createNewPreInvoice} >Confirm</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleReInvoiceModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            }\r\n\r\n        </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PreInvoicePaymentPanel","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2Admin.js",["838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857"],"import {Component} from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport qs from 'qs'\r\nimport { saveAs } from 'file-saver';\r\nimport Months from '../../Enums/Months'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload,faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nclass PreInvoiceTable2Admin extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n            fromDate: new Date(),\r\n            toDate:new Date(),\r\n            parents:null,\r\n            students:null,\r\n            chosenParents:[],\r\n            chosenStudents:[],\r\n            findBy:2,\r\n            chosenParent:null,\r\n            includeMonth:false,\r\n            includeYear:false,\r\n            inlcudeStudentsParents:false,\r\n            invoices:null,\r\n            invoicesCopy:null,\r\n            showPaymentModal:false,\r\n            modalIvoice:null,\r\n            modalInvoiceIndex:null,\r\n            modalPaidStatus:null,\r\n            modalPaymentAmount:null,\r\n            month:null,\r\n            year:null,\r\n            formSubmitted:false,\r\n            invoicesSent: false,\r\n            fetchingInvoices: false,\r\n            isPreview: true,\r\n            \r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = async () =>{\r\n\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var pid = queryString.pid? queryString.pid : null\r\n        var sid = queryString.sid? queryString.sid : null\r\n        var month = queryString.month? queryString.month : null\r\n        var year = queryString.year? queryString.year : null\r\n\r\n        if(year != null){\r\n            this.setState({year:year})\r\n            this.setState({includeYear:true})\r\n        }\r\n        if(month != null){\r\n            \r\n            this.setState({month:month})\r\n            this.setState({includeMonth:true})\r\n        }\r\n        if(sid != null){\r\n            var list = []\r\n            if(!Array.isArray(sid)){\r\n                list = [sid]\r\n            }else{\r\n                list = sid\r\n            }\r\n            \r\n            this.setState({chosenStudents:list})\r\n            \r\n        }\r\n        if(pid != null){\r\n            var list = []\r\n            if(!Array.isArray(pid)){\r\n                list = [pid]\r\n            }else{\r\n                list = pid\r\n            }\r\n            \r\n            this.setState({chosenParents:list})\r\n            this.setState({inlcudeStudentsParents:true})\r\n            this.setState({findBy:0})\r\n        }\r\n\r\n\r\n       var parents = await this.getParents()\r\n       this.setState({parents:parents})\r\n\r\n       var students = await this.getStudents()\r\n       this.setState({students:students})\r\n\r\n       var toDate = new Date()\r\n       toDate.setDate(25)\r\n       toDate.setMonth((new Date()).getMonth())\r\n       this.setState({toDate: toDate})\r\n\r\n       var fromDate = new Date()\r\n       fromDate.setDate(26)\r\n       fromDate.setMonth((new Date()).getMonth()-1)\r\n       this.setState({fromDate: fromDate})\r\n\r\n     \r\n    }\r\n\r\n\r\n    getParents = async () =>{\r\n        var parents = [];\r\n\r\n        await  axios.get('/api/parents/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                parents = await response.data\r\n            \r\n            })\r\n\r\n        return parents\r\n    }\r\n\r\n    getStudents = async () =>{\r\n        var students = [];\r\n\r\n        await  axios.get('/api/students/all',\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n                students = await response.data\r\n            \r\n            })\r\n\r\n        return students\r\n    }\r\n\r\n    toggleShowPaymentModal = async (index = null,invoice = null) =>{\r\n        this.setState({modalIvoice:invoice})\r\n        this.setState({modalIvoiceIndex:index})\r\n        this.setState({showPaymentModal:!this.state.showPaymentModal})\r\n    }\r\n\r\n    setModalPaymentAmount = async (e) =>{\r\n        var amount = e.target.value;\r\n        this.setState({modalPaymentAmount:amount})\r\n\r\n    }\r\n\r\n    resolveInvoice = async () =>{\r\n         this.state.invoices[this.state.modalIvoiceIndex].paidStatus = await this.state.modalPaidStatus\r\n         this.state.invoices[this.state.modalIvoiceIndex].paymentAmount = await this.state.modalPaymentAmount\r\n         this.state.invoices[this.state.modalIvoiceIndex].changed = await true\r\n\r\n\r\n         this.setState({modalInvoiceIndex:null})\r\n         this.setState({modalPaymentAmount:null})\r\n         this.setState({modalPaidStatus:null})\r\n         this.setState({modalIvoice:null})\r\n         this.toggleShowPaymentModal();\r\n         \r\n        \r\n    }\r\n\r\n    paidExact = async (index) =>{\r\n        var  invoices = await this.state.invoices.slice()\r\n\r\n\r\n        if(invoices[index].changed != null){\r\n            invoices[index].paidStatus = null\r\n            invoices[index].paymentAmount = null\r\n            invoices[index].changed = null;\r\n\r\n        }else{\r\n         invoices[index].paidStatus = await 0\r\n         invoices[index].paymentAmount = await invoices[index].total\r\n         invoices[index].changed = true;\r\n        }\r\n         await this.setState({invoices:invoices})     \r\n        \r\n        \r\n    }\r\n\r\n    confirmPayment = async (e) =>{\r\n        if(this.state.modalPaymentAmount != null){\r\n        if(this.state.modalPaymentAmount != this.state.modalIvoice.total){\r\n            if(this.state.modalPaidStatus ==1){\r\n                if(this.state.modalPaymentAmount < this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too much')\r\n                }\r\n            }else if(this.state.modalPaidStatus ==2){\r\n                if(this.state.modalPaymentAmount > this.state.modalIvoice.total){\r\n                    await this.resolveInvoice();\r\n                }else{\r\n                    alert('too less')\r\n                }\r\n            }\r\n\r\n        }else{\r\n            alert('cannot add ')\r\n        }\r\n    }else{\r\n        alert('no changes made');\r\n    }\r\n\r\n    }\r\n\r\n    getInvoices = async  (e)=>{\r\n        var qString = \"\"\r\n        var year = null\r\n        var month = null\r\n\r\n\r\n        if(this.state.month != null && this.state.month != \"0\"){\r\n            month = await this.state.month\r\n            qString = await qString + \"month=\" +month+\"&\"\r\n        }\r\n\r\n        if(this.state.year != null && this.state.year != \"0\"){\r\n            var year = await this.state.year\r\n            qString = await qString + \"year=\" +year\r\n        }\r\n       \r\n        console.log(qString)\r\n        await  axios.get('/api/preinvoices/get-pre-invoices?'+qString,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{\r\n               var invoices = await response.data\r\n        \r\n               this.setState({invoices:invoices})\r\n               this.setState({invoicesCopy:invoices})\r\n                console.log(invoices)\r\n               setTimeout(()=>{this.setState({fetchingInvoices: false})}, 3000);\r\n               await this.setState({fetchingInvoices:true})\r\n               \r\n            \r\n            })       \r\n    } \r\n\r\n\r\n    \r\n\r\n    saveChanges = async (e) =>{\r\n\r\n        var nonNullInvoices = await this.state.invoices?.filter(a=>a.changed != null)\r\n        var changedInvoices = await nonNullInvoices?.filter(a=>a.changed == true)\r\n\r\n        await changedInvoices?.map(async (invoice,index)=>{\r\n\r\n            var obj = {paymentAmount: invoice.paymentAmount, paidStatus: invoice.paidStatus}\r\n            \r\n            await  axios.post('/api/preinvoices/update-pre-invoices?id='+invoice._id,\r\n                {headers:this.state.options, data: obj})\r\n            .then(async (response) =>{\r\n                setTimeout(this.getInvoices, 5000);\r\n                setTimeout(()=>{this.setState({formSubmitted: false})}, 6000);\r\n                await this.setState({formSubmitted:true})\r\n            \r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n    downloadPdf =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n        console.log(base)\r\n       window.open(\"data:application/pdf;base64,\" + base);\r\n  \r\n    }\r\n\r\n    downloadPdf2 =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = (buffer).toString('base64')//await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n        console.log(base)\r\n       //window.open(\"data:application/pdf;base64,\" + base);\r\n         var link = document.createElement('a');\r\n         link.href = \"data:application/pdf;base64,\" + base;\r\n         link.download = invoice.parent.firstName+\"_\"+invoice.parent.lastName+'.pdf';\r\n         link.dispatchEvent(new MouseEvent('click'));\r\n  \r\n    }\r\n\r\n    download =async (invoice) =>{\r\n      \r\n        var buffer = await invoice.data;\r\n        var b64 = await Buffer.from(buffer).toString('base64')\r\n       var base = await b64\r\n\r\n\r\n       var blob = new Blob([\"data:application/pdf;base64,\" + base],\r\n                { type: \"text/plain;charset=utf-8\" });\r\n                var fileURL = URL.createObjectURL(blob);\r\n                window.open(fileURL);\r\n                saveAs(blob, \"static.pdf\");\r\n  \r\n    }\r\n\r\n    calculateBalance = (invoice) =>{\r\n        var preInvoiceAmount = invoice.total\r\n        var postInvoiceAmount = invoice.postInvoice[0]?.total\r\n        var paidAmount = invoice.paymentAmount;\r\n\r\n        var adjustmentFromPayment = Math.abs(paidAmount - preInvoiceAmount);\r\n        var adjustmentFromInvoice = Math.abs(postInvoiceAmount - preInvoiceAmount)\r\n\r\n        if(paidAmount < preInvoiceAmount){\r\n            adjustmentFromPayment *= -1\r\n        }\r\n\r\n        if(postInvoiceAmount > preInvoiceAmount){\r\n            adjustmentFromInvoice *= -1\r\n        }\r\n        return adjustmentFromInvoice + adjustmentFromPayment;\r\n    }\r\n\r\n    filterInvoices = (type) =>{\r\n\r\n        \r\n        switch(parseInt(type)){\r\n\r\n            case 0://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 0)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 1://paid exact\r\n            var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 1)\r\n            this.setState({invoices:invoices})\r\n                break\r\n\r\n            case 2://paid exact\r\n                var invoices = this.state.invoicesCopy.filter((i)=>i.paidStatus == 2)\r\n                this.setState({invoices:invoices})\r\n                break\r\n\r\n            default://paid exact\r\n             \r\n                this.setState({invoices:this.state.invoicesCopy})\r\n                break\r\n                \r\n        }\r\n\r\n    }\r\n\r\n    filter = (e) =>{\r\n        var searchString = e.target.value.toString().toLowerCase()\r\n        var invoices = this.state.invoicesCopy;\r\n        var filteredInvoices = invoices?.filter(x => x.parent.firstName.toLowerCase().includes(searchString) \r\n        || x.parent.lastName.toLowerCase().includes(searchString)\r\n        || x.students[0]?.firstName.toLowerCase().includes(searchString)\r\n        || x.students[1]?.firstName.toLowerCase().includes(searchString)\r\n        || x.students[2]?.firstName.toLowerCase().includes(searchString)\r\n        \r\n        )\r\n\r\n        this.setState({invoices: filteredInvoices})\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container card card-body mt-3\">\r\n            <h1>Pre-invoice Payement Panel</h1>\r\n           \r\n\r\n            {\r\n                    this.state.formSubmitted?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                       changes saved\r\n                    </div>\r\n                    :null\r\n            }\r\n\r\n\r\n            {\r\n                    this.state.fetchingInvoices?\r\n                        <div class=\"alert alert-warning\" role=\"alert\">\r\n                       invoices refreshed\r\n                    </div>\r\n                    :null\r\n            }\r\n\r\n\r\n\r\n            <div className=\"col\">\r\n            <div className=\"row mb-3\">\r\n                    <label  class=\"sr-only\">Month</label>    \r\n                    <select class=\"form-control\" defaultValue={this.state.month} onChange={e => this.setState({month:e.target.value})}>\r\n                        <option value=\"0\">Month</option>\r\n                        {Months.map((month,index)=>(\r\n                            <option selected={this.state.month == (index+1)} value={index+1} >{month}</option>\r\n                        ))}\r\n                     \r\n                    </select>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <label  class=\"sr-only\">Year</label>\r\n                        <select class=\"form-control\"  onChange={e => this.setState({year:e.target.value})}>\r\n                            <option value=\"0\">year</option>\r\n\r\n                            \r\n                            <option selected={this.state.year == 2021} value=\"2021\" >2021</option>\r\n                            <option selected={this.state.year == 2022} value=\"2022\" >2022</option>\r\n                            <option selected={this.state.year == 2023} value=\"2023\" >2023</option>\r\n                            <option selected={this.state.year == 2024} value=\"2024\" >2024</option>\r\n                        </select>\r\n                    </div>         \r\n\r\n                 \r\n            </div>\r\n         \r\n            \r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.getInvoices}>Get Invoices</button>\r\n\r\n                </div>\r\n         \r\n                \r\n                <div className=\"col mb-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.saveChanges}>Save Changes</button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {this.state.invoices?\r\n            <div className=\"btn-group mb-5\" role=\"group\" aria-label=\"Basic checkbox toggle button group\">\r\n                    \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(3)} for=\"btncheck3\">All</button>\r\n          \r\n            \r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(0)} for=\"btncheck3\">Paid Exact</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(1)} for=\"btncheck3\">Paid Less</button>\r\n\r\n            <button class=\"btn btn-primary\" onClick={(e)=>this.filterInvoices(2)} for=\"btncheck3\">Paid More</button>           \r\n          \r\n          </div>\r\n            \r\n            :null}\r\n\r\n            { <input type=\"text\" class=\"form-control mb-3\" placeholder=\"name...\" onChange={this.filter}/>}\r\n            \r\n\r\n            {\r\n                this.state.invoices?\r\n\r\n                    this.state.invoices.length > 0 ? \r\n\r\n              <div className='mb-3 mt-3'>                 \r\n                    \r\n                    <div className=\"card card-body\" style={{background: 'rgb(204, 204, 255)' }}>                \r\n\r\n                                <div class=\"row\">\r\n                                        <div className=\"col\">\r\n                                            Download\r\n                                        </div>    \r\n                                        <div className=\"col\">\r\n                                            Month/Year\r\n                                        </div>                                      \r\n                                        <div className=\"col\">\r\n                                            Parent\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            Student 1\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            Student 2\r\n                                        </div>\r\n\r\n                                        <div className=\"col\">\r\n                                            total\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            created - sent\r\n                                        </div>                                    \r\n                                        \r\n                                        <div className=\"col\">\r\n                                            Paid Exact\r\n                                        </div>  \r\n                                        <div className=\"col\">\r\n                                            Custom Payement\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            Payment Recorded\r\n                                        </div>       \r\n                                    </div> \r\n                            {\r\n                                this.state.invoices.map((invoice,index)=>(\r\n                                    \r\n                                    <div class=\"row mb-1\">\r\n                                        <div className=\"col\">                                           \r\n                                         \r\n                                            <button className=\"btn btn-danger\" disabled={invoice.created == 0} onClick={e=>this.downloadPdf2(invoice)} ><FontAwesomeIcon icon={faDownload} color=\"green\"  size=\"lg\" /> </button>\r\n                                        </div>    \r\n                                        <div className=\"col\">\r\n                                            {invoice.month + \"/\" +invoice.year}\r\n                                        </div>                                     \r\n                                        <div className=\"col\">\r\n                                            {invoice.parent.firstName + ' ' + invoice.parent.lastName}\r\n                                        </div>\r\n\r\n                                        <div className='col'>\r\n                                            {\r\n                                                invoice.students[0]?.firstName\r\n                                            }\r\n                                        </div>\r\n                                        <div className='col'>\r\n                                            {\r\n                                                invoice.students[1]?.firstName\r\n                                            }\r\n                                        </div> \r\n                                        <div className=\"col\">\r\n                                            {invoice.total}\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <div class=\"row\">\r\n                                                <div className='col'>{invoice.data?<div>1</div>:<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" />}</div>\r\n                                                <div className='col'>{invoice.sent?<div>{invoice.sent}</div>:<FontAwesomeIcon icon={faTimesCircle} color=\"red\"  size=\"lg\" />}</div>\r\n                                           \r\n                                            </div>                                                \r\n                                        </div>                                \r\n                                     \r\n                                        <div className=\"col\">\r\n                                            <button className=\"btn btn-primary\" onClick={e=>this.paidExact(index)}>{\"paid £\"+invoice.total}</button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <button className=\"btn btn-warning\" onClick={e=>this.toggleShowPaymentModal(index,invoice)} >Custom</button>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                invoice.paymentAmount\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>    \r\n                                ))\r\n                            }\r\n\r\n                        </div>    \r\n                        </div>   \r\n\r\n                    :\r\n\r\n                        <div className=\"mb-5\">\r\n                            No Invoices Found in this range\r\n                        </div>    \r\n\r\n                \r\n                :null\r\n            }\r\n\r\n            {\r\n                this.state.modalIvoice?\r\n                    <Modal isOpen={this.state.showPaymentModal} toggle={e=>this.toggleShowPaymentModal(null,null)} >\r\n                        <ModalHeader >Custom Payment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {this.state.modalIvoice.parent.firstName}\r\n                                     \r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" onChange={e=>this.setState({modalPaidStatus:1})} />\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid Less\r\n                                            </label>\r\n                                            </div>\r\n                                            <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option3\" onChange={e=>this.setState({modalPaidStatus:2})}/>\r\n                                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                                Paid More\r\n                                            </label>\r\n                                            </div>\r\n\r\n\r\n                                            {this.state.modalPaidStatus?\r\n                                                this.state.modalPaidStatus != 0?\r\n                                                <div className=\"row mb-3\">\r\n                                                <label  class=\"form\">Payment amount</label>    \r\n                                                <input class=\"form-control\" required  type=\"number\" step=\".01\" min=\"0\" onChange={this.setModalPaymentAmount}/>\r\n                                                   \r\n                                                \r\n                                                </div>   \r\n                                                :null                                               \r\n\r\n                                            :null}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                           \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.confirmPayment} >Confirm</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={e=>this.toggleShowPaymentModal(null,null)}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>:null\r\n            }\r\n\r\n        </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PreInvoiceTable2Admin","C:\\git\\mslc\\mslc\\src\\Helper.js",[],"C:\\git\\mslc\\mslc\\src\\components\\AllLessonsRow.js",[],"C:\\git\\mslc\\mslc\\src\\components\\BaseComponent.js",["858","859"],"\r\nimport { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class BaseComponent extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state =\r\n        {\r\n            errorTimer: 10000,\r\n            error: null\r\n        }\r\n    }\r\n\r\n\r\n    async sendApiRequest(url, data)\r\n    {\r\n        \r\n        var response = null;\r\n        var errorMessage = null;\r\n        await axios.post(url, data)\r\n                 .then((response)=>\r\n                 {\r\n                    if(response)\r\n                    {\r\n                        response = response;\r\n                    }\r\n                 })\r\n                 .catch((err) =>\r\n                 {\r\n                    this.props.setErrorMessage(err.response.data.message)                    \r\n                 })\r\n\r\n            return await response\r\n    }\r\n\r\n\r\n    setErrorTimeout = () =>\r\n    {\r\n        setTimeout(()=>this.setState({error: null}), this.state.errorTimer);\r\n    }\r\n    \r\n\r\n}","C:\\git\\mslc\\mslc\\src\\components\\Enums\\InvoiceTypes.js",[],"C:\\git\\mslc\\mslc\\src\\components\\Enums\\InvoiceType.js",["860"],"C:\\git\\mslc\\mslc\\src\\components\\Omega\\InvoiceDetails.js",["861","862"],"import { render } from '@testing-library/react';\r\nimport react from 'react'\r\nimport BaseComponent from '../BaseComponent';\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\nclass InvoiceDetails extends BaseComponent\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            invoice: null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    componentDidMount = () => \r\n    {\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var invoiceId = queryString.id? queryString.id : null\r\n        console.log(invoiceId)\r\n\r\n        if(invoiceId != null)\r\n        {\r\n            this.getInvoiceDetails(invoiceId)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    getInvoiceDetails = async (invoiceId) => \r\n    {\r\n        var url = `/api/preinvoicesstripe/details/${invoiceId}`\r\n        await  axios.get(url,\r\n        {headers:this.state.options, data: null})\r\n        .then(async (response) =>{      \r\n            console.log(response.data) \r\n           this.setState({invoice: response.data})    \r\n        })    \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n\r\n            <h1>Invoice Details</h1>\r\n\r\n           \r\n\r\n            <div className='container light-container p-3 m-5'>\r\n\r\n                {\r\n                    this.state.invoice != null?\r\n                    <div>\r\n                    <div className='row mb-3'>\r\n\r\n                        <div className='col ml-5'>\r\n                            Total invoice amount\r\n                        </div>\r\n                        <div className='col mr-5'>\r\n                        {\"£ \"+this.state.invoice.invoiceAmount/100}\r\n                        </div>            \r\n                        \r\n                    </div>\r\n                    <div className='row mb-3'>\r\n                    <div className='col ml-5'>\r\n                            Status\r\n                        </div>\r\n                        <div className='col mr-5'>\r\n                        {this.state.invoice.status}\r\n                        </div>\r\n                    </div>\r\n                    <table className='table'>    \r\n                            <thead>\r\n                                <tr>\r\n                                    <th>name</th>\r\n                                    <th>date</th>\r\n                                    <th>subject</th>\r\n                                    <th>hours</th>\r\n                                    <th>ppl</th>\r\n                                    <th>fpl</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                \r\n                                {this.state.invoice.takenLessons.map((lesson, index)=>\r\n                                (\r\n                                    <tr>\r\n                                        <td>{lesson.student.firstName}</td>\r\n                                        <td>{lesson.invoiceDate}</td>\r\n                                        <td>{lesson.subject}</td>\r\n                                        <td>{lesson.hours}</td>\r\n                                        <td>{lesson.payPerLesson}</td>\r\n                                        <td>{lesson.feePerLesson}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    :null\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default  InvoiceDetails\r\n\r\n\r\n","C:\\git\\mslc\\mslc\\src\\components\\Omega\\PreviewInvoiceData.js",["863","864","865"],"import { render } from '@testing-library/react';\r\nimport react from 'react'\r\nimport BaseComponent from '../BaseComponent';\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\nimport dayjs from 'dayjs';\r\nclass PreviewInvoiceData extends BaseComponent\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            fromDate:null,\r\n            toDate:null,\r\n\r\n            fromDay:null,\r\n            fromMonth:null,\r\n            fromYear:null,\r\n\r\n            toDay:null,\r\n            toMonth:null,\r\n            toYear:null,\r\n\r\n            parents:null,\r\n            urlHelper:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    componentDidMount = () => \r\n    {\r\n     \r\n\r\n    }\r\n\r\n\r\n    previewInvoiceData = async () =>\r\n    {\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n                \r\n            await  axios.get('/api/preinvoicesstripe/preview-get-lessons-by-parent?fromDate='+this.state.fromDate\r\n            +'&toDate='+this.state.toDate\r\n            +'&invoiceType='+this.state.invoiceType,\r\n                {headers:this.state.options})\r\n            .then(async (response) =>{            \r\n                console.log(response.data)\r\n                    this.setState({parents:response.data})\r\n\r\n            })\r\n\r\n        }else{\r\n            alert('null Dates')\r\n        }\r\n        \r\n    }\r\n\r\n    previewInvoiceDataForParent = async (parentId) =>\r\n    {\r\n        var fromDate = await dayjs(this.state.fromDate)\r\n        var toDate = await dayjs(this.state.toDate)\r\n\r\n        var fromDay = await fromDate.get('date')\r\n        var fromMonth = await parseInt(fromDate.get('month'))+1\r\n        var fromYear = await fromDate.get('year')\r\n\r\n        var toDay = await toDate.get('date')\r\n        var toMonth = await parseInt(toDate.get('month'))\r\n        var toYear = await toDate.get('year')\r\n\r\n\r\n        console.log(toMonth)\r\n\r\n        var url = await  \"/omega/preview-single-invoice?\" \r\n        + \"&id=\" + parentId\r\n        + \"&fromYear=\" + fromYear\r\n        + \"&fromMonth=\" + fromMonth\r\n        + \"&fromDay=\" + fromDay\r\n        + \"&toYear=\" + toYear\r\n        + \"&toMonth=\" + toMonth\r\n        + \"&toDay=\" + toDay        \r\n\r\n        return await url\r\n\r\n    }\r\n\r\n    updateDate = async (date, isFromDate = false) =>\r\n    {\r\n        var dt = date\r\n        date = dayjs(date)\r\n        if(isFromDate)\r\n        {\r\n            this.setState({fromDay: date.get('date')})\r\n            this.setState({fromMonth: parseInt(date.get('month')+1)})\r\n            this.setState({fromYear: date.get('year')})\r\n            this.setState({fromDate: dt})\r\n        \r\n        }\r\n        else\r\n        {\r\n            this.setState({toDay: date.get('date')})\r\n            this.setState({toMonth: parseInt(date.get('month')+1)})\r\n            this.setState({toYear: date.get('year')})\r\n            this.setState({toDate: dt})\r\n        }\r\n        var url =  \"&fromYear=\" + this.state.fromYear\r\n        + \"&fromMonth=\" + this.state.fromMonth\r\n        + \"&fromDay=\" + this.state.fromDay\r\n        + \"&toYear=\" + this.state.toYear\r\n        + \"&toMonth=\" + this.state.toMonth\r\n        + \"&toDay=\" + this.state.toDay\r\n\r\n\r\n        await this.setState({urlHelper:url})\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n\r\n            <h1>All Invoice Details</h1>\r\n\r\n            <div className='container'>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\" >\r\n                    <label class=\"m-1\">From Date</label>\r\n                    <DatePicker className=\"form-control\"\r\n                        selected={this.state.fromDate}\r\n                        onChange={date => this.updateDate(date, true)}\r\n                        />  \r\n                </div>\r\n                <div className=\"col \" >\r\n                    <label class=\"m-1\">To Date</label>\r\n                    <DatePicker className=\"form-control\"\r\n                        selected={this.state.toDate}\r\n                        onChange={date => this.updateDate(date)}\r\n                        />  \r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <button className='btn btn-primary' onClick={this.previewInvoiceData}>Get Invoice Data</button>\r\n            </div>\r\n\r\n            <table className='table table-reponsive preview-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            parent\r\n                        </th>\r\n                        <th>\r\n                            -\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.parents != null?\r\n                        this.state.parents.map((parent, index)=>\r\n                        (\r\n                            <tr>\r\n                                <td>\r\n                                    {parent.parentEmail}\r\n                                </td>\r\n                                <td>\r\n                                    <button className='btn btn-success' onClick={e => this.previewInvoiceDataForParent(parent.parentId)}>Check Invoice</button>\r\n                                    <a className='btn btn-primary' href={\"/omega/preview-single-invoice?id=\"+parent.parentId + this.state.urlHelper}>Check Invoice</a>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    :null\r\n                }\r\n                </tbody>\r\n            </table>\r\n\r\n                \r\n\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default  PreviewInvoiceData\r\n\r\n\r\n","C:\\git\\mslc\\mslc\\src\\components\\Omega\\PreviewSingleInvoiceData.js",["866","867","868"],"import { render } from '@testing-library/react';\r\nimport react from 'react'\r\nimport BaseComponent from '../BaseComponent';\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\nclass PreviewSingleInvoiceData extends BaseComponent\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            fromDate:null,\r\n            toDate:null,\r\n            data:null,\r\n            options :{ authorization: this.props.token,userid:this.props.userId } \r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => \r\n    {\r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var id = queryString.id? queryString.id : null\r\n        var fromYear = queryString.fromYear? queryString.fromYear : null\r\n        var fromMonth = queryString.fromMonth? queryString.fromMonth : null\r\n        var fromDay = queryString.fromDay? queryString.fromDay : null\r\n\r\n        var toYear = queryString.toYear? queryString.toYear : null\r\n        var toMonth = queryString.toMonth? queryString.toMonth : null\r\n        var toDay = queryString.toDay? queryString.toDay : null\r\n\r\n\r\n        var url = `/api/preinvoicesstripe/preview-single-invoice/${id}/${fromDay}/${fromMonth}/${fromYear}/${toDay}/${toMonth}/${toYear}`\r\n        await  axios.get(url,\r\n        {headers:this.state.options, data: null})\r\n        .then(async (response) =>{\r\n            \r\n        this.setState({data:response.data})\r\n    \r\n            })        \r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n\r\n            <h1>Single Invoice Details</h1>\r\n\r\n            <div className='container light-container'>\r\n\r\n                {this.state.data != null?\r\n                    <div>\r\n                        <div>Email: {this.state.data.parentEmail}</div>\r\n\r\n                        {this.state.data.studentsLessons?.map((studentGroup, index)=>\r\n                        (\r\n                            <div>\r\n                                <div>{studentGroup.student}</div>\r\n                                {\r\n                                    studentGroup.lessons.map((lesson, index)=>\r\n                                    (\r\n                                        <div>{lesson.subject + \" | \" + lesson.rate + \" | \" + lesson.feePerLesson + \" | \" + lesson.date + \" | \" +  (lesson.stripeInvoiceId? \"invoiced\" : \"not invoiced\") }</div>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </div>\r\n                        ))}\r\n\r\n                        \r\n                    </div>\r\n                :null}\r\n\r\n                \r\n\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default  PreviewSingleInvoiceData\r\n\r\n\r\n","C:\\git\\mslc\\mslc\\src\\Constants.js",[],"C:\\git\\mslc\\mslc\\src\\components\\OldRegister.js",["869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897"],"import React,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Tooltip } from 'reactstrap';\r\nimport AllLessonsRow from './AllLessonsRow'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport qs from 'qs'\r\nimport Corrections from './Enums/Corrections';\r\nimport Subjects from './Enums/Subjects';\r\nimport {getDateData} from '../Helper'\r\nimport BaseComponent from './BaseComponent';\r\n\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\nclass Register extends BaseComponent {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            data:null,\r\n            extraLessons:[],\r\n            extraEnteredLessons:[],\r\n            chosenDate:null,\r\n            justExtra: false,\r\n            justExtraBtnMsg: \"only extra lessons\",\r\n            showRegularLessonModal:false,\r\n            showExtraLessonModal:false,\r\n            regularLessonModalIndex:null,\r\n            extraLessonModalIndex:null,\r\n            allLessons:null,\r\n            filteredAllLessons:[],\r\n            searchString:null,\r\n            extraLesson:null,\r\n            studentNotOnList:false,\r\n            teacherId:null,\r\n            showSaveModal:false,\r\n            justSaved:false,\r\n            noChanges:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            changesSaved:false,\r\n            changedNotSaved:false,\r\n            tooltipOpen: false,\r\n            error: false,\r\n            errorMessage: null,\r\n            modalError: false,\r\n            modalErrorMessage: null,\r\n            matches: window.matchMedia(\"(min-width: 768px)\").matches,\r\n            options :{userid:this.props.userId }\r\n        }\r\n    }\r\n\r\n    componentDidMount = async ()=>{     \r\n    \r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var date = queryString.date? queryString.date : null\r\n        if(date != null){\r\n            var dateString =date;\r\n            var splitDate = dateString.split('/');\r\n            var month = splitDate[1] - 1; //Javascript months are 0-11\r\n\r\n            var date = new Date(splitDate[2], month, splitDate[0]);\r\n\r\n            if(Object.prototype.toString.call(date) === \"[object Date]\"){\r\n                this.setDate(new Date(date))\r\n             }\r\n        }\r\n        var date = new Date();\r\n        await this.setState({teacherId:this.props.data.id})\r\n        await this.setState({options: {userid:this.props.userId}})\r\n        await this.setDate(date)      \r\n    \r\n        await this.setMinMaxDates();\r\n\r\n        \r\n    }\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()       \r\n\r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() > 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n        \r\n        this.setState({maxDate:new Date(maxYear,maxMonth,27)})\r\n        this.setState({minDate:new Date(minYear,minMonth,26)})\r\n       \r\n\r\n      \r\n    }\r\n\r\n    addExtraLesson = async (lesson) =>{\r\n    \r\n        if(lesson != null){\r\n            lesson.hours = 1\r\n            this.setState({extraEnteredLessons:this.state.extraEnteredLessons.concat(lesson)})\r\n            this.toggleExtraLessonModal()\r\n        }else{\r\n            \r\n            \r\n            this.setState({modalErrorMessage: \"Lesson Not Chosen\"})\r\n            this.triggerModalErrorMessage();\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    triggerErrorMessage = () =>{\r\n        this.setState({error: true})\r\n        setTimeout(()=>{\r\n            this.setState({error:false})\r\n            this.setState({errorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n    triggerModalErrorMessage = () =>{\r\n        this.setState({modalError: true})\r\n        setTimeout(()=>{\r\n            this.setState({modalError:false})\r\n            this.setState({modalErrorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n\r\n    updateCorrection = (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n        item = this.state.extraEnteredLessons[index]     \r\n\r\n        item.correction = parseInt(e.target.value);\r\n        \r\n        if(item.correction != item.prevCorrection){\r\n            item.updateCorrection = true  \r\n          \r\n        }\r\n\r\n  \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n\r\n    updateLessonType = (e, index, isExtraLesson = false, isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n     \r\n            item = this.state.extraEnteredLessons[index]\r\n\r\n        var lessonType = parseInt(e.target.value)      \r\n       \r\n\r\n        if(lessonType == 0){\r\n             item.price = item.groupPrice\r\n             item.rateKey = item.groupRateKey\r\n             item.rate = item.groupRate\r\n             item.actualLessonType = 0\r\n   \r\n        }else if(lessonType == 1){\r\n            item.price = item.singlePrice\r\n            item.rateKey = item.singleRateKey\r\n            item.rate = item.singleRate\r\n            item.actualLessonType = 1\r\n        }\r\n\r\n        item.updateLessonType = true;\r\n        \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n    updateHours = async (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var hours = e.target.value;\r\n       \r\n        if(hours == \"\"){\r\n            hours = parseInt(0);\r\n        }\r\n        \r\n       \r\n        var item = this.state.extraEnteredLessons[index]\r\n   \r\n        item.hours = await  hours;\r\n\r\n       \r\n        if(item.hours != item.prevHours){\r\n            item.updateHours = true\r\n          \r\n        }\r\n        \r\n        this.setState({data:this.state.data})\r\n    }\r\n\r\n    updateTakenLessonCorrection = async (id,correction)=>{\r\n\r\n        await  axios.post('/api/taken-lessons/update-correction?userId='+\r\n        this.props.userId+'&id='+id+'&c='+correction,{headers:this.state.options})\r\n        .then(response=>{\r\n                  \r\n        })\r\n    }\r\n    updateTakenLessonHours = async (id,hours) => {        \r\n        \r\n        await  axios.post('/api/taken-lessons/update-hours?userId='+\r\n        this.props.userId+'&id='+id+'&h='+hours,{ headers:this.state.options })\r\n        .then(response=>{\r\n         \r\n           \r\n        })\r\n    }\r\n    createTakenLesson = async (item, isExtra = false)=>{  \r\n        if(parseFloat(item.hours) != 0){\r\n\r\n    \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n            var teacherId = item.teacher\r\n            var subject = item.subject;\r\n            var correction = item.correction\r\n            var studentId = item.student._id\r\n            var rateKey = item.rateKey;\r\n            var rate = item.rate;\r\n            var price  = item.price;\r\n            var hours = item.hours;\r\n            var date = this.state.chosenDate;\r\n            var discount = item.student.discount;\r\n            var day = item.day;        \r\n         \r\n        \r\n                var url = await '/api/taken-lessons?userId='+\r\n                this.props.userId+'&tid='+teacherId+\r\n                '&s='+subject+\r\n                '&rkey='+rateKey+\r\n                '&day='+day+\r\n                '&sid='+studentId+\r\n                '&p='+price+\r\n                '&c='+correction+\r\n                '&h='+hours+\r\n                '&rate='+rate+\r\n                '&da='+date+\r\n                '&di='+discount+\r\n                '&slt='+item.setLessonType+\r\n                '&alt='+item.actualLessonType+\r\n                '&ie='+isExtra;\r\n           \r\n         if(item.correction != 3){  /// 3 = ignore     \r\n            await axios.post(url,{headers:options})\r\n             .then(response =>{\r\n                 \r\n            })\r\n \r\n        }\r\n    }\r\n    }\r\n    deleteTakenLesson = async (lesson) =>{\r\n       \r\n        await axios.delete('/api/taken-lessons?userId='+\r\n        this.props.userId+'&id='+lesson.takenId)\r\n        .then(response =>{\r\n         \r\n        })\r\n\r\n    }\r\n\r\n    updateTakenLessonType = async (lessonId, takenLessonId, lessonType) =>{\r\n\r\n    \r\n        var apiStr = '/api/taken-lessons/update-lesson-type?userid='+this.props.userId+'&id='+lessonId.toString()+'&tid='+takenLessonId.toString()+'&type='+lessonType.toString()\r\n    \r\n        await axios.post(apiStr,{headers:this.state.options})\r\n        .then(response =>{\r\n          \r\n        })\r\n    }\r\n    checkFormat = (data) =>{\r\n       \r\n                var formatValues = data.map(lesson=> parseFloat(lesson.hours) != null)\r\n               \r\n                if(formatValues.includes(false)){\r\n                    return false\r\n                }else{\r\n                    return true\r\n                }\r\n \r\n    }\r\n\r\n    checkIfDataNeedsUpdate = (data)=>{\r\n\r\n        var formatValues = data?.map(lesson=> lesson.updateCorrection == true || lesson.updateHours == true || lesson.updateLessonType == true)\r\n        \r\n        if(formatValues?.includes(true)){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    checkChangesNotSaved = async () =>{        \r\n\r\n        var needsUpdate_regular = await this.checkIfDataNeedsUpdate(this.state.data) \r\n        var needsUpdate_ExtraEntered = await this.checkIfDataNeedsUpdate(this.state.extraEnteredLessons);\r\n        var needsUpdate_Extra = await this.state.extraLessons.length > 0\r\n        var hasChanges = (needsUpdate_regular || needsUpdate_ExtraEntered || needsUpdate_Extra)&&this.state.chosenDate != null\r\n        return hasChanges && !this.state.changesSaved\r\n    } \r\n    \r\n    saveAndUpdate = async (e) =>{\r\n\r\n\r\n        console.log(this.state.extraEnteredLessons)\r\n       \r\n        var obj = {}\r\n     \r\n         obj.lessons = await this.state.extraEnteredLessons.map((lesson, index) => {\r\n            var l = {\r\n                    studentId: lesson.studentId,\r\n                 hours: lesson.hours,\r\n                 subject: lesson.subject,\r\n                 yearGroup: lesson.yearGroup,\r\n                 singleFee: lesson.singleFee,\r\n                 singlePay: lesson.singlePay,\r\n                 groupFee: lesson.groupFee,\r\n                 groupPay: lesson.groupPay,\r\n                 lessonType: lesson.lessonType\r\n                }\r\n            return l\r\n        })\r\n\r\n        \r\n        obj.TeacherId = this.state.teacherId\r\n       \r\n        var date = new Date(this.state.chosenDate)\r\n        obj.date = date\r\n      \r\n        \r\n        await  axios.post('/api/taken-lesson/add', obj)\r\n        .then(response=>{\r\n            this.setState({justSaved:true})\r\n                \r\n           \r\n            setTimeout(()=>{\r\n                this.setState({justSaved:false})\r\n                \r\n                this.checkLessons()\r\n                \r\n            }\r\n            , 3000);\r\n        })\r\n    }\r\n\r\n    save = async () =>{\r\n\r\n        var isCorrectFormatRegular = true;\r\n        var isCorrectFormatExtra = true;\r\n        var isCorrectFormatExtraEntered = true;\r\n\r\n        var isRegularLessons = false;\r\n        var isExtraLessons = false;\r\n        var isExtraEnteredLessons = false;\r\n\r\n        var regSaved = true;\r\n        var extraSaved = true;\r\n        var enteredExtraSaved = true;\r\n\r\n        var needsUpdate_regular = await this.checkIfDataNeedsUpdate(this.state.data) \r\n        var needsUpdate_ExtraEntered = await this.checkIfDataNeedsUpdate(this.state.extraEnteredLessons);\r\n        var needsUpdate_Extra = await this.state.extraLessons.length > 0\r\n\r\n\r\n\r\n\r\n    if((needsUpdate_regular || needsUpdate_ExtraEntered || needsUpdate_Extra)&&this.state.chosenDate != null){\r\n\r\n        this.setState({changesSaved:true})\r\n        if(this.state.data != null){\r\n            if(this.state.data.length > 0 ){\r\n                isCorrectFormatRegular = await this.checkFormat(this.state.data)\r\n                isRegularLessons = true\r\n            }\r\n        }\r\n\r\n        if(this.state.extraEnteredLessons != null){\r\n            if(this.state.extraEnteredLessons.length > 0 ){\r\n                isCorrectFormatExtraEntered = await this.checkFormat(this.state.extraEnteredLessons)\r\n                isExtraEnteredLessons = true\r\n            }\r\n        }\r\n\r\n        if(this.state.extraLessons != null){\r\n            if(this.state.extraLessons.length > 0 ){\r\n                isCorrectFormatExtra = await this.checkFormat(this.state.extraLessons)\r\n                isExtraLessons = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(isRegularLessons && needsUpdate_regular){\r\n\r\n            if(isCorrectFormatRegular){\r\n\r\n     \r\n            var allLessons = this.state.data.filter((lesson)=>parseFloat(lesson.hours) > 0)\r\n            var extraLessons = this.state.extraLessons\r\n              \r\n        //regular lessons\r\n            allLessons.map((lesson,index)=>{\r\n               \r\n                //update\r\n                if(lesson.delete == true && lesson.alreadyEntered){\r\n                   \r\n                    this.deleteTakenLesson(lesson)\r\n                }else if(lesson.alreadyEntered != true){\r\n                 \r\n                    this.createTakenLesson(lesson)\r\n                }else if(lesson.updateCorrection || lesson.updateHours || lesson.updateLessonType){\r\n                    if(lesson.updateCorrection){\r\n                        this.updateTakenLessonCorrection(lesson.takenId,lesson.correction)\r\n                    }\r\n\r\n                    if(lesson.updateHours){\r\n                        this.updateTakenLessonHours(lesson.takenId,lesson.hours)\r\n                    }\r\n\r\n                    if(lesson.updateLessonType){\r\n                      \r\n                        this.updateTakenLessonType(lesson._id, lesson.takenId, lesson.actualLessonType)\r\n                    }\r\n                }\r\n            \r\n            })\r\n\r\n                \r\n\r\n            }else{\r\n           \r\n                alert('incorrect format, data not sent')\r\n                regSaved = false;\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        if(isExtraEnteredLessons && needsUpdate_ExtraEntered){\r\n            if(isCorrectFormatExtraEntered){\r\n                var allLessons = await this.state.extraEnteredLessons.filter((lesson)=>parseFloat(lesson.hours) > 0)        \r\n    \r\n                //regular lessons\r\n                    allLessons.map((lesson,index)=>{\r\n                        //update\r\n                        if(lesson.delete == true && lesson.alreadyEntered){\r\n                            \r\n                            this.deleteTakenLesson(lesson)\r\n                        }else if(lesson.alreadyEntered != true){\r\n                            this.createTakenLesson(lesson)\r\n                        }else if(lesson.updateCorrection || lesson.updateHours || lesson.updateLessonType){\r\n                            if(lesson.updateCorrection){\r\n                                this.updateTakenLessonCorrection(lesson.takenId,lesson.correction)\r\n                            }\r\n                            if(lesson.updateHours){\r\n                                this.updateTakenLessonHours(lesson.takenId,lesson.hours)\r\n                         \r\n                            }\r\n                            if(lesson.updateLessonType){\r\n                                \r\n                                this.updateTakenLessonType(lesson._id, lesson.takenId, lesson.actualLessonType)\r\n                            }\r\n                        }\r\n                    \r\n                    })\r\n\r\n\r\n           \r\n\r\n            }else{\r\n            \r\n                alert('incorrect format, data not sent')\r\n                enteredExtraSaved = false;\r\n            }\r\n           \r\n        }\r\n\r\n        if(isExtraLessons && needsUpdate_Extra ){\r\n\r\n            if(isCorrectFormatExtra){\r\n              \r\n                this.state.extraLessons.filter((lesson)=>parseFloat(lesson.hours) > 0).map((lesson)=>this.createTakenLesson(lesson));\r\n            }else{           \r\n                alert('incorrect format, data not sent')\r\n                extraSaved = false;\r\n            }\r\n           \r\n           \r\n        }\r\n\r\n\r\n        if(isRegularLessons || isExtraEnteredLessons || isExtraLessons){\r\n\r\n            if(regSaved && extraSaved && enteredExtraSaved){\r\n\r\n                this.setState({justSaved:true})\r\n                \r\n           \r\n                setTimeout(()=>{\r\n                    this.setState({justSaved:false})\r\n                    this.setState({chosenDate:null})\r\n                }\r\n                , 3000);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        \r\n    }else{\r\n\r\n        this.setState({noChanges:true})\r\n           \r\n                setTimeout(()=>\r\n                    this.setState({noChanges:false})\r\n                , 3000);\r\n\r\n    }        \r\n}\r\n    setDate = async (date) =>{\r\n   \r\n             await this.setState({chosenDate:date})\r\n\r\n            await this.setState({dayOfWeek:date.getDay()})\r\n\r\n           \r\n            await this.checkLessons();\r\n          \r\n     \r\n    }\r\n   \r\n    checkLessons = async ()=>{\r\n\r\n    \r\n        await this.setState({data:null})\r\n        await this.setState({extraEnteredLessons:[]})\r\n        await this.setState({extraLessons:null})\r\n        await  this.setState({extraLessons:[]})\r\n        var token = await this.props.data.accessToken\r\n        var config = await {headers:{Authorization:`Bearer  ${token}`}}\r\n        console.log(config)\r\n        await  axios.get('/api/lesson/date/'+formatDate(this.state.chosenDate)\r\n                        +'/'+this.state.teacherId, config)\r\n            .then(response=>{\r\n                var data = response.data              \r\n                this.setState({data:null})\r\n                this.setState({data:data})            \r\n            })  \r\n\r\n\r\n        var dateObj = getDateData(this.state.chosenDate)\r\n\r\n        await  axios.get('/api/taken-lesson/get/'+this.state.teacherId\r\n                     +'/'+formatDate(this.state.chosenDate))\r\n        .then(response=>{\r\n             var data = response.data          \r\n             this.setState({extraEnteredLessons:null})   \r\n             this.setState({extraEnteredLessons:data})        \r\n        })\r\n       \r\n\r\n    }\r\n\r\n    toggleJustExtra = async ()  =>{\r\n        await this.setState({justExtra:!this.state.justExtra})\r\n        if(this.state.justExtra){\r\n            this.setState({justExtraBtnMsg:\"only regular lessons\"})\r\n        }else{\r\n            this.setState({justExtraBtnMsg:\"only extra lessons\"})\r\n            \r\n        }\r\n    }\r\n\r\n    removeRegularLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.data;\r\n            lessons[index].delete = true\r\n           \r\n\r\n            this.setState({data:lessons})\r\n          }\r\n\r\n        if(this.state.showRegularLessonModal){\r\n            this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        }\r\n        \r\n    }\r\n\r\n    removeExtraLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.extraLessons;\r\n            lessons.splice(index)\r\n        \r\n            this.setState({extraLessons:lessons})\r\n          }\r\n\r\n        \r\n    }\r\n\r\n    toggleRegularLessonModal = (e,index) =>{\r\n        this.setState({regularLessonModalIndex:index})\r\n        this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        \r\n\r\n    }\r\n\r\n    toggleExtraLessonModal = (e,index) =>{\r\n\r\n        if(this.state.chosenDate == null){\r\n            this.setState({errorMessage: \"No date chosen\"})\r\n            this.triggerErrorMessage()            \r\n            return\r\n        }\r\n\r\n        this.setState({extraLessonModalIndex:index})\r\n        this.setState({showExtraLessonModal: !this.state.showExtraLessonModal})\r\n        this.getAllTeacherStudents();\r\n\r\n    }\r\n    toggleChangesNotSavedModal  = (e) =>{\r\n        this.setState({showNotSavedModel:!this.state.showNotSavedModel})\r\n    }\r\n  \r\n\r\n    getAllTeacherStudents = async ()=>{\r\n       \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n\r\n           \r\n            await axios.get('/api/lessons/teacher/notday?id='+this.props.id+'&day='+this.state.dayOfWeek+'&date='+this.state.chosenDate,\r\n            { headers:options })\r\n            .then(response =>{\r\n            var lessons = response.data;\r\n      \r\n            this.setState({allLessons:lessons})\r\n            this.setState({filteredAllLessons:lessons})\r\n\r\n\r\n        })\r\n    }\r\n    setStudentSearch = (e)=>{\r\n        var searchString = e.target.value? e.target.value : \"\"; \r\n        this.setState({searchString:searchString})\r\n        var filtered = this.state.allLessons.filter((item,index)=>(\r\n        \r\n            item.student?.firstName.toLowerCase().includes(searchString.toLowerCase()) ||\r\n            item.student?.lastName.toLowerCase().includes(searchString.toLowerCase())\r\n\r\n        ))\r\n        this.setState({extraLesson:null})\r\n        this.setState({filteredAllLessons:filtered})\r\n\r\n    }\r\n\r\n    setSelected = (lesson) =>{\r\n        this.setState({extraLesson:lesson})\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          tooltipOpen: !this.state.tooltipOpen\r\n        });\r\n    }\r\n\r\n    addToTakenLessonList(e, index){\r\n        var lesson = this.state.data[index];\r\n\r\n        console.log(lesson)\r\n        var takenLessons = this.state.extraEnteredLessons;\r\n        console.log(takenLessons)\r\n        lesson.hours = 1     \r\n\r\n        takenLessons.push(lesson)\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n    }\r\n\r\n    removeFromTakenLessonList(e, index){\r\n      \r\n        var takenLessons = this.state.extraEnteredLessons\r\n        takenLessons.splice(index,1)\r\n\r\n        takenLessons.map((lesson, index)=>{\r\n            let hours = lesson.hours\r\n            lesson.hours = hours\r\n        })\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n        \r\n        this.setState({extraEnteredLessons: this.state.extraEnteredLessons})\r\n    }  \r\n  \r\n    \r\n    render(){\r\n        return(\r\n            <div id=\"EnterDataContainer\" >              \r\n            \r\n\r\n                {\r\n                     this.state.error && this.state.errorMessage?\r\n                     <div className=\"alert alert-danger\" role=\"alert\">\r\n                         {this.state.errorMessage}                         \r\n                     </div>\r\n                 :null\r\n                }\r\n\r\n            \r\n                {\r\n                    this.state.justSaved?\r\n                        <div className=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n\r\n\r\n\r\n                {\r\n                    this.state.noChanges?\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {this.state.chosenDate == null?\r\n                            \"no date chosen\"\r\n                            :\"no changes made!\"}\r\n                            \r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n                \r\n                {\r\n                    this.state.matches?\r\n                    <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col-4\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">           \r\n                        <div className='d-inline mb-1 mr-4'>\r\n                            <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add \r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                    Save\r\n                            </button>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n:\r\n                <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col\">           \r\n                        <div className='d-inline mb-1 mr-2'>\r\n                            <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                    Save\r\n                            </button>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                }\r\n               \r\n\r\n          \r\n                \r\n                <div class={\"row \"+  (this.state.matches? \"margin\": \"\")}>\r\n                    <div class=\"col-5 lesson-list\">\r\n                        <table id=\"EnterDataTable\" className=\" table\">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th >\r\n                                        Name\r\n                                    </th>\r\n                                    <th   >\r\n                                        Subject\r\n                                    </th>\r\n                                    <th   >\r\n                                        -\r\n                                    </th>                             \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data?\r\n                                    this.state.data.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>{item.studentFirstName}</td>\r\n                                            <td>{Subjects[item.subject]}</td>\r\n                                            <td><button className='btn btn-success' onClick={(e)=>this.addToTakenLessonList(e,index)}>+</button></td>\r\n                                        </tr>\r\n                                    ))\r\n                                :null}                  \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table id=\"EnterDataTable\" className=\" table table-responsive table-responsive-otter\">\r\n                            <thead>\r\n                               \r\n                                    <th class=\"col-3\">\r\n                                        Name\r\n                                    </th>\r\n                                    <th  class=\"col-1\" >\r\n                                        Subject\r\n                                    </th>\r\n                                    <th className=\"type-col\">\r\n                                        Type\r\n                                    </th>\r\n                                    <th className='type-col'  >\r\n                                        -\r\n                                    </th>\r\n                                    <th class=\"type-col\"  >\r\n                                        Hours\r\n                                    </th>  \r\n                                    <th class=\"col-1\">\r\n                                        -\r\n                                    </th>                            \r\n                              \r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.extraEnteredLessons?\r\n                                    this.state.extraEnteredLessons.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>{item.studentFirstName}</td>\r\n                                            <td>{Subjects[item.subject]}</td>\r\n                                            <td >\r\n                                                <div className=\"form-group type-col\">                                        \r\n                                                    <select defaultValue={item.alreadyEntered? item.actualLessonType :item.rateKey?.charAt(1) == \"G\"? 0:1} className=\"form-control\" onChange={(e)=>this.updateLessonType(e,index,false)}>\r\n                                                                                        \r\n                                                    <option value={0} >G</option>\r\n                                                    <option value={1} >1</option>\r\n                                                    </select>                                                 \r\n                                                \r\n                                                </div>\r\n                                            </td>\r\n                                            <td  >\r\n                                            <div className=\"form-group type-col\">\r\n                                            \r\n                                                <select defaultValue={item.correction} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.updateCorrection(e,index,false)}>\r\n                                                                                \r\n                                                                        {Corrections?\r\n                                                                        \r\n                                                                        \r\n                                                                            Corrections.map((item,index)=>(\r\n                                                                                <option key={index} value={index} >{item?.toUpperCase().charAt(0)}</option>\r\n                                                                            ))\r\n                                                                        :\r\n                                                                        <option>error</option>\r\n                                                                        }\r\n                                                </select>                      \r\n                                            </div>                                            \r\n                                            </td>\r\n                                        <td id=\"hours\">\r\n                                            <input key={index} type=\"number\"  maxLength=\"3\" className=\"form-control type-col\"  defaultValue={item.hours?item.hours:null} style={item.prevHours != item.hours? {background:'lightgreen'} :null} onChange={(e)=>{this.updateHours(e,index)}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className='btn btn-danger' onClick={(e)=>this.removeFromTakenLessonList(e,index)}>x</button></td>\r\n                                        </tr>\r\n                                    ))\r\n                                :null}                   \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>           \r\n                   \r\n                    <Modal isOpen={this.state.showRegularLessonModal} toggle={this.toggleRegularLessonModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                           the lesson will be removed for today, to remove permenantly please contact an admin, providing the student's name and subject\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={(e)=>this.removeRegularLesson(e,this.state.regularLessonModalIndex)}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleRegularLessonModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showExtraLessonModal} toggle={this.toggleExtraLessonModal} >\r\n                        <ModalHeader >You are about to add an extra lesson</ModalHeader>\r\n                        <ModalBody>\r\n                        {\r\n                            this.state.modalError && this.state.modalErrorMessage?\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {this.state.modalErrorMessage}                         \r\n                            </div>\r\n                        :null\r\n                        }\r\n\r\n                       \r\n                        <label for=\"inputEmail4\">Student</label>\r\n                        <input value={this.state.extraLesson?this.state.extraLesson.student?.firstName +\" \":null} className=\"form-control\" onChange={this.setStudentSearch} placeholder=\"search for students ...\"/>\r\n                        <div id=\"AddExtraLessonModal\" class=\"mb-3 mt-3\">\r\n                            <Button color=\"primary\" onClick={(e)=>this.addExtraLesson(this.state.extraLesson)}>Add Extra Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleExtraLessonModal}>Cancel</Button>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"col\" style={{cursor:'pointer'}}\r\n                         size={this.state.filteredAllLessons?.length} onChange={this.setStudent}  style={{display:this.state.showStudentList}}>\r\n                            \r\n                            {this.state.filteredAllLessons != null?this.state.filteredAllLessons.map((item,index)=>(\r\n\r\n                                \r\n                               <AllLessonsRow\r\n                                item={item}\r\n                                index={index}\r\n                                key={index}\r\n                                addExtraLesson = {this.addExtraLesson}\r\n                                setSelected = {this.setSelected}\r\n                               />\r\n\r\n                            )):null}\r\n                        </div> \r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            \r\n                        </ModalFooter>\r\n      \r\n                    </Modal>               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Register);","C:\\git\\mslc\\mslc\\src\\components\\Admin\\Invoicing\\InvoiceReport.js",["898","899","900"],"import axios from 'axios'\r\nimport {react, Component} from 'react'\r\n\r\n\r\n\r\nclass InvoiceReport extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            parents: [],\r\n            parentsCopy: [],\r\n            parent: null,\r\n            month: 0,\r\n            year: 0\r\n        }        \r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        axios.get('/api/parent/').then((response)=>\r\n        {\r\n            var parents = response.data;\r\n           \r\n            this.setState({parents: parents})\r\n            this.setState({parentsCopy: parents})\r\n        })\r\n    }\r\n\r\n    search = (e) =>\r\n    {\r\n        var searchTerm = e.target.value;\r\n\r\n        var parents = this.state.parentsCopy.filter((parent) => parent.firstName.includes(searchTerm))\r\n\r\n        this.setState({parents: parents})\r\n    }\r\n\r\n    searchInvoices = () =>\r\n    {\r\n        console.log(this.state.month)\r\n        var qs = \"\";\r\n        if(this.state.month != 0)\r\n        {\r\n            qs += \"month=\"+this.state.month.toString()+\"&\"\r\n        }\r\n\r\n        if(this.state.year != 0)\r\n        {\r\n            qs += \"year=\"+this.state.year.toString()\r\n        }\r\n\r\n        console.log(qs)\r\n        axios.get('/api/invoice/search?'+qs).then((response)=>\r\n        {\r\n            var invoices = response.data;\r\n           console.log(invoices)\r\n            this.setState({invoices: invoices})\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className='container'>\r\n                <h1>Invoice Report</h1>\r\n\r\n                <div className='row'>\r\n                    <div className='col-8'>\r\n                        {\r\n                            this.state.parent != null?\r\n                                <div className='mb-3'>\r\n                                    {\"Selected : \"+ this.state.parent?.firstName + \" \" + this.state.parent?.lastName }\r\n                                </div>\r\n                             :<div className='mb-3'>No parent Selected</div>\r\n                        }\r\n\r\n                        <div className='mb-3'>\r\n                            <button\r\n                                onClick={this.searchInvoices}\r\n                                className='btn btn-success'\r\n                            >Search Invoices</button>\r\n                        </div>\r\n\r\n                        <div className='mb-3'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>\r\n                                            Parent\r\n                                        </td>\r\n                                        <td>\r\n                                            Amount\r\n                                        </td>\r\n                                        <td>\r\n                                            Status\r\n                                        </td>\r\n                                        <td>\r\n                                            Link\r\n                                        </td>\r\n                                        <td>\r\n                                            Created On\r\n                                        </td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    this.state.invoices?.map((invoice, index)=>\r\n                                    (\r\n                                        <tr>\r\n                                            <td>{invoice.parentName}</td>\r\n                                            <td>{invoice.invoiceAmount}</td>\r\n                                            <td>{invoice.status}</td>\r\n                                            <td><a href={invoice.stripeInvoiceUrl}><span className=''>icon</span></a></td>\r\n                                            <td>{invoice.createdOn}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }        \r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n\r\n\r\n                      \r\n\r\n                    </div>\r\n                    <div className='col-4'>\r\n                        <div>\r\n                            <label>Month</label>\r\n                            <select \r\n                                defaultValue={0}\r\n                                onChange={e => this.setState({month: e.target.value})} \r\n                                className='form-select'>\r\n                                    <option value={0}>None</option>\r\n                                    <option value={1}>Jan</option>\r\n                                    <option value={2}>Feb</option>\r\n                                    <option value={3}>Mar</option>\r\n                                    <option value={4}>April</option>\r\n                                    <option value={5}>May</option>\r\n                                    <option value={6}>June</option>\r\n                                    <option value={7}>July</option>\r\n                                    <option value={8}>Aug</option>\r\n                                    <option value={9}>Sep</option>\r\n                                    <option value={10}>Oct</option>\r\n                                    <option value={11}>Nov</option>\r\n                                    <option value={12}>Dec</option>                                    \r\n                            </select>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label>Year</label>\r\n                            <select \r\n                                defaultValue={0}\r\n                                onChange={e => this.setState({year: e.target.value})}  \r\n                                className='form-select'>\r\n                                    <option value={0}>None</option>\r\n                                    <option value={2022}>2022</option>\r\n                                    <option value={2023}>2023</option>\r\n                                    <option value={2024}>2024</option>                                   \r\n                            </select>\r\n\r\n                        </div>\r\n                        <hr/>\r\n                        <div className='form-group'>\r\n                            <label>Search for parent</label>\r\n                            <input \r\n                                className='from-group'\r\n                                onChange={e => this.search(e)}\r\n                                /> \r\n                        </div>\r\n                        <div>\r\n                            {this.state.parents.map((parent, index)=>\r\n                            (\r\n                                <div\r\n                                    onClick={()=>this.setState({parent: parent})} \r\n                                    class=\"list-row\"\r\n                                    index={index}\r\n                                >{parent.firstName + \" \" + parent.lastName}</div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n\r\n\r\n                \r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvoiceReport","C:\\git\\mslc\\mslc\\src\\Auth0\\authentication-guard.js",[],"C:\\git\\mslc\\mslc\\src\\Auth0\\page-loader.js",[],"C:\\git\\mslc\\mslc\\src\\Auth0\\callback-page.js",[],["901","902"],"C:\\git\\kappaClient\\kappaclient\\src\\index.js",["903"],"C:\\git\\kappaClient\\kappaclient\\src\\reportWebVitals.js",[],["904","905"],"C:\\git\\kappaClient\\kappaclient\\src\\App.js",["906","907","908"],"import { BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\r\nimport './App.css';\r\nimport 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AdminPanel from './components/Admin/AdminPanel';\r\nimport SignIn from './components/SignIn';\r\nimport InstantLogOut from './components/Auth/InstantLogoutButton';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport EditStudentLessons from './components/Admin/EditStudentLessons';\r\nimport EditStudentTakenLessons from './components/Admin/TakenLessons/EditStudentTakenLessons';\r\nimport MyLessons from './components/MyLessons'\r\nimport InvoiceStatusTable from './components/Admin/Invoicing/InvoiceStatusTable'\r\nimport InvoiceTable2 from './components/Admin/Invoicing/InvoiceTable2'\r\nimport PreInvoiceTable2 from './components/Admin/Invoicing/PreInvoiceTable2'\r\nimport PreInvoiceTable2Admin from './components/Admin/Invoicing/PreInvoiceTable2Admin'\r\nimport EmailPanel from './components/Admin/Emailing/EmailPanel';\r\nimport PaymentPanel from './components/Admin/Payments/PaymentPanel';\r\nimport InvoiceReport from './components/Admin/Invoicing/InvoiceReport';\r\nimport MonthlyReport from './components/Admin/Reports/MonthlyReport';\r\nimport StudentRecords from './components/Admin/Reports/StudentRecords';\r\nimport ParentRecords from './components/Admin/Reports/ParentRecords';\r\nimport AddNewStudents2 from './components/Admin/AddNewStudents2';\r\nimport AllTeachers from './components/Admin/Teachers/AllTeachers';\r\nimport NavBar from './components/NavBar';\r\nimport OmegaPanel from './components/Omega/OmegaPanel';\r\nimport HackRegister from './components/Omega/HackRegister';\r\nimport HackLesson from './components/Omega/HackLesson';\r\nimport Queries from './components/Omega/Queries';\r\nimport axios from 'axios'\r\nimport OldRegister from \"./components/OldRegister\";\r\nimport InvoiceDetails from \"./components/Omega/InvoiceDetails\";\r\nimport PreviewInvoiceData from \"./components/Omega/PreviewInvoiceData\";\r\nimport PreviewSingleInvoiceData from \"./components/Omega/PreviewSingleInvoiceData\";\r\n// import { CallbackPage } from \"../Auth0/callback-page\";\r\nimport { Component, useState } from \"react\";\r\nimport { AuthenticationGuard } from \"./Auth0/authentication-guard\";\r\n// import { AuthenticationGuard } from \"./Auth0/authentication-guard\";\r\n// const request = require('request');\r\nconst REACT_APP_SERVER = process.env.REACT_APP_SERVER\r\nconst REACT_APP_AUTH_AUDIENCE = process.env.REACT_APP_AUTH_AUDIENCE\r\naxios.defaults.baseURL = REACT_APP_SERVER\r\n  function  App() {\r\n  var { user,isAuthenticated, getAccessTokenSilently, logout } = useAuth0();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  \r\n  var accessToken = null;\r\n  var userId = null;\r\n  var data = {isAuthenticated: isAuthenticated, id:1}\r\n if(user != null){\r\n  var email = user.email\r\n  \r\n  console.log(user)\r\n  if(false || !user.nickname?.isKappa)\r\n  {\r\n    //logout({returnTo: window.location.origin})\r\n  }\r\n  const domain = REACT_APP_AUTH_AUDIENCE;\r\n  var accessToken =   getAccessTokenSilently({\r\n    authorizationParams: {\r\n      audience: `${domain}`,\r\n      scope: \"read:messages\",\r\n    },\r\n  });\r\n\r\n  Promise.resolve(accessToken).then(async (value)=>\r\n  {\r\n    var config = {headers:{Authorization:`Bearer  ${value}`}}\r\n    data.config = config\r\n\r\n    await axios.get('/api/teacher/email/'+email, config).then((response)=>\r\n    {\r\n      data.id = response.data?._id;\r\n\r\n    })\r\n  })\r\n \r\n\r\n  }else{\r\n   // console.log('I am NOT Authenticated')\r\n   \r\n  \r\n  }\r\n  return (\r\n    <div className=\"App\" style={{minHeight:'100%',width:'100%',position:'absolute'}} >\r\n      <div className=\"nav-container\">\r\n        <NavBar isAuthenticated={isAuthenticated} id={userId} userId={user?.nickname.userId} token={user?.nickname.token} role={user?.nickname.role}/>  \r\n      </div>\r\n      {\r\n        errorMessage.length > 0?\r\n          <div className=\"alert alert-danger ml-5 mr-5 mt-1 mb-1 d-flex\" role=\"alert\">\r\n            <span>{errorMessage}</span> <span className=\"ml-auto mr-3 btn\" onClick={(e)=> setErrorMessage(\"\")} >&times;</span>\r\n          </div>\r\n        :null\r\n      }\r\n     \r\n      <div >     \r\n      \r\n\r\n       <Router>\r\n    <div >\r\n      <Switch>\r\n    \r\n        <Route exact path='/logout' render={() =>(<InstantLogOut  />)}/>       \r\n        <Route exact path='/register' render={() => (<AuthenticationGuard component={OldRegister} data={data} isAuthenticated={isAuthenticated} />)}/>\r\n        <Route exact path='/my-lessons' render={() => (<AuthenticationGuard component={MyLessons} data={data} isAuthenticated={isAuthenticated} />)}/> \r\n        <Route exact path='/Omega' render={() => (<AuthenticationGuard component={OmegaPanel} data={data} isAuthenticated={isAuthenticated} />)}/>   \r\n        <Route exact path='/admin/student-records' render={() => (<AuthenticationGuard component={StudentRecords} isAuthenticated={isAuthenticated} data={data} />)}/>\r\n        \r\n        \r\n        <Route exact path='/admin/invoice-report' render={() => (isAuthenticated?<InvoiceReport id={1} userId={user.nickname.userId} role={user.nickname.role}  />:null)}/> \r\n        <Route exact path='/Admin/edit-student-lessons' render={() => (isAuthenticated && user.nickname.role >0?<EditStudentLessons id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token} setErrorMessage={setErrorMessage}  />:null)}/> \r\n        <Route exact path='/Admin/modify-taken-lessons' render={() => (isAuthenticated && user.nickname.role >0?<EditStudentTakenLessons id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/Admin' render={() => (isAuthenticated?<AdminPanel id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n             \r\n        <Route exact path='/' render={() => (<SignIn user={user} setErrorMessage={setErrorMessage} />)}/> \r\n        \r\n        <Route exact path='/admin/invoice-status-table' render={() => (isAuthenticated && user.nickname.role > 0?<InvoiceStatusTable id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/admin/email-panel' render={() => (isAuthenticated && user.nickname.role === 2?<EmailPanel id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/admin/payment-panel' render={() => (isAuthenticated && user.nickname.role > 0?<PaymentPanel id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/admin/monthly-report' render={() => (isAuthenticated && user.nickname.role === 2?<MonthlyReport id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        \r\n        <Route exact path='/admin/parent-records' render={() => (isAuthenticated && user.nickname.role > 0?<ParentRecords id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/>\r\n        <Route exact path='/admin/add-new-students-2' render={() => (<AddNewStudents2    />)}/> \r\n        <Route exact path='/admin/invoice-table-2' render={() => (isAuthenticated && user.nickname.role === 2?<InvoiceTable2 id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/admin/pre-invoice' render={() => (isAuthenticated && user.nickname.role === 2?<PreInvoiceTable2 id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/admin/admin-pre-invoice' render={() => (isAuthenticated && user.nickname.role > 0?<PreInvoiceTable2Admin id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/>\r\n        <Route exact path='/admin/all-teachers' render={() => (isAuthenticated && user.nickname.role === 2?<AllTeachers id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/hack-register' render={() => (isAuthenticated && user.nickname.role === 2?<HackRegister id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/hack-lessons' render={() => (isAuthenticated && user.nickname.role === 2?<HackLesson id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/invoice-details' render={() => (isAuthenticated && user.nickname.role === 2?<InvoiceDetails id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/queries' render={() => (isAuthenticated && user.nickname.role === 2?<Queries id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/preview-invoice' render={() => (isAuthenticated && user.nickname.role === 2?<PreviewInvoiceData id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n        <Route exact path='/omega/preview-single-invoice' render={() => (isAuthenticated && user.nickname.role === 2?<PreviewSingleInvoiceData id={user.nickname._id} userId={user.nickname.userId} token={user.nickname.token}   />:null)}/> \r\n\r\n      </Switch>\r\n\r\n    </div>\r\n    </Router>\r\n    </div>\r\n    <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n\r\n    \r\n<script src=\"https://code.jquery.com/jquery-1.12.3.min.js\"></script>\r\n\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/0.9.0rc1/jspdf.min.js\"></script>\r\n\r\n   \r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\git\\kappaClient\\kappaclient\\src\\components\\NavBar.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\SignIn.js",["909","910","911","912"],"import React,{Component} from 'react'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { Redirect , withRouter} from 'react-router-dom';\r\nimport { css } from \"@emotion/react\";\r\nimport Loader from \"react-spinners/HashLoader\";\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\nclass SignIn extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            gid:null,\r\n            redirect:false,\r\n            jwt:null,\r\n            fetchError:null,\r\n            foods:[],\r\n            user: this.props.user,\r\n            showGame: false\r\n     \r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n     getJwt = async (obj) => {\r\n        const { data } = await axios.get('/api/jwt?gid='+obj.googleId);\r\n        localStorage.setItem('token', data.token);\r\n        console.log(data.token)\r\n        if(data.token == 0){\r\n          \r\n          alert('intruder reported')\r\n        }\r\n        this.setState({jwt:data.token});\r\n      };\r\n\r\n      onSuccessfulSignIn = (obj) => {\r\n        this.getJwt(obj);\r\n        \r\n      }\r\n      onFailedSignIn = () =>{}\r\n\r\n       getFoods = async () => {\r\n        try {\r\n          const { data } = await axios.get('/api/foods');\r\n          this.setState({foods:data})\r\n          \r\n        } catch (err) {\r\n          this.setState({fetchError:err.message})\r\n        }\r\n      };\r\n\r\n    componentDidMount = ()=>{\r\n\r\n\r\n      this.props.setErrorMessage(\"test\")\r\n\r\n      console.log(this.props.user)\r\n\r\n        axios.interceptors.request.use(\r\n            config => {\r\n              const { origin } = new URL('http://localhost:3000'+config.url);\r\n        \r\n              const allowedOrigins = ['http://localhost:3000'];\r\n              const token = localStorage.getItem('token');\r\n              \r\n              if (allowedOrigins.includes(origin)) {\r\n           \r\n                config.headers.authorization = `Bearer ${token}`;\r\n              }\r\n              return config;\r\n            },\r\n            error => {\r\n              return Promise.reject(error);\r\n            }\r\n          );\r\n    }\r\n\r\n    updateKey = (e) =>{\r\n        this.setState({gid:e.target.value})\r\n    }\r\n\r\n    logIn = async (e) =>{\r\n        var str = \"/api/verify-teacher?gid=\"+this.state.gid\r\n\r\n\r\n        await axios.get(str)\r\n        .then(async response => {\r\n            var code = response.data\r\n            if(code == 200){\r\n               \r\n                this.setState({redirect:true})\r\n            \r\n            }else if(code == 403){\r\n\r\n                alert('Congratulations, you played yourself')\r\n\r\n            }else{\r\n                alert('why')\r\n            }\r\n            \r\n\r\n        });  \r\n\r\n    }\r\n\r\n    toggleGame = () =>{\r\n      this.setState({showGame: !this.state.showGame})\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        const { redirect } = this.state;\r\n        if (redirect) {\r\n            return <Redirect to='/EnterData'/>;\r\n          }\r\n\r\n        return(\r\n            <div  >\r\n        \r\n            <div className=\"container\">\r\n\r\n\r\n              {!this.state.showGame?\r\n                      <div  style={{marginTop:'150px'}} >\r\n                      <div id=\"HomepageTitle\" className=\"card-body\" >\r\n                      <Loader color={'#007bff'} loading={true} css={override} size={40} />  \r\n\r\n                      <h1>{this.props.user? \"Hi \"+this.props.user.nickname.fullName+ \"!\": \"Kappa-Client\"} </h1>\r\n\r\n\r\n                      {/* <div class=\"card card-body bg-primary mt-3\">\r\n\r\n                      </div> */}                   \r\n\r\n\r\n                      </div>\r\n\r\n\r\n                      </div>\r\n                      :null\r\n              }\r\n               \r\n\r\n              \r\n\r\n            <div >\r\n                   \r\n            </div>\r\n\r\n            </div>\r\n                \r\n                    \r\n            \r\n              \r\n           \r\n\r\n      \r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SignIn;","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AdminPanel.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\MyLessons.js",["913","914","915","916","917","918","919","920","921","922","923"],"import react,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from 'axios'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\n///keep this import\r\nimport Chart from 'chart.js/auto';\r\nDate.prototype.formatDDMMYYYY = function(){\r\n    return (this.getDate() +\"/\"+ (this.getMonth() + 1) + \r\n    \"/\" +  this.getFullYear());\r\n}\r\n\r\nDate.prototype.formatDDMMYYYYWithDashes = function(){\r\n    return (this.getDate() +\"-\"+ (this.getMonth() + 1) + \r\n    \"-\" +  this.getFullYear());\r\n}\r\n\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top'\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Past Monthly Earnings'\r\n      }\r\n    }\r\n  };\r\n  \r\n  const labels = ['June', 'July','August', 'Spetember', 'October'];\r\n  \r\n  var data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'pay',\r\n        data: [0,0,0,0],\r\n        backgroundColor: '#0066ff',\r\n      }\r\n    ],\r\n  };\r\nclass MyLessons extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            fromDate:null,\r\n            toDate:null,\r\n            takenLessons:null,\r\n            takenLessonsCopy:null,\r\n            isResults:false,\r\n            subtotal:null,\r\n            lessonToDelete:null,\r\n            lessonToDeleteId:null,\r\n            justSaved:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            searchTerm:null,\r\n            hours:1,\r\n            earningsPerHour:0,\r\n            data: data,\r\n            options :{ authorization: this.props.token,userid:this.props.userId }   \r\n        }\r\n    }\r\n\r\n    componentDidMount = async () =>{\r\n        await this.setMinMaxDates()\r\n    }\r\n\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()        \r\n        \r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() >= 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n\r\n        await this.setState({maxDate:new Date(maxYear,maxMonth,26)})\r\n        await this.setState({minDate:new Date(minYear,minMonth,26)})\r\n        await this.setState({toDate:new Date(maxYear,maxMonth-1,25)})\r\n        await this.setState({fromDate:new Date(minYear,minMonth-1,26)})\r\n           \r\n       \r\n        \r\n      \r\n    }\r\n\r\n    getLessons = async () =>{\r\n        console.log(this.props.id)\r\n        var config = await this.props.data.config\r\n        var startDate = (new Date(this.state.fromDate)).formatDDMMYYYYWithDashes()\r\n        var endDate = (new Date(this.state.toDate)).formatDDMMYYYYWithDashes()\r\n        await  axios.get('/api/taken-lesson/between/'+this.state.fromDate.toUTCString()+'/'+ this.state.toDate.toUTCString()+'/1', config)\r\n        .then(response=>{\r\n\r\n        console.log(response.data)\r\n\r\n           \r\n            this.setState({takenLessons:response.data})\r\n            this.setState({takenLessonsCopy:response.data})\r\n            this.calculateSubtotal(response.data);\r\n            this.setState({isResults:true})\r\n\r\n        })\r\n    }\r\n\r\n    search = (e) =>{\r\n        if(this.state.fromDate != null && this.state.toDate != null){\r\n            if(this.state.fromDate<this.state.toDate){\r\n                this.getLessons()\r\n                //this.stats()\r\n            }else{\r\n                alert('cannot query between these dates');\r\n            }\r\n        }else{\r\n            alert('enter dates')\r\n        }\r\n    }\r\n\r\n    calculateSubtotal = (lessons) =>{\r\n        if(lessons != null){\r\n            var subtotal  = 0;\r\n\r\n            lessons.map((lesson,index)=>{\r\n                var ppl = lesson.totalPay;\r\n                subtotal = subtotal +ppl\r\n            })\r\n            \r\n         \r\n            this.setState({subtotal:subtotal})\r\n            this.setState({earningsPerHour: subtotal/this.state.hours})\r\n\r\n        }else{\r\n            this.setState({subtotal:null})\r\n        }\r\n    }\r\n    toggleModal = () =>{\r\n        \r\n        this.setState({showModal:!this.state.showModal})\r\n    }\r\n    deleteLesson = async () =>{\r\n        this.toggleModal()\r\n        console.log()\r\n        await axios.delete('/api/taken-lessons/delete?id='+this.state.lessonToDeleteId,{headers:this.state.options})\r\n        .then(response =>{\r\n            console.log(response)\r\n        })\r\n\r\n        this.setState({justSaved:true})\r\n                \r\n                setTimeout(()=>\r\n                    this.setState({justSaved:false})\r\n                , 3000);\r\n\r\n        this.search();\r\n      \r\n    }\r\n\r\n    setLesson = (e,id)=>{\r\n        this.setState({lessonToDeleteId:id})\r\n        this.toggleModal()\r\n    }\r\n\r\n    setHours=(e)=>\r\n    {\r\n        let hours = e.target.value\r\n        this.setState({hours: hours})\r\n    }\r\n\r\n    stats = async ()=>\r\n    {\r\n        await axios.get('/api/v2/lessons/teacher/'+this.props.id.toString()+'/pastmonthsearnings',{headers:this.state.options})\r\n        .then(response =>{\r\n            \r\n            var stats = response.data\r\n\r\n            var list = [stats.june[0].amount, stats.july[0].amount, stats.august[0].amount, stats.september[0].amount, stats.october[0].amount]\r\n\r\n            var data = {\r\n                labels,\r\n                datasets: [\r\n                  {\r\n                    label: 'pay',\r\n                    data: list,\r\n                    backgroundColor: '#0066ff',\r\n                  }\r\n                ],\r\n              };\r\n\r\n            this.setState({data:data})\r\n            \r\n            \r\n        }) \r\n    }\r\n    filter = (e) =>{\r\n        var searchTerm = e.target.value\r\n        searchTerm = searchTerm.toLowerCase();\r\n        console.log(this.state.takenLessonsCopy)\r\n        var list = this.state.takenLessonsCopy.filter((item)=>\r\n            \r\n                item.studentFirstName.toLowerCase().includes(searchTerm) ||\r\n\r\n                item.lessonDate.includes(searchTerm) \r\n\r\n\r\n            \r\n                )\r\n        this.setState({takenLessons:list})\r\n       \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"MyLessons\" >\r\n            <div id=\"MyLessonsContainer\" className=\"container\">\r\n                <h1 className=\"m-3 mb-5\">My Lessons</h1>\r\n\r\n                {\r\n                    this.state.justSaved?\r\n                        <div class=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }       \r\n             \r\n              \r\n                    <div className=\"mb-3\">\r\n                        <div className=\"mt-5 pt-5\">                        \r\n                            <div class=\"form-group\">\r\n                                <div className='d-inline-block label-text'>\r\n                                    <label ><h4 class=\"text\">From : </h4> </label>\r\n                                </div>\r\n                                <div className='d-inline-block'>\r\n                                <DatePicker className=\"form-control\"\r\n                                    selected={this.state.fromDate}\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    onChange={date => this.setState({fromDate:date})}\r\n                                    /> \r\n                                </div>                              \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"d-inline-block label-text\">\r\n                                    <label ><h4 class=\"text\">To : </h4> </label>\r\n                                </div>\r\n                                <div class=\"d-inline-block\">\r\n                                <DatePicker className=\"form-control\"\r\n                                    selected={this.state.toDate}\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    onChange={date => this.setState({toDate:date})}\r\n                                    /> \r\n                                </div>                              \r\n                            </div>\r\n                               \r\n                            <button className=\"btn btn-outline-primary mb-5 mt-3 search-btn\"\r\n                                onClick={this.search}\r\n                            >Search\r\n                            </button>\r\n                                  \r\n                                    \r\n                                         \r\n                </div>\r\n\r\n                <div className=\"\">\r\n                {this.state.isResults?\r\n                    <div>\r\n                    <div className=' mb-5'>\r\n                    {                    \r\n                    this.state.subtotal?\r\n                        <button className=\"btn btn-primary amount-btn\" disabled={true} >{'£ '+ this.state.subtotal}</button>\r\n                    :null\r\n                    }            \r\n                  \r\n                    </div>\r\n         \r\n                        </div>\r\n                   \r\n                          :null}\r\n                </div>\r\n\r\n              \r\n\r\n                </div>\r\n\r\n                \r\n\r\n      \r\n\r\n                <div>\r\n                {\r\n                    this.state.isResults ?\r\n                        <div className='lessons-chart mb-5'>\r\n                            <Bar\r\n                            options={options}\r\n                            data={this.state.data}\r\n                            />\r\n                        </div>\r\n                    :null               \r\n                }\r\n                {\r\n                            this.state.isResults && this.state.takenLessons?\r\n                            <div>\r\n                            <div id=\"MyLessonsSearchBar\" class=\"input-group mb-5\">\r\n                                <input onChange={(e)=>this.filter(e)} type=\"text\" class=\"form-control\" placeholder={\"e.g. \"+\"hamid\"+\"... maths... saturday ... 2022-04-24 (TRY THIS NEW SEARCH FEATURE!!!)\"} />\r\n                          \r\n                                </div>\r\n                            </div> : null\r\n                        }\r\n                    {this.state.isResults?\r\n                    \r\n                        this.state.takenLessons?\r\n                       \r\n                            this.state.takenLessons.length > 0 ?                                  \r\n\r\n\r\n                                <div>\r\n                                  \r\n                                    <table id=\"MyLessonsTable\" className=\"table table-responsive table-light\">\r\n                                        <div>\r\n                                        <thead>\r\n                                            <th>\r\n                                                Date\r\n                                            </th>\r\n                                            <th>\r\n                                                Name\r\n                                            </th>\r\n                                            <th>\r\n                                                Subject\r\n                                            </th>\r\n                                            <th>\r\n                                                Correction\r\n                                            </th>\r\n                                            <th>\r\n                                                RPH\r\n                                            </th>\r\n                                            <th>\r\n                                                Hours\r\n                                            </th>\r\n                                            <th>\r\n                                                PPL\r\n                                            </th>\r\n                                            {/* <th>\r\n                                                Delete\r\n                                            </th> */}\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                           \r\n                                           {this.state.takenLessons.map((item,index)=>(\r\n                                               <tr>\r\n                                                   <td>\r\n                                                       {new Date(item.lessonDate).formatDDMMYYYY()}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.studentFirstName}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.subject}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.correction}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.rate}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.hours}\r\n                                                   </td>\r\n                                                   <td>\r\n                                                       {item.totalPay}\r\n                                                   </td>\r\n                                                   {/* <td>\r\n                                                       {new Date(item.date) <= this.state.maxDate && new Date(item.date) >= this.state.minDate?\r\n                                                        <button className=\"btn btn-danger\"\r\n                                                        onClick={e=>this.setLesson(e,item._id)}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       :\r\n                                                       <button className=\"btn btn-danger\"\r\n                                                        disabled={true}\r\n                                                       >x</button>\r\n                                                       \r\n                                                       \r\n                                                       }\r\n\r\n                                                        \r\n                                                   </td> */}\r\n                                               </tr>\r\n                                           ))}\r\n\r\n                                        </tbody>\r\n                                        </div>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                    \r\n\r\n                            :<div><button className=\"btn btn-warning\" disabled={true}>No Lessons Found !</button></div>\r\n\r\n                        :null\r\n                        \r\n                    :null}\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                            \r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.deleteLesson}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyLessons","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\EditStudentLessons.js",["924","925","926"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\InstantLogoutButton.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\OldRegister.js",["927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955"],"import React,{Component} from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Tooltip } from 'reactstrap';\r\nimport AllLessonsRow from './AllLessonsRow'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport qs from 'qs'\r\nimport Corrections from './Enums/Corrections';\r\nimport Subjects from './Enums/Subjects';\r\nimport {getDateData} from '../Helper'\r\nimport BaseComponent from './BaseComponent';\r\n\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\nclass Register extends BaseComponent {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            data:null,\r\n            extraLessons:[],\r\n            extraEnteredLessons:[],\r\n            chosenDate:null,\r\n            justExtra: false,\r\n            justExtraBtnMsg: \"only extra lessons\",\r\n            showRegularLessonModal:false,\r\n            showExtraLessonModal:false,\r\n            regularLessonModalIndex:null,\r\n            extraLessonModalIndex:null,\r\n            allLessons:null,\r\n            filteredAllLessons:[],\r\n            searchString:null,\r\n            extraLesson:null,\r\n            studentNotOnList:false,\r\n            teacherId:null,\r\n            showSaveModal:false,\r\n            justSaved:false,\r\n            noChanges:false,\r\n            minDate:null,\r\n            maxDate:null,\r\n            changesSaved:false,\r\n            changedNotSaved:false,\r\n            tooltipOpen: false,\r\n            error: false,\r\n            errorMessage: null,\r\n            modalError: false,\r\n            modalErrorMessage: null,\r\n            matches: window.matchMedia(\"(min-width: 768px)\").matches,\r\n            options :{userid:this.props.userId }\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount = async ()=>{     \r\n\r\n\r\n    \r\n        var queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var date = queryString.date? queryString.date : null\r\n        if(date != null){\r\n            var dateString =date;\r\n            var splitDate = dateString.split('/');\r\n            var month = splitDate[1] - 1; //Javascript months are 0-11\r\n\r\n            var date = new Date(splitDate[2], month, splitDate[0]);\r\n\r\n            if(Object.prototype.toString.call(date) === \"[object Date]\"){\r\n                this.setDate(new Date(date))\r\n             }\r\n        }\r\n        var date = new Date();\r\n        await this.setState({teacherId:this.props.data.id})\r\n        await this.setState({options: {userid:this.props.userId}})\r\n        await this.setDate(date)      \r\n    \r\n        await this.setMinMaxDates();\r\n\r\n        \r\n    }\r\n    setMinMaxDates = async () =>{\r\n        var date = new Date()       \r\n\r\n        var maxMonth = date.getMonth()\r\n        if(date.getDate() > 27){ // 27 is cut off date\r\n            maxMonth++;\r\n        }\r\n        var minMonth = maxMonth == 1? 12: maxMonth - 1\r\n\r\n        var maxYear = date.getFullYear();\r\n        var minYear = maxMonth == 1? maxYear -1 : maxYear\r\n        \r\n        this.setState({maxDate:new Date(maxYear,maxMonth,27)})\r\n        this.setState({minDate:new Date(minYear,minMonth,26)})\r\n       \r\n\r\n      \r\n    }\r\n\r\n    addExtraLesson = async (lesson) =>{\r\n    \r\n        if(lesson != null){\r\n            lesson.hours = 1\r\n            this.setState({extraEnteredLessons:this.state.extraEnteredLessons.concat(lesson)})\r\n            this.toggleExtraLessonModal()\r\n        }else{\r\n            \r\n            \r\n            this.setState({modalErrorMessage: \"Lesson Not Chosen\"})\r\n            this.triggerModalErrorMessage();\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    triggerErrorMessage = () =>{\r\n        this.setState({error: true})\r\n        setTimeout(()=>{\r\n            this.setState({error:false})\r\n            this.setState({errorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n    triggerModalErrorMessage = () =>{\r\n        this.setState({modalError: true})\r\n        setTimeout(()=>{\r\n            this.setState({modalError:false})\r\n            this.setState({modalErrorMessage: null})\r\n            \r\n            \r\n        }\r\n        , 3000);\r\n        \r\n    }\r\n\r\n\r\n    updateCorrection = (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n        item = this.state.extraEnteredLessons[index]     \r\n\r\n        item.correction = parseInt(e.target.value);\r\n        \r\n        if(item.correction != item.prevCorrection){\r\n            item.updateCorrection = true  \r\n          \r\n        }\r\n\r\n  \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n\r\n    updateLessonType = (e, index, isExtraLesson = false, isExtraEntered = false) =>{\r\n        var item = null;\r\n        \r\n     \r\n            item = this.state.extraEnteredLessons[index]\r\n\r\n        var lessonType = parseInt(e.target.value)      \r\n       \r\n\r\n        if(lessonType == 0){\r\n             item.price = item.groupPrice\r\n             item.rateKey = item.groupRateKey\r\n             item.rate = item.groupRate\r\n             item.actualLessonType = 0\r\n   \r\n        }else if(lessonType == 1){\r\n            item.price = item.singlePrice\r\n            item.rateKey = item.singleRateKey\r\n            item.rate = item.singleRate\r\n            item.actualLessonType = 1\r\n        }\r\n\r\n        item.updateLessonType = true;\r\n        \r\n        this.setState({data:this.state.data})\r\n\r\n       \r\n    }\r\n    updateHours = async (e,index,isExtraLesson = false,isExtraEntered = false) =>{\r\n        var hours = e.target.value;\r\n       \r\n        if(hours == \"\"){\r\n            hours = parseInt(0);\r\n        }\r\n        \r\n       \r\n        var item = this.state.extraEnteredLessons[index]\r\n   \r\n        item.hours = await  hours;\r\n\r\n       \r\n        if(item.hours != item.prevHours){\r\n            item.updateHours = true\r\n          \r\n        }\r\n        \r\n        this.setState({data:this.state.data})\r\n    }\r\n\r\n    updateTakenLessonCorrection = async (id,correction)=>{\r\n\r\n        await  axios.post('/api/taken-lessons/update-correction?userId='+\r\n        this.props.userId+'&id='+id+'&c='+correction,{headers:this.state.options})\r\n        .then(response=>{\r\n                  \r\n        })\r\n    }\r\n    updateTakenLessonHours = async (id,hours) => {        \r\n        \r\n        await  axios.post('/api/taken-lessons/update-hours?userId='+\r\n        this.props.userId+'&id='+id+'&h='+hours,{ headers:this.state.options })\r\n        .then(response=>{\r\n         \r\n           \r\n        })\r\n    }\r\n    createTakenLesson = async (item, isExtra = false)=>{  \r\n        if(parseFloat(item.hours) != 0){\r\n\r\n    \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n            var teacherId = item.teacher\r\n            var subject = item.subject;\r\n            var correction = item.correction\r\n            var studentId = item.student._id\r\n            var rateKey = item.rateKey;\r\n            var rate = item.rate;\r\n            var price  = item.price;\r\n            var hours = item.hours;\r\n            var date = this.state.chosenDate;\r\n            var discount = item.student.discount;\r\n            var day = item.day;        \r\n         \r\n        \r\n                var url = await '/api/taken-lessons?userId='+\r\n                this.props.userId+'&tid='+teacherId+\r\n                '&s='+subject+\r\n                '&rkey='+rateKey+\r\n                '&day='+day+\r\n                '&sid='+studentId+\r\n                '&p='+price+\r\n                '&c='+correction+\r\n                '&h='+hours+\r\n                '&rate='+rate+\r\n                '&da='+date+\r\n                '&di='+discount+\r\n                '&slt='+item.setLessonType+\r\n                '&alt='+item.actualLessonType+\r\n                '&ie='+isExtra;\r\n           \r\n         if(item.correction != 3){  /// 3 = ignore     \r\n            await axios.post(url,{headers:options})\r\n             .then(response =>{\r\n                 \r\n            })\r\n \r\n        }\r\n    }\r\n    }\r\n    deleteTakenLesson = async (lesson) =>{\r\n       \r\n        await axios.delete('/api/taken-lessons?userId='+\r\n        this.props.userId+'&id='+lesson.takenId)\r\n        .then(response =>{\r\n         \r\n        })\r\n\r\n    }\r\n\r\n    updateTakenLessonType = async (lessonId, takenLessonId, lessonType) =>{\r\n\r\n    \r\n        var apiStr = '/api/taken-lessons/update-lesson-type?userid='+this.props.userId+'&id='+lessonId.toString()+'&tid='+takenLessonId.toString()+'&type='+lessonType.toString()\r\n    \r\n        await axios.post(apiStr,{headers:this.state.options})\r\n        .then(response =>{\r\n          \r\n        })\r\n    }\r\n    checkFormat = (data) =>{\r\n       \r\n                var formatValues = data.map(lesson=> parseFloat(lesson.hours) != null)\r\n               \r\n                if(formatValues.includes(false)){\r\n                    return false\r\n                }else{\r\n                    return true\r\n                }\r\n \r\n    }\r\n\r\n    checkIfDataNeedsUpdate = (data)=>{\r\n\r\n        var formatValues = data?.map(lesson=> lesson.updateCorrection == true || lesson.updateHours == true || lesson.updateLessonType == true)\r\n        \r\n        if(formatValues?.includes(true)){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    checkChangesNotSaved = async () =>{        \r\n\r\n        var needsUpdate_regular = await this.checkIfDataNeedsUpdate(this.state.data) \r\n        var needsUpdate_ExtraEntered = await this.checkIfDataNeedsUpdate(this.state.extraEnteredLessons);\r\n        var needsUpdate_Extra = await this.state.extraLessons.length > 0\r\n        var hasChanges = (needsUpdate_regular || needsUpdate_ExtraEntered || needsUpdate_Extra)&&this.state.chosenDate != null\r\n        return hasChanges && !this.state.changesSaved\r\n    } \r\n    \r\n    saveAndUpdate = async (e) =>{\r\n\r\n\r\n        console.log(this.state.extraEnteredLessons)\r\n       \r\n        var obj = {}\r\n     \r\n         obj.lessons = await this.state.extraEnteredLessons.map((lesson, index) => {\r\n            var l = {\r\n                    studentId: lesson.studentId,\r\n                 hours: lesson.hours,\r\n                 subject: lesson.subject,\r\n                 yearGroup: lesson.yearGroup,\r\n                 singleFee: lesson.singleFee,\r\n                 singlePay: lesson.singlePay,\r\n                 groupFee: lesson.groupFee,\r\n                 groupPay: lesson.groupPay,\r\n                 lessonType: lesson.lessonType\r\n                }\r\n            return l\r\n        })\r\n\r\n        \r\n        obj.TeacherId = this.state.teacherId\r\n       \r\n        var date = new Date(this.state.chosenDate)\r\n        obj.date = date\r\n      \r\n        \r\n        await  axios.post('/api/taken-lesson/add', obj)\r\n        .then(response=>{\r\n            this.setState({justSaved:true})\r\n                \r\n           \r\n            setTimeout(()=>{\r\n                this.setState({justSaved:false})\r\n                \r\n                this.checkLessons()\r\n                \r\n            }\r\n            , 3000);\r\n        })\r\n    }\r\n\r\n    save = async () =>{\r\n\r\n        var isCorrectFormatRegular = true;\r\n        var isCorrectFormatExtra = true;\r\n        var isCorrectFormatExtraEntered = true;\r\n\r\n        var isRegularLessons = false;\r\n        var isExtraLessons = false;\r\n        var isExtraEnteredLessons = false;\r\n\r\n        var regSaved = true;\r\n        var extraSaved = true;\r\n        var enteredExtraSaved = true;\r\n\r\n        var needsUpdate_regular = await this.checkIfDataNeedsUpdate(this.state.data) \r\n        var needsUpdate_ExtraEntered = await this.checkIfDataNeedsUpdate(this.state.extraEnteredLessons);\r\n        var needsUpdate_Extra = await this.state.extraLessons.length > 0\r\n\r\n\r\n\r\n\r\n    if((needsUpdate_regular || needsUpdate_ExtraEntered || needsUpdate_Extra)&&this.state.chosenDate != null){\r\n\r\n        this.setState({changesSaved:true})\r\n        if(this.state.data != null){\r\n            if(this.state.data.length > 0 ){\r\n                isCorrectFormatRegular = await this.checkFormat(this.state.data)\r\n                isRegularLessons = true\r\n            }\r\n        }\r\n\r\n        if(this.state.extraEnteredLessons != null){\r\n            if(this.state.extraEnteredLessons.length > 0 ){\r\n                isCorrectFormatExtraEntered = await this.checkFormat(this.state.extraEnteredLessons)\r\n                isExtraEnteredLessons = true\r\n            }\r\n        }\r\n\r\n        if(this.state.extraLessons != null){\r\n            if(this.state.extraLessons.length > 0 ){\r\n                isCorrectFormatExtra = await this.checkFormat(this.state.extraLessons)\r\n                isExtraLessons = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(isRegularLessons && needsUpdate_regular){\r\n\r\n            if(isCorrectFormatRegular){\r\n\r\n     \r\n            var allLessons = this.state.data.filter((lesson)=>parseFloat(lesson.hours) > 0)\r\n            var extraLessons = this.state.extraLessons\r\n              \r\n        //regular lessons\r\n            allLessons.map((lesson,index)=>{\r\n               \r\n                //update\r\n                if(lesson.delete == true && lesson.alreadyEntered){\r\n                   \r\n                    this.deleteTakenLesson(lesson)\r\n                }else if(lesson.alreadyEntered != true){\r\n                 \r\n                    this.createTakenLesson(lesson)\r\n                }else if(lesson.updateCorrection || lesson.updateHours || lesson.updateLessonType){\r\n                    if(lesson.updateCorrection){\r\n                        this.updateTakenLessonCorrection(lesson.takenId,lesson.correction)\r\n                    }\r\n\r\n                    if(lesson.updateHours){\r\n                        this.updateTakenLessonHours(lesson.takenId,lesson.hours)\r\n                    }\r\n\r\n                    if(lesson.updateLessonType){\r\n                      \r\n                        this.updateTakenLessonType(lesson._id, lesson.takenId, lesson.actualLessonType)\r\n                    }\r\n                }\r\n            \r\n            })\r\n\r\n                \r\n\r\n            }else{\r\n           \r\n                alert('incorrect format, data not sent')\r\n                regSaved = false;\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        if(isExtraEnteredLessons && needsUpdate_ExtraEntered){\r\n            if(isCorrectFormatExtraEntered){\r\n                var allLessons = await this.state.extraEnteredLessons.filter((lesson)=>parseFloat(lesson.hours) > 0)        \r\n    \r\n                //regular lessons\r\n                    allLessons.map((lesson,index)=>{\r\n                        //update\r\n                        if(lesson.delete == true && lesson.alreadyEntered){\r\n                            \r\n                            this.deleteTakenLesson(lesson)\r\n                        }else if(lesson.alreadyEntered != true){\r\n                            this.createTakenLesson(lesson)\r\n                        }else if(lesson.updateCorrection || lesson.updateHours || lesson.updateLessonType){\r\n                            if(lesson.updateCorrection){\r\n                                this.updateTakenLessonCorrection(lesson.takenId,lesson.correction)\r\n                            }\r\n                            if(lesson.updateHours){\r\n                                this.updateTakenLessonHours(lesson.takenId,lesson.hours)\r\n                         \r\n                            }\r\n                            if(lesson.updateLessonType){\r\n                                \r\n                                this.updateTakenLessonType(lesson._id, lesson.takenId, lesson.actualLessonType)\r\n                            }\r\n                        }\r\n                    \r\n                    })\r\n\r\n\r\n           \r\n\r\n            }else{\r\n            \r\n                alert('incorrect format, data not sent')\r\n                enteredExtraSaved = false;\r\n            }\r\n           \r\n        }\r\n\r\n        if(isExtraLessons && needsUpdate_Extra ){\r\n\r\n            if(isCorrectFormatExtra){\r\n              \r\n                this.state.extraLessons.filter((lesson)=>parseFloat(lesson.hours) > 0).map((lesson)=>this.createTakenLesson(lesson));\r\n            }else{           \r\n                alert('incorrect format, data not sent')\r\n                extraSaved = false;\r\n            }\r\n           \r\n           \r\n        }\r\n\r\n\r\n        if(isRegularLessons || isExtraEnteredLessons || isExtraLessons){\r\n\r\n            if(regSaved && extraSaved && enteredExtraSaved){\r\n\r\n                this.setState({justSaved:true})\r\n                \r\n           \r\n                setTimeout(()=>{\r\n                    this.setState({justSaved:false})\r\n                    this.setState({chosenDate:null})\r\n                }\r\n                , 3000);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        \r\n    }else{\r\n\r\n        this.setState({noChanges:true})\r\n           \r\n                setTimeout(()=>\r\n                    this.setState({noChanges:false})\r\n                , 3000);\r\n\r\n    }        \r\n}\r\n    setDate = async (date) =>{\r\n   \r\n             await this.setState({chosenDate:date})\r\n\r\n            await this.setState({dayOfWeek:date.getDay()})\r\n\r\n           \r\n            await this.checkLessons();\r\n          \r\n     \r\n    }\r\n   \r\n    checkLessons = async ()=>{\r\n\r\n    \r\n        await this.setState({data:null})\r\n        await this.setState({extraEnteredLessons:[]})\r\n        await this.setState({extraLessons:null})\r\n        await  this.setState({extraLessons:[]})\r\n        \r\n        var config = await this.props.data.config\r\n        console.log(config)\r\n        await  axios.get('/api/lesson/date/'+formatDate(this.state.chosenDate)\r\n                        +'/'+this.state.teacherId, config)\r\n            .then(response=>{\r\n                var data = response.data              \r\n                this.setState({data:null})\r\n                this.setState({data:data})            \r\n            })  \r\n\r\n\r\n        var dateObj = getDateData(this.state.chosenDate)\r\n\r\n        await  axios.get('/api/taken-lesson/get/'+this.state.teacherId\r\n                     +'/'+formatDate(this.state.chosenDate))\r\n        .then(response=>{\r\n             var data = response.data          \r\n             this.setState({extraEnteredLessons:null})   \r\n             this.setState({extraEnteredLessons:data})        \r\n        })\r\n       \r\n\r\n    }\r\n\r\n    toggleJustExtra = async ()  =>{\r\n        await this.setState({justExtra:!this.state.justExtra})\r\n        if(this.state.justExtra){\r\n            this.setState({justExtraBtnMsg:\"only regular lessons\"})\r\n        }else{\r\n            this.setState({justExtraBtnMsg:\"only extra lessons\"})\r\n            \r\n        }\r\n    }\r\n\r\n    removeRegularLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.data;\r\n            lessons[index].delete = true\r\n           \r\n\r\n            this.setState({data:lessons})\r\n          }\r\n\r\n        if(this.state.showRegularLessonModal){\r\n            this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        }\r\n        \r\n    }\r\n\r\n    removeExtraLesson = (e,index) =>{\r\n                \r\n        if (index > -1) {\r\n            var lessons = this.state.extraLessons;\r\n            lessons.splice(index)\r\n        \r\n            this.setState({extraLessons:lessons})\r\n          }\r\n\r\n        \r\n    }\r\n\r\n    toggleRegularLessonModal = (e,index) =>{\r\n        this.setState({regularLessonModalIndex:index})\r\n        this.setState({showRegularLessonModal:!this.state.showRegularLessonModal})\r\n        \r\n\r\n    }\r\n\r\n    toggleExtraLessonModal = (e,index) =>{\r\n\r\n        if(this.state.chosenDate == null){\r\n            this.setState({errorMessage: \"No date chosen\"})\r\n            this.triggerErrorMessage()            \r\n            return\r\n        }\r\n\r\n        this.setState({extraLessonModalIndex:index})\r\n        this.setState({showExtraLessonModal: !this.state.showExtraLessonModal})\r\n        this.getAllTeacherStudents();\r\n\r\n    }\r\n    toggleChangesNotSavedModal  = (e) =>{\r\n        this.setState({showNotSavedModel:!this.state.showNotSavedModel})\r\n    }\r\n  \r\n\r\n    getAllTeacherStudents = async ()=>{\r\n       \r\n        var options =  { authorization: this.props.token,\r\n            userid:this.props.userId }\r\n\r\n           \r\n            await axios.get('/api/lessons/teacher/notday?id='+this.props.id+'&day='+this.state.dayOfWeek+'&date='+this.state.chosenDate,\r\n            { headers:options })\r\n            .then(response =>{\r\n            var lessons = response.data;\r\n      \r\n            this.setState({allLessons:lessons})\r\n            this.setState({filteredAllLessons:lessons})\r\n\r\n\r\n        })\r\n    }\r\n    setStudentSearch = (e)=>{\r\n        var searchString = e.target.value? e.target.value : \"\"; \r\n        this.setState({searchString:searchString})\r\n        var filtered = this.state.allLessons.filter((item,index)=>(\r\n        \r\n            item.student?.firstName.toLowerCase().includes(searchString.toLowerCase()) ||\r\n            item.student?.lastName.toLowerCase().includes(searchString.toLowerCase())\r\n\r\n        ))\r\n        this.setState({extraLesson:null})\r\n        this.setState({filteredAllLessons:filtered})\r\n\r\n    }\r\n\r\n    setSelected = (lesson) =>{\r\n        this.setState({extraLesson:lesson})\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          tooltipOpen: !this.state.tooltipOpen\r\n        });\r\n    }\r\n\r\n    addToTakenLessonList(e, index){\r\n        var lesson = this.state.data[index];\r\n\r\n        console.log(lesson)\r\n        var takenLessons = this.state.extraEnteredLessons;\r\n        console.log(takenLessons)\r\n        lesson.hours = 1     \r\n\r\n        takenLessons.push(lesson)\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n    }\r\n\r\n    removeFromTakenLessonList(e, index){\r\n      \r\n        var takenLessons = this.state.extraEnteredLessons\r\n        takenLessons.splice(index,1)\r\n\r\n        takenLessons.map((lesson, index)=>{\r\n            let hours = lesson.hours\r\n            lesson.hours = hours\r\n        })\r\n        this.setState({extraEnteredLessons: takenLessons})\r\n        \r\n        this.setState({extraEnteredLessons: this.state.extraEnteredLessons})\r\n    }  \r\n  \r\n    \r\n    render(){\r\n        return(\r\n            <div id=\"EnterDataContainer\" >              \r\n            \r\n\r\n                {\r\n                     this.state.error && this.state.errorMessage?\r\n                     <div className=\"alert alert-danger\" role=\"alert\">\r\n                         {this.state.errorMessage}                         \r\n                     </div>\r\n                 :null\r\n                }\r\n\r\n            \r\n                {\r\n                    this.state.justSaved?\r\n                        <div className=\"alert alert-success\" role=\"alert\">\r\n                            Changed saved!\r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n\r\n\r\n\r\n                {\r\n                    this.state.noChanges?\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {this.state.chosenDate == null?\r\n                            \"no date chosen\"\r\n                            :\"no changes made!\"}\r\n                            \r\n                        </div>\r\n                    :null\r\n                }\r\n\r\n                \r\n                {\r\n                    this.state.matches?\r\n                    <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col-4\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">           \r\n                        <div className='d-inline mb-1 mr-4'>\r\n                            <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add \r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                    Save\r\n                            </button>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n:\r\n                <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col\" >\r\n\r\n                        <div>\r\n                            <div id=\"TooltipExample\" className=\"mb-2\">\r\n                                <DatePicker placeholderText=\"pick a date..\" className=\"form-control\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                minDate={this.state.minDate?this.state.minDate:null}\r\n                                maxDate={this.state.maxDate?this.state.maxDate:null}\r\n                                selected={this.state.chosenDate}\r\n                                onChange={date => this.setDate(date)}/>  \r\n\r\n                            </div>                 \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col\">           \r\n                        <div className='d-inline mb-1 mr-2'>\r\n                            <button className=\"btn btn-outline-primary\" onClick={this.toggleExtraLessonModal}>\r\n                                    Add\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='d-inline mb-3'  >\r\n                            <button className=\"btn btn-outline-success\"  onClick={this.saveAndUpdate}>\r\n                                    Save\r\n                            </button>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                }\r\n               \r\n\r\n          \r\n                \r\n                <div class={\"row \"+  (this.state.matches? \"margin\": \"\")}>\r\n                    <div class=\"col-5 lesson-list\">\r\n                        <table id=\"EnterDataTable\" className=\" table\">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th >\r\n                                        Name\r\n                                    </th>\r\n                                    <th   >\r\n                                        Subject\r\n                                    </th>\r\n                                    <th   >\r\n                                        -\r\n                                    </th>                             \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data?\r\n                                    this.state.data.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>{item.studentFirstName}</td>\r\n                                            <td>{Subjects[item.subject]}</td>\r\n                                            <td><button className='btn btn-success' onClick={(e)=>this.addToTakenLessonList(e,index)}>+</button></td>\r\n                                        </tr>\r\n                                    ))\r\n                                :null}                  \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <table id=\"EnterDataTable\" className=\" table table-responsive table-responsive-otter\">\r\n                            <thead>\r\n                               \r\n                                    <th class=\"col-3\">\r\n                                        Name\r\n                                    </th>\r\n                                    <th  class=\"col-1\" >\r\n                                        Subject\r\n                                    </th>\r\n                                    <th className=\"type-col\">\r\n                                        Type\r\n                                    </th>\r\n                                    <th className='type-col'  >\r\n                                        -\r\n                                    </th>\r\n                                    <th class=\"type-col\"  >\r\n                                        Hours\r\n                                    </th>  \r\n                                    <th class=\"col-1\">\r\n                                        -\r\n                                    </th>                            \r\n                              \r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.extraEnteredLessons?\r\n                                    this.state.extraEnteredLessons.map((item,index)=>(\r\n                                        <tr>\r\n                                            <td>{item.studentFirstName}</td>\r\n                                            <td>{Subjects[item.subject]}</td>\r\n                                            <td >\r\n                                                <div className=\"form-group type-col\">                                        \r\n                                                    <select defaultValue={item.alreadyEntered? item.actualLessonType :item.rateKey?.charAt(1) == \"G\"? 0:1} className=\"form-control\" onChange={(e)=>this.updateLessonType(e,index,false)}>\r\n                                                                                        \r\n                                                    <option value={0} >G</option>\r\n                                                    <option value={1} >1</option>\r\n                                                    </select>                                                 \r\n                                                \r\n                                                </div>\r\n                                            </td>\r\n                                            <td  >\r\n                                            <div className=\"form-group type-col\">\r\n                                            \r\n                                                <select defaultValue={item.correction} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(e)=>this.updateCorrection(e,index,false)}>\r\n                                                                                \r\n                                                                        {Corrections?\r\n                                                                        \r\n                                                                        \r\n                                                                            Corrections.map((item,index)=>(\r\n                                                                                <option key={index} value={index} >{item?.toUpperCase().charAt(0)}</option>\r\n                                                                            ))\r\n                                                                        :\r\n                                                                        <option>error</option>\r\n                                                                        }\r\n                                                </select>                      \r\n                                            </div>                                            \r\n                                            </td>\r\n                                        <td id=\"hours\">\r\n                                            <input key={index} type=\"number\"  maxLength=\"3\" className=\"form-control type-col\"  defaultValue={item.hours?item.hours:null} style={item.prevHours != item.hours? {background:'lightgreen'} :null} onChange={(e)=>{this.updateHours(e,index)}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className='btn btn-danger' onClick={(e)=>this.removeFromTakenLessonList(e,index)}>x</button></td>\r\n                                        </tr>\r\n                                    ))\r\n                                :null}                   \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>           \r\n                   \r\n                    <Modal isOpen={this.state.showRegularLessonModal} toggle={this.toggleRegularLessonModal} >\r\n                        <ModalHeader >You are about to remove a lesson</ModalHeader>\r\n                        <ModalBody>\r\n                           the lesson will be removed for today, to remove permenantly please contact an admin, providing the student's name and subject\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={(e)=>this.removeRegularLesson(e,this.state.regularLessonModalIndex)}>Remove Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleRegularLessonModal}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.showExtraLessonModal} toggle={this.toggleExtraLessonModal} >\r\n                        <ModalHeader >You are about to add an extra lesson</ModalHeader>\r\n                        <ModalBody>\r\n                        {\r\n                            this.state.modalError && this.state.modalErrorMessage?\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {this.state.modalErrorMessage}                         \r\n                            </div>\r\n                        :null\r\n                        }\r\n\r\n                       \r\n                        <label for=\"inputEmail4\">Student</label>\r\n                        <input value={this.state.extraLesson?this.state.extraLesson.student?.firstName +\" \":null} className=\"form-control\" onChange={this.setStudentSearch} placeholder=\"search for students ...\"/>\r\n                        <div id=\"AddExtraLessonModal\" class=\"mb-3 mt-3\">\r\n                            <Button color=\"primary\" onClick={(e)=>this.addExtraLesson(this.state.extraLesson)}>Add Extra Lesson</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleExtraLessonModal}>Cancel</Button>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"col\" style={{cursor:'pointer'}}\r\n                         size={this.state.filteredAllLessons?.length} onChange={this.setStudent}  style={{display:this.state.showStudentList}}>\r\n                            \r\n                            {this.state.filteredAllLessons != null?this.state.filteredAllLessons.map((item,index)=>(\r\n\r\n                                \r\n                               <AllLessonsRow\r\n                                item={item}\r\n                                index={index}\r\n                                key={index}\r\n                                addExtraLesson = {this.addExtraLesson}\r\n                                setSelected = {this.setSelected}\r\n                               />\r\n\r\n                            )):null}\r\n                        </div> \r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            \r\n                        </ModalFooter>\r\n      \r\n                    </Modal>               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Register);","C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AddNewStudents2.js",["956","957"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessons.js",["958","959","960","961"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceStatusTable.js",["962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceTable2.js",["987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2Admin.js",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\PreInvoiceTable2.js",["1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Invoicing\\InvoiceReport.js",["1080","1081","1082"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\ParentRecords.js",["1083","1084"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Emailing\\EmailPanel.js",["1085","1086","1087","1088","1089","1090","1091","1092","1093","1094"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\MonthlyReport.js",["1095"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Payments\\PaymentPanel.js",["1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\StudentRecords.js",["1117","1118","1119"],"import react ,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport StudentRecordsRow from './StudentRecordsRow'\r\nimport qs from 'qs'\r\n\r\nclass StudentRecords extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sortBy:null,\r\n            skip:0,\r\n            students:null,\r\n            filteredStudents:null,\r\n            sid:null,\r\n            searchString: \"\",\r\n            options :{ authorization: this.props.token,userid:this.props.userId } }\r\n    }\r\n\r\n    componentDidMount =  async ()=>{\r\n        var queryString = await qs.parse(window.location.search, { ignoreQueryPrefix: true })\r\n        var sid = await queryString.sid? queryString.sid : null\r\n        if(sid != null){\r\n            this.setState({sid:sid})\r\n            await this.getData();\r\n        }\r\n    }\r\n\r\n    getData = async () =>{\r\n\r\n        if(this.state.sid != null){\r\n\r\n            await axios.get('/api/student/'+this.state.sid,\r\n            this.props.data.config)\r\n            .then(async response => {\r\n                 var data = await response.data;\r\n                    console.log(data)\r\n                 this.setState({students:data})\r\n                 this.setState({filteredStudents:data})\r\n               \r\n             \r\n            });  \r\n\r\n        }else{\r\n\r\n        await axios.get('/api/students/search?searchString='+this.state.searchString,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(\"search\")\r\n             this.setState({students:data})\r\n             this.setState({filteredStudents:data})\r\n           \r\n         \r\n        });\r\n\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    deleteStudent = async (studentId,index) =>{\r\n        console.log(index)\r\n        var students = this.state.filteredStudents;\r\n\r\n        await axios.delete('/api/students?id='+studentId,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(data)           \r\n         \r\n        });\r\n\r\n        students.splice(index,1)\r\n        this.setState({students:students})\r\n\r\n\r\n    }\r\n\r\n\r\n    filter = async (e) =>{\r\n        var filter = e.target.value\r\n        this.setState({searchString: e.target.value})\r\n        \r\n        await axios.get('/api/students/search?searchString='+this.state.searchString,\r\n        {headers:this.state.options})\r\n        .then(async response => {\r\n             var data = await response.data;\r\n             console.log(\"search\")\r\n             this.setState({students:data})\r\n             this.setState({filteredStudents:data})\r\n           \r\n         \r\n        });\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Student Records</h1>\r\n                <div>\r\n                    <label>Sort By</label>\r\n                    <select className=\"form-control form-select\" onChange={e=>this.setState({sortBy:e.target.value})}>\r\n                        <option selected>Open this select menu</option>\r\n                        <option value=\"firstName\">first name</option>\r\n                        <option value=\"lastName\">last name</option>\r\n                        <option value=\"3\">school</option>\r\n                    </select>\r\n                </div>\r\n                {\r\n     \r\n                    <div className=\"mt-4 mb-3\">\r\n                   <input className=\"form-control\" placeholder=\"start typing..\" onChange={this.filter}/>\r\n                </div>\r\n                  \r\n\r\n                }\r\n                \r\n              \r\n                <table class=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">discount</th>\r\n                        <th scope=\"col\">Payment type</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        <th scope=\"col\">-</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {this.state.filteredStudents?\r\n                        this.state.filteredStudents.map((student,index)=>(\r\n\r\n                            student.firstName != \"deleted\"?\r\n\r\n                            <   StudentRecordsRow \r\n                                options={this.state.options}\r\n                                student={student}\r\n                                deleteStudent={this.deleteStudent}\r\n                            \r\n                                index={index}\r\n                           />\r\n                            :null\r\n                          \r\n                        ))\r\n                       :null}\r\n                    </tbody>\r\n                    </table>\r\n                    {\r\n                     \r\n                        \r\n                        // <div className=\"row\">\r\n                        //     <div className=\"col\">\r\n                        //         <button disabled={this.state.students == null || this.state.skip ==0 } className=\"btn btn-primary\" onClick={this.prev}>prev</button>\r\n        \r\n                        //     </div>\r\n                        //     <div className=\"col\">\r\n                        //         <button disabled={this.state.students == null || this.state.students?.length == 0} className=\"btn btn-primary\" onClick={this.next}>next</button>\r\n                        //     </div>\r\n    \r\n                        // </div>                     \r\n                        \r\n                        \r\n           \r\n                    \r\n                 }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentRecords","C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\OmegaPanel.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Teachers\\AllTeachers.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\HackLesson.js",["1120"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\Queries.js",["1121","1122","1123"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\PreviewInvoiceData.js",["1124","1125","1126"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\InvoiceDetails.js",["1127","1128"],"C:\\git\\kappaClient\\kappaclient\\src\\Auth0\\authentication-guard.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\HackRegister.js",["1129"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\PreviewSingleInvoiceData.js",["1130","1131","1132"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\AllLessonsRow.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\LogoutButton.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\Constants.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\AddLessonForm.js",["1133","1134","1135"],"C:\\git\\kappaClient\\kappaclient\\src\\Helper.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\BaseComponent.js",["1136","1137"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Register.js",["1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Auth\\LoginButton.js",["1162","1163"],"C:\\git\\kappaClient\\kappaclient\\src\\Auth0\\page-loader.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Omega\\MyLessons.js",["1164","1165","1166","1167","1168"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Subjects.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\StudentRecordsRow.js",["1169"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\LessonType.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\ParentRecordsRow.js",["1170","1171"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Corrections.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Prices.js",["1172"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\PaymentTypes.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\YearGroup.js",["1173"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Months.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\Days.js",["1174"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Enums\\InvoiceTypes.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditStudentTakenLessonRow.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\EditTakenLessonForm.js",["1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188"],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\TakenLessons\\AddTakenLessonForm.js",[],"C:\\git\\kappaClient\\kappaclient\\src\\components\\Admin\\Reports\\AddNewStudentForm.js",[],{"ruleId":"1189","severity":1,"message":"1190","line":8,"column":7,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":28},{"ruleId":"1189","severity":1,"message":"1193","line":9,"column":7,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":31},{"ruleId":"1189","severity":1,"message":"1194","line":10,"column":7,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1195","line":11,"column":7,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":15},{"ruleId":"1196","replacedBy":"1197"},{"ruleId":"1198","replacedBy":"1199"},{"ruleId":"1189","severity":1,"message":"1200","line":35,"column":10,"nodeType":"1191","messageId":"1192","endLine":35,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1201","line":42,"column":57,"nodeType":"1191","messageId":"1192","endLine":42,"endColumn":63},{"ruleId":"1202","severity":1,"message":"1203","line":53,"column":7,"nodeType":"1191","messageId":"1204","endLine":53,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1205","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":12},{"ruleId":"1189","severity":1,"message":"1206","line":3,"column":8,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1207","line":12,"column":8,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":16},{"ruleId":"1208","severity":1,"message":"1209","line":233,"column":16,"nodeType":"1210","messageId":"1211","endLine":233,"endColumn":18},{"ruleId":"1212","severity":1,"message":"1213","line":284,"column":35,"nodeType":"1214","messageId":"1215","endLine":284,"endColumn":37},{"ruleId":"1212","severity":1,"message":"1213","line":301,"column":40,"nodeType":"1214","messageId":"1215","endLine":301,"endColumn":42},{"ruleId":"1212","severity":1,"message":"1213","line":302,"column":37,"nodeType":"1214","messageId":"1215","endLine":302,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":331,"column":36,"nodeType":"1210","messageId":"1211","endLine":331,"endColumn":38},{"ruleId":"1208","severity":1,"message":"1209","line":394,"column":35,"nodeType":"1210","messageId":"1211","endLine":394,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1209","line":519,"column":35,"nodeType":"1210","messageId":"1211","endLine":519,"endColumn":37},{"ruleId":"1216","severity":1,"message":"1217","line":2,"column":16,"nodeType":"1218","messageId":"1219","endLine":2,"endColumn":28},{"ruleId":"1189","severity":1,"message":"1220","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":18},{"ruleId":"1216","severity":1,"message":"1217","line":1,"column":18,"nodeType":"1218","messageId":"1219","endLine":1,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":1,"column":14,"nodeType":"1218","messageId":"1219","endLine":1,"endColumn":26},{"ruleId":"1189","severity":1,"message":"1221","line":4,"column":21,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":36,"column":23,"nodeType":"1210","messageId":"1211","endLine":36,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":96,"column":21,"nodeType":"1210","messageId":"1211","endLine":96,"endColumn":23},{"ruleId":"1208","severity":1,"message":"1209","line":100,"column":27,"nodeType":"1210","messageId":"1211","endLine":100,"endColumn":29},{"ruleId":"1189","severity":1,"message":"1222","line":5,"column":52,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":61},{"ruleId":"1208","severity":1,"message":"1209","line":20,"column":12,"nodeType":"1210","messageId":"1211","endLine":20,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":9,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":18},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":113,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":115},{"ruleId":"1189","severity":1,"message":"1223","line":182,"column":21,"nodeType":"1191","messageId":"1192","endLine":182,"endColumn":29},{"ruleId":"1189","severity":1,"message":"1224","line":10,"column":8,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":95,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":97},{"ruleId":"1208","severity":1,"message":"1209","line":234,"column":94,"nodeType":"1210","messageId":"1211","endLine":234,"endColumn":96},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1226","severity":1,"message":"1227","line":6,"column":5,"nodeType":"1228","messageId":"1229","endLine":9,"endColumn":6},{"ruleId":"1196","replacedBy":"1230"},{"ruleId":"1198","replacedBy":"1231"},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":15,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1232","line":2,"column":10,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":16},{"ruleId":"1233","severity":1,"message":"1234","line":274,"column":97,"nodeType":"1235","messageId":"1236","endLine":274,"endColumn":141},{"ruleId":"1189","severity":1,"message":"1237","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1238","line":3,"column":18,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1239","line":3,"column":25,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":36},{"ruleId":"1189","severity":1,"message":"1240","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1241","line":7,"column":8,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":12},{"ruleId":"1208","severity":1,"message":"1242","line":69,"column":39,"nodeType":"1210","messageId":"1211","endLine":69,"endColumn":41},{"ruleId":"1208","severity":1,"message":"1209","line":157,"column":76,"nodeType":"1210","messageId":"1211","endLine":157,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":158,"column":56,"nodeType":"1210","messageId":"1211","endLine":158,"endColumn":58},{"ruleId":"1208","severity":1,"message":"1209","line":181,"column":61,"nodeType":"1210","messageId":"1211","endLine":181,"endColumn":63},{"ruleId":"1208","severity":1,"message":"1209","line":203,"column":58,"nodeType":"1210","messageId":"1211","endLine":203,"endColumn":60},{"ruleId":"1208","severity":1,"message":"1209","line":226,"column":62,"nodeType":"1210","messageId":"1211","endLine":226,"endColumn":64},{"ruleId":"1208","severity":1,"message":"1209","line":241,"column":56,"nodeType":"1210","messageId":"1211","endLine":241,"endColumn":58},{"ruleId":"1208","severity":1,"message":"1209","line":255,"column":55,"nodeType":"1210","messageId":"1211","endLine":255,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":271,"column":56,"nodeType":"1210","messageId":"1211","endLine":271,"endColumn":58},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1243","line":7,"column":8,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":8,"column":1,"nodeType":"1246","messageId":"1211","endLine":11,"endColumn":2},{"ruleId":"1208","severity":1,"message":"1209","line":73,"column":33,"nodeType":"1210","messageId":"1211","endLine":73,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":76,"column":32,"nodeType":"1210","messageId":"1211","endLine":76,"endColumn":34},{"ruleId":"1212","severity":1,"message":"1213","line":119,"column":39,"nodeType":"1214","messageId":"1215","endLine":119,"endColumn":41},{"ruleId":"1208","severity":1,"message":"1242","line":288,"column":66,"nodeType":"1210","messageId":"1211","endLine":288,"endColumn":68},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1212","severity":1,"message":"1213","line":64,"column":41,"nodeType":"1214","messageId":"1215","endLine":64,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":94,"column":77,"nodeType":"1210","messageId":"1211","endLine":94,"endColumn":79},{"ruleId":"1212","severity":1,"message":"1213","line":106,"column":48,"nodeType":"1214","messageId":"1215","endLine":106,"endColumn":50},{"ruleId":"1212","severity":1,"message":"1213","line":124,"column":56,"nodeType":"1214","messageId":"1215","endLine":124,"endColumn":58},{"ruleId":"1189","severity":1,"message":"1247","line":143,"column":13,"nodeType":"1191","messageId":"1192","endLine":143,"endColumn":16},{"ruleId":"1212","severity":1,"message":"1213","line":251,"column":48,"nodeType":"1214","messageId":"1215","endLine":251,"endColumn":50},{"ruleId":"1212","severity":1,"message":"1213","line":255,"column":60,"nodeType":"1214","messageId":"1215","endLine":255,"endColumn":62},{"ruleId":"1208","severity":1,"message":"1209","line":359,"column":44,"nodeType":"1210","messageId":"1211","endLine":359,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1242","line":388,"column":44,"nodeType":"1210","messageId":"1211","endLine":388,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1209","line":400,"column":71,"nodeType":"1210","messageId":"1211","endLine":400,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":412,"column":43,"nodeType":"1210","messageId":"1211","endLine":412,"endColumn":45},{"ruleId":"1196","replacedBy":"1248"},{"ruleId":"1198","replacedBy":"1249"},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1196","replacedBy":"1250"},{"ruleId":"1198","replacedBy":"1251"},{"ruleId":"1189","severity":1,"message":"1252","line":2,"column":49,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":57},{"ruleId":"1196","replacedBy":"1253"},{"ruleId":"1198","replacedBy":"1254"},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1208","severity":1,"message":"1242","line":80,"column":75,"nodeType":"1210","messageId":"1211","endLine":80,"endColumn":77},{"ruleId":"1208","severity":1,"message":"1242","line":96,"column":74,"nodeType":"1210","messageId":"1211","endLine":96,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":113,"column":36,"nodeType":"1210","messageId":"1211","endLine":113,"endColumn":38},{"ruleId":"1212","severity":1,"message":"1213","line":114,"column":62,"nodeType":"1214","messageId":"1215","endLine":114,"endColumn":64},{"ruleId":"1212","severity":1,"message":"1213","line":119,"column":60,"nodeType":"1214","messageId":"1215","endLine":119,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":126,"column":29,"nodeType":"1214","messageId":"1215","endLine":126,"endColumn":31},{"ruleId":"1212","severity":1,"message":"1213","line":159,"column":31,"nodeType":"1214","messageId":"1215","endLine":159,"endColumn":33},{"ruleId":"1208","severity":1,"message":"1209","line":228,"column":45,"nodeType":"1210","messageId":"1211","endLine":228,"endColumn":47},{"ruleId":"1208","severity":1,"message":"1209","line":250,"column":45,"nodeType":"1210","messageId":"1211","endLine":250,"endColumn":47},{"ruleId":"1189","severity":1,"message":"1255","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":23},{"ruleId":"1202","severity":1,"message":"1256","line":75,"column":17,"nodeType":"1191","messageId":"1204","endLine":75,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1242","line":169,"column":42,"nodeType":"1210","messageId":"1211","endLine":169,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":170,"column":43,"nodeType":"1210","messageId":"1211","endLine":170,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":176,"column":49,"nodeType":"1210","messageId":"1211","endLine":176,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":201,"column":57,"nodeType":"1210","messageId":"1211","endLine":201,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":206,"column":55,"nodeType":"1210","messageId":"1211","endLine":206,"endColumn":57},{"ruleId":"1202","severity":1,"message":"1257","line":207,"column":17,"nodeType":"1191","messageId":"1204","endLine":207,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":245,"column":74,"nodeType":"1210","messageId":"1211","endLine":245,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":283,"column":81,"nodeType":"1210","messageId":"1211","endLine":283,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":288,"column":17,"nodeType":"1191","messageId":"1204","endLine":288,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":288,"column":77,"nodeType":"1210","messageId":"1211","endLine":288,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":293,"column":21,"nodeType":"1191","messageId":"1204","endLine":293,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":293,"column":81,"nodeType":"1210","messageId":"1211","endLine":293,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":336,"column":64,"nodeType":"1210","messageId":"1211","endLine":336,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":347,"column":63,"nodeType":"1210","messageId":"1211","endLine":347,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":348,"column":63,"nodeType":"1210","messageId":"1211","endLine":348,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":349,"column":63,"nodeType":"1210","messageId":"1211","endLine":349,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":350,"column":63,"nodeType":"1210","messageId":"1211","endLine":350,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":467,"column":106,"nodeType":"1210","messageId":"1211","endLine":467,"endColumn":108},{"ruleId":"1208","severity":1,"message":"1242","line":540,"column":76,"nodeType":"1210","messageId":"1211","endLine":540,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":101,"column":203,"nodeType":"1210","messageId":"1211","endLine":101,"endColumn":205},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1208","severity":1,"message":"1242","line":64,"column":28,"nodeType":"1210","messageId":"1211","endLine":64,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1259","line":101,"column":13,"nodeType":"1191","messageId":"1192","endLine":101,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1242","line":161,"column":47,"nodeType":"1210","messageId":"1211","endLine":161,"endColumn":49},{"ruleId":"1189","severity":1,"message":"1260","line":13,"column":10,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":23},{"ruleId":"1208","severity":1,"message":"1209","line":518,"column":48,"nodeType":"1210","messageId":"1211","endLine":518,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1208","severity":1,"message":"1242","line":32,"column":28,"nodeType":"1210","messageId":"1211","endLine":32,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1242","line":118,"column":46,"nodeType":"1210","messageId":"1211","endLine":118,"endColumn":48},{"ruleId":"1261","severity":1,"message":"1262","line":109,"column":29,"nodeType":"1263","endLine":109,"endColumn":97},{"ruleId":"1261","severity":1,"message":"1262","line":115,"column":29,"nodeType":"1263","endLine":115,"endColumn":88},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1264","line":5,"column":27,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":39},{"ruleId":"1189","severity":1,"message":"1265","line":7,"column":24,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":37},{"ruleId":"1244","severity":1,"message":"1245","line":10,"column":1,"nodeType":"1246","messageId":"1211","endLine":13,"endColumn":2},{"ruleId":"1212","severity":1,"message":"1213","line":90,"column":24,"nodeType":"1214","messageId":"1215","endLine":90,"endColumn":26},{"ruleId":"1208","severity":1,"message":"1242","line":92,"column":28,"nodeType":"1210","messageId":"1211","endLine":92,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1213","line":133,"column":51,"nodeType":"1214","messageId":"1215","endLine":133,"endColumn":53},{"ruleId":"1212","severity":1,"message":"1213","line":158,"column":41,"nodeType":"1214","messageId":"1215","endLine":158,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":214,"column":77,"nodeType":"1210","messageId":"1211","endLine":214,"endColumn":79},{"ruleId":"1208","severity":1,"message":"1242","line":234,"column":71,"nodeType":"1210","messageId":"1211","endLine":234,"endColumn":73},{"ruleId":"1202","severity":1,"message":"1266","line":304,"column":25,"nodeType":"1191","messageId":"1204","endLine":304,"endColumn":39},{"ruleId":"1202","severity":1,"message":"1266","line":316,"column":25,"nodeType":"1191","messageId":"1204","endLine":316,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":341,"column":76,"nodeType":"1210","messageId":"1211","endLine":341,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1242","line":349,"column":74,"nodeType":"1210","messageId":"1211","endLine":349,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1242","line":356,"column":73,"nodeType":"1210","messageId":"1211","endLine":356,"endColumn":75},{"ruleId":"1208","severity":1,"message":"1209","line":357,"column":49,"nodeType":"1210","messageId":"1211","endLine":357,"endColumn":51},{"ruleId":"1212","severity":1,"message":"1213","line":425,"column":31,"nodeType":"1214","messageId":"1215","endLine":425,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1267","line":430,"column":17,"nodeType":"1191","messageId":"1192","endLine":430,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1209","line":436,"column":50,"nodeType":"1210","messageId":"1211","endLine":436,"endColumn":52},{"ruleId":"1189","severity":1,"message":"1268","line":485,"column":15,"nodeType":"1191","messageId":"1192","endLine":485,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":489,"column":37,"nodeType":"1214","messageId":"1215","endLine":489,"endColumn":39},{"ruleId":"1212","severity":1,"message":"1213","line":509,"column":48,"nodeType":"1214","messageId":"1215","endLine":509,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1268","line":571,"column":15,"nodeType":"1191","messageId":"1192","endLine":571,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":574,"column":37,"nodeType":"1214","messageId":"1215","endLine":574,"endColumn":39},{"ruleId":"1212","severity":1,"message":"1213","line":589,"column":48,"nodeType":"1214","messageId":"1215","endLine":589,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1268","line":640,"column":15,"nodeType":"1191","messageId":"1192","endLine":640,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":663,"column":47,"nodeType":"1214","messageId":"1215","endLine":663,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1213","line":670,"column":60,"nodeType":"1214","messageId":"1215","endLine":670,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":704,"column":60,"nodeType":"1214","messageId":"1215","endLine":704,"endColumn":62},{"ruleId":"1208","severity":1,"message":"1209","line":745,"column":47,"nodeType":"1210","messageId":"1211","endLine":745,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1242","line":745,"column":76,"nodeType":"1210","messageId":"1211","endLine":745,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":748,"column":47,"nodeType":"1210","messageId":"1211","endLine":748,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":751,"column":47,"nodeType":"1210","messageId":"1211","endLine":751,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":799,"column":96,"nodeType":"1210","messageId":"1211","endLine":799,"endColumn":98},{"ruleId":"1208","severity":1,"message":"1242","line":850,"column":87,"nodeType":"1210","messageId":"1211","endLine":850,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":853,"column":87,"nodeType":"1210","messageId":"1211","endLine":853,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":856,"column":87,"nodeType":"1210","messageId":"1211","endLine":856,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":858,"column":87,"nodeType":"1210","messageId":"1211","endLine":858,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1209","line":866,"column":44,"nodeType":"1210","messageId":"1211","endLine":866,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1209","line":913,"column":44,"nodeType":"1210","messageId":"1211","endLine":913,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1242","line":955,"column":43,"nodeType":"1210","messageId":"1211","endLine":955,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1242","line":955,"column":74,"nodeType":"1210","messageId":"1211","endLine":955,"endColumn":76},{"ruleId":"1233","severity":1,"message":"1234","line":958,"column":67,"nodeType":"1235","messageId":"1236","endLine":958,"endColumn":96},{"ruleId":"1208","severity":1,"message":"1209","line":1147,"column":93,"nodeType":"1210","messageId":"1211","endLine":1147,"endColumn":95},{"ruleId":"1244","severity":1,"message":"1245","line":8,"column":1,"nodeType":"1246","messageId":"1211","endLine":11,"endColumn":2},{"ruleId":"1189","severity":1,"message":"1269","line":13,"column":7,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":15},{"ruleId":"1212","severity":1,"message":"1213","line":80,"column":24,"nodeType":"1214","messageId":"1215","endLine":80,"endColumn":26},{"ruleId":"1208","severity":1,"message":"1242","line":82,"column":28,"nodeType":"1210","messageId":"1211","endLine":82,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1213","line":121,"column":51,"nodeType":"1214","messageId":"1215","endLine":121,"endColumn":53},{"ruleId":"1212","severity":1,"message":"1213","line":144,"column":41,"nodeType":"1214","messageId":"1215","endLine":144,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":189,"column":77,"nodeType":"1210","messageId":"1211","endLine":189,"endColumn":79},{"ruleId":"1208","severity":1,"message":"1242","line":209,"column":71,"nodeType":"1210","messageId":"1211","endLine":209,"endColumn":73},{"ruleId":"1212","severity":1,"message":"1213","line":221,"column":48,"nodeType":"1214","messageId":"1215","endLine":221,"endColumn":50},{"ruleId":"1212","severity":1,"message":"1213","line":261,"column":56,"nodeType":"1214","messageId":"1215","endLine":261,"endColumn":58},{"ruleId":"1212","severity":1,"message":"1213","line":292,"column":41,"nodeType":"1214","messageId":"1215","endLine":292,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1209","line":293,"column":69,"nodeType":"1210","messageId":"1211","endLine":293,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1266","line":373,"column":25,"nodeType":"1191","messageId":"1204","endLine":373,"endColumn":39},{"ruleId":"1202","severity":1,"message":"1266","line":384,"column":25,"nodeType":"1191","messageId":"1204","endLine":384,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":424,"column":61,"nodeType":"1210","messageId":"1211","endLine":424,"endColumn":63},{"ruleId":"1212","severity":1,"message":"1213","line":492,"column":31,"nodeType":"1214","messageId":"1215","endLine":492,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1268","line":558,"column":15,"nodeType":"1191","messageId":"1192","endLine":558,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":568,"column":47,"nodeType":"1214","messageId":"1215","endLine":568,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1213","line":573,"column":60,"nodeType":"1214","messageId":"1215","endLine":573,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":605,"column":60,"nodeType":"1214","messageId":"1215","endLine":605,"endColumn":62},{"ruleId":"1208","severity":1,"message":"1209","line":646,"column":47,"nodeType":"1210","messageId":"1211","endLine":646,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1242","line":646,"column":76,"nodeType":"1210","messageId":"1211","endLine":646,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":649,"column":47,"nodeType":"1210","messageId":"1211","endLine":649,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":652,"column":47,"nodeType":"1210","messageId":"1211","endLine":652,"endColumn":49},{"ruleId":"1189","severity":1,"message":"1270","line":689,"column":13,"nodeType":"1191","messageId":"1192","endLine":689,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1202","severity":1,"message":"1271","line":60,"column":17,"nodeType":"1191","messageId":"1204","endLine":60,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":79,"column":33,"nodeType":"1210","messageId":"1211","endLine":79,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":82,"column":32,"nodeType":"1210","messageId":"1211","endLine":82,"endColumn":34},{"ruleId":"1208","severity":1,"message":"1242","line":116,"column":28,"nodeType":"1210","messageId":"1211","endLine":116,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1209","line":142,"column":23,"nodeType":"1210","messageId":"1211","endLine":142,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":148,"column":29,"nodeType":"1210","messageId":"1211","endLine":148,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":164,"column":18,"nodeType":"1210","messageId":"1211","endLine":164,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1242","line":178,"column":23,"nodeType":"1210","messageId":"1211","endLine":178,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1242","line":204,"column":35,"nodeType":"1210","messageId":"1211","endLine":204,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1242","line":238,"column":29,"nodeType":"1210","messageId":"1211","endLine":238,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":279,"column":71,"nodeType":"1210","messageId":"1211","endLine":279,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":279,"column":101,"nodeType":"1210","messageId":"1211","endLine":279,"endColumn":103},{"ruleId":"1208","severity":1,"message":"1209","line":279,"column":136,"nodeType":"1210","messageId":"1211","endLine":279,"endColumn":138},{"ruleId":"1189","severity":1,"message":"1272","line":350,"column":17,"nodeType":"1191","messageId":"1192","endLine":350,"endColumn":29},{"ruleId":"1212","severity":1,"message":"1213","line":353,"column":42,"nodeType":"1214","messageId":"1215","endLine":353,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":356,"column":34,"nodeType":"1210","messageId":"1211","endLine":356,"endColumn":36},{"ruleId":"1208","severity":1,"message":"1242","line":359,"column":48,"nodeType":"1210","messageId":"1211","endLine":359,"endColumn":50},{"ruleId":"1202","severity":1,"message":"1273","line":392,"column":21,"nodeType":"1191","messageId":"1204","endLine":392,"endColumn":31},{"ruleId":"1212","severity":1,"message":"1213","line":395,"column":50,"nodeType":"1214","messageId":"1215","endLine":395,"endColumn":52},{"ruleId":"1208","severity":1,"message":"1209","line":397,"column":42,"nodeType":"1210","messageId":"1211","endLine":397,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1242","line":400,"column":56,"nodeType":"1210","messageId":"1211","endLine":400,"endColumn":58},{"ruleId":"1208","severity":1,"message":"1242","line":734,"column":78,"nodeType":"1210","messageId":"1211","endLine":734,"endColumn":80},{"ruleId":"1208","severity":1,"message":"1209","line":735,"column":80,"nodeType":"1210","messageId":"1211","endLine":735,"endColumn":82},{"ruleId":"1208","severity":1,"message":"1209","line":744,"column":128,"nodeType":"1210","messageId":"1211","endLine":744,"endColumn":130},{"ruleId":"1208","severity":1,"message":"1242","line":775,"column":187,"nodeType":"1210","messageId":"1211","endLine":775,"endColumn":189},{"ruleId":"1208","severity":1,"message":"1242","line":811,"column":73,"nodeType":"1210","messageId":"1211","endLine":811,"endColumn":75},{"ruleId":"1208","severity":1,"message":"1209","line":821,"column":50,"nodeType":"1210","messageId":"1211","endLine":821,"endColumn":52},{"ruleId":"1208","severity":1,"message":"1242","line":845,"column":145,"nodeType":"1210","messageId":"1211","endLine":845,"endColumn":147},{"ruleId":"1208","severity":1,"message":"1209","line":885,"column":50,"nodeType":"1210","messageId":"1211","endLine":885,"endColumn":52},{"ruleId":"1233","severity":1,"message":"1234","line":949,"column":99,"nodeType":"1235","endLine":949,"endColumn":143},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":6,"column":1,"nodeType":"1246","messageId":"1211","endLine":9,"endColumn":2},{"ruleId":"1208","severity":1,"message":"1209","line":39,"column":33,"nodeType":"1210","messageId":"1211","endLine":39,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":42,"column":32,"nodeType":"1210","messageId":"1211","endLine":42,"endColumn":34},{"ruleId":"1212","severity":1,"message":"1213","line":83,"column":39,"nodeType":"1214","messageId":"1215","endLine":83,"endColumn":41},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":6,"column":1,"nodeType":"1246","messageId":"1211","endLine":10,"endColumn":2},{"ruleId":"1202","severity":1,"message":"1274","line":52,"column":17,"nodeType":"1191","messageId":"1204","endLine":52,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1275","line":3,"column":61,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":67},{"ruleId":"1202","severity":1,"message":"1271","line":65,"column":17,"nodeType":"1191","messageId":"1204","endLine":65,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1271","line":71,"column":13,"nodeType":"1191","messageId":"1204","endLine":71,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":19,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":31,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":33},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":43,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":55,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":120,"column":33,"nodeType":"1210","messageId":"1211","endLine":120,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":123,"column":32,"nodeType":"1210","messageId":"1211","endLine":123,"endColumn":34},{"ruleId":"1208","severity":1,"message":"1242","line":180,"column":28,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1209","line":200,"column":23,"nodeType":"1210","messageId":"1211","endLine":200,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":206,"column":29,"nodeType":"1210","messageId":"1211","endLine":206,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":222,"column":18,"nodeType":"1210","messageId":"1211","endLine":222,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1242","line":232,"column":23,"nodeType":"1210","messageId":"1211","endLine":232,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1242","line":258,"column":35,"nodeType":"1210","messageId":"1211","endLine":258,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1242","line":292,"column":29,"nodeType":"1210","messageId":"1211","endLine":292,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":71,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":101,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":103},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":136,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":138},{"ruleId":"1212","severity":1,"message":"1213","line":569,"column":41,"nodeType":"1214","messageId":"1215","endLine":569,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":753,"column":196,"nodeType":"1210","messageId":"1211","endLine":753,"endColumn":198},{"ruleId":"1208","severity":1,"message":"1209","line":813,"column":72,"nodeType":"1210","messageId":"1211","endLine":813,"endColumn":74},{"ruleId":"1208","severity":1,"message":"1209","line":872,"column":72,"nodeType":"1210","messageId":"1211","endLine":872,"endColumn":74},{"ruleId":"1233","severity":1,"message":"1234","line":932,"column":99,"nodeType":"1235","messageId":"1236","endLine":932,"endColumn":143},{"ruleId":"1189","severity":1,"message":"1276","line":3,"column":62,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":69},{"ruleId":"1202","severity":1,"message":"1256","line":97,"column":17,"nodeType":"1191","messageId":"1204","endLine":97,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1277","line":135,"column":17,"nodeType":"1191","messageId":"1192","endLine":135,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1278","line":155,"column":17,"nodeType":"1191","messageId":"1192","endLine":155,"endColumn":31},{"ruleId":"1202","severity":1,"message":"1279","line":174,"column":13,"nodeType":"1191","messageId":"1204","endLine":174,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1280","line":175,"column":13,"nodeType":"1191","messageId":"1204","endLine":175,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1281","line":198,"column":13,"nodeType":"1191","messageId":"1192","endLine":198,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1282","line":249,"column":23,"nodeType":"1191","messageId":"1192","endLine":249,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1242","line":379,"column":42,"nodeType":"1210","messageId":"1211","endLine":379,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":380,"column":43,"nodeType":"1210","messageId":"1211","endLine":380,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":386,"column":49,"nodeType":"1210","messageId":"1211","endLine":386,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":408,"column":57,"nodeType":"1210","messageId":"1211","endLine":408,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":413,"column":55,"nodeType":"1210","messageId":"1211","endLine":413,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":460,"column":74,"nodeType":"1210","messageId":"1211","endLine":460,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":545,"column":81,"nodeType":"1210","messageId":"1211","endLine":545,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":550,"column":17,"nodeType":"1191","messageId":"1204","endLine":550,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":550,"column":77,"nodeType":"1210","messageId":"1211","endLine":550,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":555,"column":21,"nodeType":"1191","messageId":"1204","endLine":555,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":555,"column":81,"nodeType":"1210","messageId":"1211","endLine":555,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":722,"column":64,"nodeType":"1210","messageId":"1211","endLine":722,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":731,"column":63,"nodeType":"1210","messageId":"1211","endLine":731,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":732,"column":63,"nodeType":"1210","messageId":"1211","endLine":732,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":733,"column":63,"nodeType":"1210","messageId":"1211","endLine":733,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":734,"column":63,"nodeType":"1210","messageId":"1211","endLine":734,"endColumn":65},{"ruleId":"1212","severity":1,"message":"1213","line":823,"column":65,"nodeType":"1214","messageId":"1215","endLine":823,"endColumn":67},{"ruleId":"1208","severity":1,"message":"1209","line":880,"column":84,"nodeType":"1210","messageId":"1211","endLine":880,"endColumn":86},{"ruleId":"1208","severity":1,"message":"1209","line":880,"column":122,"nodeType":"1210","messageId":"1211","endLine":880,"endColumn":124},{"ruleId":"1283","severity":1,"message":"1284","line":912,"column":45,"nodeType":"1263","messageId":"1285","endLine":912,"endColumn":141,"fix":"1286"},{"ruleId":"1208","severity":1,"message":"1242","line":958,"column":76,"nodeType":"1210","messageId":"1211","endLine":958,"endColumn":78},{"ruleId":"1202","severity":1,"message":"1256","line":73,"column":17,"nodeType":"1191","messageId":"1204","endLine":73,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1242","line":180,"column":42,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":181,"column":43,"nodeType":"1210","messageId":"1211","endLine":181,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":49,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":210,"column":57,"nodeType":"1210","messageId":"1211","endLine":210,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":215,"column":55,"nodeType":"1210","messageId":"1211","endLine":215,"endColumn":57},{"ruleId":"1202","severity":1,"message":"1257","line":216,"column":17,"nodeType":"1191","messageId":"1204","endLine":216,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":242,"column":74,"nodeType":"1210","messageId":"1211","endLine":242,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":324,"column":81,"nodeType":"1210","messageId":"1211","endLine":324,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":329,"column":17,"nodeType":"1191","messageId":"1204","endLine":329,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":329,"column":77,"nodeType":"1210","messageId":"1211","endLine":329,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":334,"column":21,"nodeType":"1191","messageId":"1204","endLine":334,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":334,"column":81,"nodeType":"1210","messageId":"1211","endLine":334,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":394,"column":64,"nodeType":"1210","messageId":"1211","endLine":394,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":405,"column":63,"nodeType":"1210","messageId":"1211","endLine":405,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":406,"column":63,"nodeType":"1210","messageId":"1211","endLine":406,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":407,"column":63,"nodeType":"1210","messageId":"1211","endLine":407,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":408,"column":63,"nodeType":"1210","messageId":"1211","endLine":408,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":499,"column":106,"nodeType":"1210","messageId":"1211","endLine":499,"endColumn":108},{"ruleId":"1208","severity":1,"message":"1242","line":583,"column":76,"nodeType":"1210","messageId":"1211","endLine":583,"endColumn":78},{"ruleId":"1189","severity":1,"message":"1287","line":22,"column":13,"nodeType":"1191","messageId":"1192","endLine":22,"endColumn":25},{"ruleId":"1288","severity":1,"message":"1289","line":28,"column":36,"nodeType":"1191","messageId":"1290","endLine":28,"endColumn":44},{"ruleId":"1216","severity":1,"message":"1217","line":1,"column":22,"nodeType":"1218","messageId":"1219","endLine":1,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1292","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":10},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1206","line":6,"column":8,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":15,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1293","line":3,"column":61,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":68},{"ruleId":"1202","severity":1,"message":"1271","line":75,"column":17,"nodeType":"1191","messageId":"1204","endLine":75,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1271","line":81,"column":13,"nodeType":"1191","messageId":"1204","endLine":81,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":97,"column":33,"nodeType":"1210","messageId":"1211","endLine":97,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":100,"column":32,"nodeType":"1210","messageId":"1211","endLine":100,"endColumn":34},{"ruleId":"1208","severity":1,"message":"1242","line":157,"column":28,"nodeType":"1210","messageId":"1211","endLine":157,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":23,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":29,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":199,"column":18,"nodeType":"1210","messageId":"1211","endLine":199,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1242","line":209,"column":23,"nodeType":"1210","messageId":"1211","endLine":209,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1242","line":235,"column":35,"nodeType":"1210","messageId":"1211","endLine":235,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1242","line":269,"column":29,"nodeType":"1210","messageId":"1211","endLine":269,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":312,"column":71,"nodeType":"1210","messageId":"1211","endLine":312,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":312,"column":101,"nodeType":"1210","messageId":"1211","endLine":312,"endColumn":103},{"ruleId":"1208","severity":1,"message":"1209","line":312,"column":136,"nodeType":"1210","messageId":"1211","endLine":312,"endColumn":138},{"ruleId":"1189","severity":1,"message":"1272","line":427,"column":17,"nodeType":"1191","messageId":"1192","endLine":427,"endColumn":29},{"ruleId":"1212","severity":1,"message":"1213","line":430,"column":42,"nodeType":"1214","messageId":"1215","endLine":430,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":433,"column":34,"nodeType":"1210","messageId":"1211","endLine":433,"endColumn":36},{"ruleId":"1208","severity":1,"message":"1242","line":436,"column":48,"nodeType":"1210","messageId":"1211","endLine":436,"endColumn":50},{"ruleId":"1202","severity":1,"message":"1273","line":469,"column":21,"nodeType":"1191","messageId":"1204","endLine":469,"endColumn":31},{"ruleId":"1212","severity":1,"message":"1213","line":472,"column":50,"nodeType":"1214","messageId":"1215","endLine":472,"endColumn":52},{"ruleId":"1208","severity":1,"message":"1209","line":474,"column":42,"nodeType":"1210","messageId":"1211","endLine":474,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1242","line":477,"column":56,"nodeType":"1210","messageId":"1211","endLine":477,"endColumn":58},{"ruleId":"1189","severity":1,"message":"1294","line":579,"column":13,"nodeType":"1191","messageId":"1192","endLine":579,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1213","line":713,"column":41,"nodeType":"1214","messageId":"1215","endLine":713,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1209","line":894,"column":143,"nodeType":"1210","messageId":"1211","endLine":894,"endColumn":145},{"ruleId":"1208","severity":1,"message":"1242","line":920,"column":192,"nodeType":"1210","messageId":"1211","endLine":920,"endColumn":194},{"ruleId":"1233","severity":1,"message":"1234","line":964,"column":99,"nodeType":"1235","messageId":"1236","endLine":964,"endColumn":143},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":9,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":14},{"ruleId":"1208","severity":1,"message":"1242","line":44,"column":29,"nodeType":"1210","messageId":"1211","endLine":44,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1242","line":49,"column":28,"nodeType":"1210","messageId":"1211","endLine":49,"endColumn":30},{"ruleId":"1196","replacedBy":"1295"},{"ruleId":"1198","replacedBy":"1296"},{"ruleId":"1189","severity":1,"message":"1194","line":10,"column":7,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":18},{"ruleId":"1196","replacedBy":"1297"},{"ruleId":"1198","replacedBy":"1298"},{"ruleId":"1189","severity":1,"message":"1200","line":35,"column":10,"nodeType":"1191","messageId":"1192","endLine":35,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1201","line":43,"column":55,"nodeType":"1191","messageId":"1192","endLine":43,"endColumn":61},{"ruleId":"1202","severity":1,"message":"1203","line":58,"column":7,"nodeType":"1191","messageId":"1204","endLine":58,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1221","line":4,"column":21,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":36,"column":23,"nodeType":"1210","messageId":"1211","endLine":36,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":96,"column":21,"nodeType":"1210","messageId":"1211","endLine":96,"endColumn":23},{"ruleId":"1208","severity":1,"message":"1209","line":100,"column":27,"nodeType":"1210","messageId":"1211","endLine":100,"endColumn":29},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1243","line":7,"column":8,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":8,"column":1,"nodeType":"1246","messageId":"1211","endLine":11,"endColumn":2},{"ruleId":"1244","severity":1,"message":"1245","line":13,"column":1,"nodeType":"1246","messageId":"1211","endLine":16,"endColumn":2},{"ruleId":"1208","severity":1,"message":"1209","line":79,"column":33,"nodeType":"1210","messageId":"1211","endLine":79,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":82,"column":32,"nodeType":"1210","messageId":"1211","endLine":82,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1299","line":97,"column":13,"nodeType":"1191","messageId":"1192","endLine":97,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1300","line":98,"column":13,"nodeType":"1191","messageId":"1192","endLine":98,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1213","line":130,"column":39,"nodeType":"1214","messageId":"1215","endLine":130,"endColumn":41},{"ruleId":"1301","severity":1,"message":"1302","line":309,"column":124,"nodeType":"1210","messageId":"1303","endLine":309,"endColumn":125},{"ruleId":"1301","severity":1,"message":"1302","line":309,"column":132,"nodeType":"1210","messageId":"1303","endLine":309,"endColumn":133},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":9,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":18},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":113,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":115},{"ruleId":"1189","severity":1,"message":"1223","line":182,"column":21,"nodeType":"1191","messageId":"1192","endLine":182,"endColumn":29},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":15,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1293","line":3,"column":61,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":68},{"ruleId":"1202","severity":1,"message":"1271","line":78,"column":17,"nodeType":"1191","messageId":"1204","endLine":78,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1271","line":84,"column":13,"nodeType":"1191","messageId":"1204","endLine":84,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":100,"column":33,"nodeType":"1210","messageId":"1211","endLine":100,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":103,"column":32,"nodeType":"1210","messageId":"1211","endLine":103,"endColumn":34},{"ruleId":"1208","severity":1,"message":"1242","line":160,"column":28,"nodeType":"1210","messageId":"1211","endLine":160,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1209","line":180,"column":23,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":186,"column":29,"nodeType":"1210","messageId":"1211","endLine":186,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":202,"column":18,"nodeType":"1210","messageId":"1211","endLine":202,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1242","line":212,"column":23,"nodeType":"1210","messageId":"1211","endLine":212,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1242","line":238,"column":35,"nodeType":"1210","messageId":"1211","endLine":238,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1242","line":272,"column":29,"nodeType":"1210","messageId":"1211","endLine":272,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":315,"column":71,"nodeType":"1210","messageId":"1211","endLine":315,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":315,"column":101,"nodeType":"1210","messageId":"1211","endLine":315,"endColumn":103},{"ruleId":"1208","severity":1,"message":"1209","line":315,"column":136,"nodeType":"1210","messageId":"1211","endLine":315,"endColumn":138},{"ruleId":"1189","severity":1,"message":"1272","line":430,"column":17,"nodeType":"1191","messageId":"1192","endLine":430,"endColumn":29},{"ruleId":"1212","severity":1,"message":"1213","line":433,"column":42,"nodeType":"1214","messageId":"1215","endLine":433,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":436,"column":34,"nodeType":"1210","messageId":"1211","endLine":436,"endColumn":36},{"ruleId":"1208","severity":1,"message":"1242","line":439,"column":48,"nodeType":"1210","messageId":"1211","endLine":439,"endColumn":50},{"ruleId":"1202","severity":1,"message":"1273","line":472,"column":21,"nodeType":"1191","messageId":"1204","endLine":472,"endColumn":31},{"ruleId":"1212","severity":1,"message":"1213","line":475,"column":50,"nodeType":"1214","messageId":"1215","endLine":475,"endColumn":52},{"ruleId":"1208","severity":1,"message":"1209","line":477,"column":42,"nodeType":"1210","messageId":"1211","endLine":477,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1242","line":480,"column":56,"nodeType":"1210","messageId":"1211","endLine":480,"endColumn":58},{"ruleId":"1189","severity":1,"message":"1294","line":582,"column":13,"nodeType":"1191","messageId":"1192","endLine":582,"endColumn":20},{"ruleId":"1212","severity":1,"message":"1213","line":716,"column":41,"nodeType":"1214","messageId":"1215","endLine":716,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1209","line":897,"column":143,"nodeType":"1210","messageId":"1211","endLine":897,"endColumn":145},{"ruleId":"1208","severity":1,"message":"1242","line":923,"column":192,"nodeType":"1210","messageId":"1211","endLine":923,"endColumn":194},{"ruleId":"1233","severity":1,"message":"1234","line":967,"column":99,"nodeType":"1235","messageId":"1236","endLine":967,"endColumn":143},{"ruleId":"1189","severity":1,"message":"1260","line":13,"column":10,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":23},{"ruleId":"1208","severity":1,"message":"1209","line":518,"column":48,"nodeType":"1210","messageId":"1211","endLine":518,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1200","line":1,"column":15,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1232","line":2,"column":10,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":16},{"ruleId":"1233","severity":1,"message":"1234","line":274,"column":97,"nodeType":"1235","messageId":"1236","endLine":274,"endColumn":141},{"ruleId":"1244","severity":1,"message":"1245","line":8,"column":1,"nodeType":"1246","messageId":"1211","endLine":11,"endColumn":2},{"ruleId":"1189","severity":1,"message":"1269","line":13,"column":7,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":15},{"ruleId":"1212","severity":1,"message":"1213","line":80,"column":24,"nodeType":"1214","messageId":"1215","endLine":80,"endColumn":26},{"ruleId":"1208","severity":1,"message":"1242","line":82,"column":28,"nodeType":"1210","messageId":"1211","endLine":82,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1213","line":121,"column":51,"nodeType":"1214","messageId":"1215","endLine":121,"endColumn":53},{"ruleId":"1212","severity":1,"message":"1213","line":144,"column":41,"nodeType":"1214","messageId":"1215","endLine":144,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":189,"column":77,"nodeType":"1210","messageId":"1211","endLine":189,"endColumn":79},{"ruleId":"1208","severity":1,"message":"1242","line":209,"column":71,"nodeType":"1210","messageId":"1211","endLine":209,"endColumn":73},{"ruleId":"1212","severity":1,"message":"1213","line":221,"column":48,"nodeType":"1214","messageId":"1215","endLine":221,"endColumn":50},{"ruleId":"1212","severity":1,"message":"1213","line":261,"column":56,"nodeType":"1214","messageId":"1215","endLine":261,"endColumn":58},{"ruleId":"1212","severity":1,"message":"1213","line":292,"column":41,"nodeType":"1214","messageId":"1215","endLine":292,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1209","line":293,"column":69,"nodeType":"1210","messageId":"1211","endLine":293,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1266","line":373,"column":25,"nodeType":"1191","messageId":"1204","endLine":373,"endColumn":39},{"ruleId":"1202","severity":1,"message":"1266","line":384,"column":25,"nodeType":"1191","messageId":"1204","endLine":384,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":424,"column":61,"nodeType":"1210","messageId":"1211","endLine":424,"endColumn":63},{"ruleId":"1212","severity":1,"message":"1213","line":492,"column":31,"nodeType":"1214","messageId":"1215","endLine":492,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1268","line":558,"column":15,"nodeType":"1191","messageId":"1192","endLine":558,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":568,"column":47,"nodeType":"1214","messageId":"1215","endLine":568,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1213","line":573,"column":60,"nodeType":"1214","messageId":"1215","endLine":573,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":605,"column":60,"nodeType":"1214","messageId":"1215","endLine":605,"endColumn":62},{"ruleId":"1208","severity":1,"message":"1209","line":646,"column":47,"nodeType":"1210","messageId":"1211","endLine":646,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1242","line":646,"column":76,"nodeType":"1210","messageId":"1211","endLine":646,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":649,"column":47,"nodeType":"1210","messageId":"1211","endLine":649,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":652,"column":47,"nodeType":"1210","messageId":"1211","endLine":652,"endColumn":49},{"ruleId":"1189","severity":1,"message":"1270","line":689,"column":13,"nodeType":"1191","messageId":"1192","endLine":689,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1264","line":5,"column":27,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":39},{"ruleId":"1189","severity":1,"message":"1265","line":7,"column":24,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":37},{"ruleId":"1244","severity":1,"message":"1245","line":10,"column":1,"nodeType":"1246","messageId":"1211","endLine":13,"endColumn":2},{"ruleId":"1212","severity":1,"message":"1213","line":90,"column":24,"nodeType":"1214","messageId":"1215","endLine":90,"endColumn":26},{"ruleId":"1208","severity":1,"message":"1242","line":92,"column":28,"nodeType":"1210","messageId":"1211","endLine":92,"endColumn":30},{"ruleId":"1212","severity":1,"message":"1213","line":133,"column":51,"nodeType":"1214","messageId":"1215","endLine":133,"endColumn":53},{"ruleId":"1212","severity":1,"message":"1213","line":158,"column":41,"nodeType":"1214","messageId":"1215","endLine":158,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":214,"column":77,"nodeType":"1210","messageId":"1211","endLine":214,"endColumn":79},{"ruleId":"1208","severity":1,"message":"1242","line":234,"column":71,"nodeType":"1210","messageId":"1211","endLine":234,"endColumn":73},{"ruleId":"1202","severity":1,"message":"1266","line":304,"column":25,"nodeType":"1191","messageId":"1204","endLine":304,"endColumn":39},{"ruleId":"1202","severity":1,"message":"1266","line":316,"column":25,"nodeType":"1191","messageId":"1204","endLine":316,"endColumn":39},{"ruleId":"1208","severity":1,"message":"1209","line":341,"column":76,"nodeType":"1210","messageId":"1211","endLine":341,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1242","line":349,"column":74,"nodeType":"1210","messageId":"1211","endLine":349,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1242","line":356,"column":73,"nodeType":"1210","messageId":"1211","endLine":356,"endColumn":75},{"ruleId":"1208","severity":1,"message":"1209","line":357,"column":49,"nodeType":"1210","messageId":"1211","endLine":357,"endColumn":51},{"ruleId":"1212","severity":1,"message":"1213","line":425,"column":31,"nodeType":"1214","messageId":"1215","endLine":425,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1267","line":430,"column":17,"nodeType":"1191","messageId":"1192","endLine":430,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1209","line":436,"column":50,"nodeType":"1210","messageId":"1211","endLine":436,"endColumn":52},{"ruleId":"1189","severity":1,"message":"1268","line":485,"column":15,"nodeType":"1191","messageId":"1192","endLine":485,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":489,"column":37,"nodeType":"1214","messageId":"1215","endLine":489,"endColumn":39},{"ruleId":"1212","severity":1,"message":"1213","line":509,"column":48,"nodeType":"1214","messageId":"1215","endLine":509,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1268","line":571,"column":15,"nodeType":"1191","messageId":"1192","endLine":571,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":574,"column":37,"nodeType":"1214","messageId":"1215","endLine":574,"endColumn":39},{"ruleId":"1212","severity":1,"message":"1213","line":589,"column":48,"nodeType":"1214","messageId":"1215","endLine":589,"endColumn":50},{"ruleId":"1189","severity":1,"message":"1268","line":640,"column":15,"nodeType":"1191","messageId":"1192","endLine":640,"endColumn":24},{"ruleId":"1212","severity":1,"message":"1213","line":663,"column":47,"nodeType":"1214","messageId":"1215","endLine":663,"endColumn":49},{"ruleId":"1212","severity":1,"message":"1213","line":670,"column":60,"nodeType":"1214","messageId":"1215","endLine":670,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":704,"column":60,"nodeType":"1214","messageId":"1215","endLine":704,"endColumn":62},{"ruleId":"1208","severity":1,"message":"1209","line":745,"column":47,"nodeType":"1210","messageId":"1211","endLine":745,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1242","line":745,"column":76,"nodeType":"1210","messageId":"1211","endLine":745,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":748,"column":47,"nodeType":"1210","messageId":"1211","endLine":748,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":751,"column":47,"nodeType":"1210","messageId":"1211","endLine":751,"endColumn":49},{"ruleId":"1208","severity":1,"message":"1209","line":799,"column":96,"nodeType":"1210","messageId":"1211","endLine":799,"endColumn":98},{"ruleId":"1208","severity":1,"message":"1242","line":850,"column":87,"nodeType":"1210","messageId":"1211","endLine":850,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":853,"column":87,"nodeType":"1210","messageId":"1211","endLine":853,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":856,"column":87,"nodeType":"1210","messageId":"1211","endLine":856,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1242","line":858,"column":87,"nodeType":"1210","messageId":"1211","endLine":858,"endColumn":89},{"ruleId":"1208","severity":1,"message":"1209","line":866,"column":44,"nodeType":"1210","messageId":"1211","endLine":866,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1209","line":913,"column":44,"nodeType":"1210","messageId":"1211","endLine":913,"endColumn":46},{"ruleId":"1208","severity":1,"message":"1242","line":955,"column":43,"nodeType":"1210","messageId":"1211","endLine":955,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1242","line":955,"column":74,"nodeType":"1210","messageId":"1211","endLine":955,"endColumn":76},{"ruleId":"1233","severity":1,"message":"1234","line":958,"column":67,"nodeType":"1235","messageId":"1236","endLine":958,"endColumn":96},{"ruleId":"1208","severity":1,"message":"1209","line":1147,"column":93,"nodeType":"1210","messageId":"1211","endLine":1147,"endColumn":95},{"ruleId":"1202","severity":1,"message":"1256","line":73,"column":17,"nodeType":"1191","messageId":"1204","endLine":73,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1242","line":180,"column":42,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":181,"column":43,"nodeType":"1210","messageId":"1211","endLine":181,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":49,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":210,"column":57,"nodeType":"1210","messageId":"1211","endLine":210,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":215,"column":55,"nodeType":"1210","messageId":"1211","endLine":215,"endColumn":57},{"ruleId":"1202","severity":1,"message":"1257","line":216,"column":17,"nodeType":"1191","messageId":"1204","endLine":216,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":242,"column":74,"nodeType":"1210","messageId":"1211","endLine":242,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":324,"column":81,"nodeType":"1210","messageId":"1211","endLine":324,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":329,"column":17,"nodeType":"1191","messageId":"1204","endLine":329,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":329,"column":77,"nodeType":"1210","messageId":"1211","endLine":329,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":334,"column":21,"nodeType":"1191","messageId":"1204","endLine":334,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":334,"column":81,"nodeType":"1210","messageId":"1211","endLine":334,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":394,"column":64,"nodeType":"1210","messageId":"1211","endLine":394,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":405,"column":63,"nodeType":"1210","messageId":"1211","endLine":405,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":406,"column":63,"nodeType":"1210","messageId":"1211","endLine":406,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":407,"column":63,"nodeType":"1210","messageId":"1211","endLine":407,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":408,"column":63,"nodeType":"1210","messageId":"1211","endLine":408,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":499,"column":106,"nodeType":"1210","messageId":"1211","endLine":499,"endColumn":108},{"ruleId":"1208","severity":1,"message":"1242","line":583,"column":76,"nodeType":"1210","messageId":"1211","endLine":583,"endColumn":78},{"ruleId":"1189","severity":1,"message":"1276","line":3,"column":62,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":69},{"ruleId":"1202","severity":1,"message":"1256","line":97,"column":17,"nodeType":"1191","messageId":"1204","endLine":97,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1277","line":135,"column":17,"nodeType":"1191","messageId":"1192","endLine":135,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1278","line":155,"column":17,"nodeType":"1191","messageId":"1192","endLine":155,"endColumn":31},{"ruleId":"1202","severity":1,"message":"1279","line":174,"column":13,"nodeType":"1191","messageId":"1204","endLine":174,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1280","line":175,"column":13,"nodeType":"1191","messageId":"1204","endLine":175,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1281","line":198,"column":13,"nodeType":"1191","messageId":"1192","endLine":198,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1282","line":249,"column":23,"nodeType":"1191","messageId":"1192","endLine":249,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1242","line":379,"column":42,"nodeType":"1210","messageId":"1211","endLine":379,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":380,"column":43,"nodeType":"1210","messageId":"1211","endLine":380,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":386,"column":49,"nodeType":"1210","messageId":"1211","endLine":386,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":408,"column":57,"nodeType":"1210","messageId":"1211","endLine":408,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":413,"column":55,"nodeType":"1210","messageId":"1211","endLine":413,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":460,"column":74,"nodeType":"1210","messageId":"1211","endLine":460,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":545,"column":81,"nodeType":"1210","messageId":"1211","endLine":545,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":550,"column":17,"nodeType":"1191","messageId":"1204","endLine":550,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":550,"column":77,"nodeType":"1210","messageId":"1211","endLine":550,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":555,"column":21,"nodeType":"1191","messageId":"1204","endLine":555,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":555,"column":81,"nodeType":"1210","messageId":"1211","endLine":555,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":722,"column":64,"nodeType":"1210","messageId":"1211","endLine":722,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":731,"column":63,"nodeType":"1210","messageId":"1211","endLine":731,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":732,"column":63,"nodeType":"1210","messageId":"1211","endLine":732,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":733,"column":63,"nodeType":"1210","messageId":"1211","endLine":733,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":734,"column":63,"nodeType":"1210","messageId":"1211","endLine":734,"endColumn":65},{"ruleId":"1212","severity":1,"message":"1213","line":823,"column":65,"nodeType":"1214","messageId":"1215","endLine":823,"endColumn":67},{"ruleId":"1208","severity":1,"message":"1209","line":880,"column":84,"nodeType":"1210","messageId":"1211","endLine":880,"endColumn":86},{"ruleId":"1208","severity":1,"message":"1209","line":880,"column":122,"nodeType":"1210","messageId":"1211","endLine":880,"endColumn":124},{"ruleId":"1283","severity":1,"message":"1284","line":912,"column":45,"nodeType":"1263","messageId":"1285","endLine":912,"endColumn":141,"fix":"1304"},{"ruleId":"1208","severity":1,"message":"1242","line":958,"column":76,"nodeType":"1210","messageId":"1211","endLine":958,"endColumn":78},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":9,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":14},{"ruleId":"1208","severity":1,"message":"1242","line":44,"column":29,"nodeType":"1210","messageId":"1211","endLine":44,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1242","line":49,"column":28,"nodeType":"1210","messageId":"1211","endLine":49,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1242","line":32,"column":28,"nodeType":"1210","messageId":"1211","endLine":32,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1242","line":118,"column":46,"nodeType":"1210","messageId":"1211","endLine":118,"endColumn":48},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1208","severity":1,"message":"1242","line":80,"column":75,"nodeType":"1210","messageId":"1211","endLine":80,"endColumn":77},{"ruleId":"1208","severity":1,"message":"1242","line":96,"column":74,"nodeType":"1210","messageId":"1211","endLine":96,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":113,"column":36,"nodeType":"1210","messageId":"1211","endLine":113,"endColumn":38},{"ruleId":"1212","severity":1,"message":"1213","line":114,"column":62,"nodeType":"1214","messageId":"1215","endLine":114,"endColumn":64},{"ruleId":"1212","severity":1,"message":"1213","line":119,"column":60,"nodeType":"1214","messageId":"1215","endLine":119,"endColumn":62},{"ruleId":"1212","severity":1,"message":"1213","line":126,"column":29,"nodeType":"1214","messageId":"1215","endLine":126,"endColumn":31},{"ruleId":"1212","severity":1,"message":"1213","line":159,"column":31,"nodeType":"1214","messageId":"1215","endLine":159,"endColumn":33},{"ruleId":"1208","severity":1,"message":"1209","line":228,"column":45,"nodeType":"1210","messageId":"1211","endLine":228,"endColumn":47},{"ruleId":"1208","severity":1,"message":"1209","line":250,"column":45,"nodeType":"1210","messageId":"1211","endLine":250,"endColumn":47},{"ruleId":"1208","severity":1,"message":"1209","line":101,"column":203,"nodeType":"1210","messageId":"1211","endLine":101,"endColumn":205},{"ruleId":"1189","severity":1,"message":"1255","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":23},{"ruleId":"1202","severity":1,"message":"1256","line":75,"column":17,"nodeType":"1191","messageId":"1204","endLine":75,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1242","line":169,"column":42,"nodeType":"1210","messageId":"1211","endLine":169,"endColumn":44},{"ruleId":"1208","severity":1,"message":"1209","line":170,"column":43,"nodeType":"1210","messageId":"1211","endLine":170,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":176,"column":49,"nodeType":"1210","messageId":"1211","endLine":176,"endColumn":51},{"ruleId":"1208","severity":1,"message":"1242","line":201,"column":57,"nodeType":"1210","messageId":"1211","endLine":201,"endColumn":59},{"ruleId":"1208","severity":1,"message":"1242","line":206,"column":55,"nodeType":"1210","messageId":"1211","endLine":206,"endColumn":57},{"ruleId":"1202","severity":1,"message":"1257","line":207,"column":17,"nodeType":"1191","messageId":"1204","endLine":207,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":245,"column":74,"nodeType":"1210","messageId":"1211","endLine":245,"endColumn":76},{"ruleId":"1208","severity":1,"message":"1209","line":283,"column":81,"nodeType":"1210","messageId":"1211","endLine":283,"endColumn":83},{"ruleId":"1202","severity":1,"message":"1258","line":288,"column":17,"nodeType":"1191","messageId":"1204","endLine":288,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":288,"column":77,"nodeType":"1210","messageId":"1211","endLine":288,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1258","line":293,"column":21,"nodeType":"1191","messageId":"1204","endLine":293,"endColumn":29},{"ruleId":"1208","severity":1,"message":"1209","line":293,"column":81,"nodeType":"1210","messageId":"1211","endLine":293,"endColumn":83},{"ruleId":"1208","severity":1,"message":"1209","line":336,"column":64,"nodeType":"1210","messageId":"1211","endLine":336,"endColumn":66},{"ruleId":"1208","severity":1,"message":"1209","line":347,"column":63,"nodeType":"1210","messageId":"1211","endLine":347,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":348,"column":63,"nodeType":"1210","messageId":"1211","endLine":348,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":349,"column":63,"nodeType":"1210","messageId":"1211","endLine":349,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":350,"column":63,"nodeType":"1210","messageId":"1211","endLine":350,"endColumn":65},{"ruleId":"1208","severity":1,"message":"1209","line":467,"column":106,"nodeType":"1210","messageId":"1211","endLine":467,"endColumn":108},{"ruleId":"1208","severity":1,"message":"1242","line":540,"column":76,"nodeType":"1210","messageId":"1211","endLine":540,"endColumn":78},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1259","line":83,"column":13,"nodeType":"1191","messageId":"1192","endLine":83,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1242","line":143,"column":47,"nodeType":"1210","messageId":"1211","endLine":143,"endColumn":49},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":6,"column":1,"nodeType":"1246","messageId":"1211","endLine":10,"endColumn":2},{"ruleId":"1202","severity":1,"message":"1274","line":52,"column":17,"nodeType":"1191","messageId":"1204","endLine":52,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1292","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":10},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1291","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1206","line":6,"column":8,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1224","line":10,"column":8,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":95,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":97},{"ruleId":"1208","severity":1,"message":"1209","line":234,"column":94,"nodeType":"1210","messageId":"1211","endLine":234,"endColumn":96},{"ruleId":"1189","severity":1,"message":"1287","line":22,"column":13,"nodeType":"1191","messageId":"1192","endLine":22,"endColumn":25},{"ruleId":"1288","severity":1,"message":"1289","line":28,"column":36,"nodeType":"1191","messageId":"1290","endLine":28,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1275","line":3,"column":61,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":67},{"ruleId":"1202","severity":1,"message":"1271","line":65,"column":17,"nodeType":"1191","messageId":"1204","endLine":65,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1271","line":71,"column":13,"nodeType":"1191","messageId":"1204","endLine":71,"endColumn":17},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":19,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":21},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":31,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":33},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":43,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":45},{"ruleId":"1208","severity":1,"message":"1209","line":110,"column":55,"nodeType":"1210","messageId":"1211","endLine":110,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":120,"column":33,"nodeType":"1210","messageId":"1211","endLine":120,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":123,"column":32,"nodeType":"1210","messageId":"1211","endLine":123,"endColumn":34},{"ruleId":"1208","severity":1,"message":"1242","line":180,"column":28,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":30},{"ruleId":"1208","severity":1,"message":"1209","line":200,"column":23,"nodeType":"1210","messageId":"1211","endLine":200,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1209","line":206,"column":29,"nodeType":"1210","messageId":"1211","endLine":206,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":222,"column":18,"nodeType":"1210","messageId":"1211","endLine":222,"endColumn":20},{"ruleId":"1208","severity":1,"message":"1242","line":232,"column":23,"nodeType":"1210","messageId":"1211","endLine":232,"endColumn":25},{"ruleId":"1208","severity":1,"message":"1242","line":258,"column":35,"nodeType":"1210","messageId":"1211","endLine":258,"endColumn":37},{"ruleId":"1208","severity":1,"message":"1242","line":292,"column":29,"nodeType":"1210","messageId":"1211","endLine":292,"endColumn":31},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":71,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":73},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":101,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":103},{"ruleId":"1208","severity":1,"message":"1209","line":335,"column":136,"nodeType":"1210","messageId":"1211","endLine":335,"endColumn":138},{"ruleId":"1212","severity":1,"message":"1213","line":569,"column":41,"nodeType":"1214","messageId":"1215","endLine":569,"endColumn":43},{"ruleId":"1208","severity":1,"message":"1242","line":753,"column":196,"nodeType":"1210","messageId":"1211","endLine":753,"endColumn":198},{"ruleId":"1208","severity":1,"message":"1209","line":813,"column":72,"nodeType":"1210","messageId":"1211","endLine":813,"endColumn":74},{"ruleId":"1208","severity":1,"message":"1209","line":872,"column":72,"nodeType":"1210","messageId":"1211","endLine":872,"endColumn":74},{"ruleId":"1233","severity":1,"message":"1234","line":932,"column":99,"nodeType":"1235","messageId":"1236","endLine":932,"endColumn":143},{"ruleId":"1189","severity":1,"message":"1222","line":5,"column":52,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":61},{"ruleId":"1208","severity":1,"message":"1209","line":20,"column":12,"nodeType":"1210","messageId":"1211","endLine":20,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1244","severity":1,"message":"1245","line":6,"column":1,"nodeType":"1246","messageId":"1211","endLine":9,"endColumn":2},{"ruleId":"1208","severity":1,"message":"1209","line":39,"column":33,"nodeType":"1210","messageId":"1211","endLine":39,"endColumn":35},{"ruleId":"1208","severity":1,"message":"1209","line":42,"column":32,"nodeType":"1210","messageId":"1211","endLine":42,"endColumn":34},{"ruleId":"1212","severity":1,"message":"1213","line":83,"column":39,"nodeType":"1214","messageId":"1215","endLine":83,"endColumn":41},{"ruleId":"1189","severity":1,"message":"1225","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1261","severity":1,"message":"1262","line":109,"column":29,"nodeType":"1263","endLine":109,"endColumn":97},{"ruleId":"1261","severity":1,"message":"1262","line":115,"column":29,"nodeType":"1263","endLine":115,"endColumn":88},{"ruleId":"1216","severity":1,"message":"1217","line":2,"column":16,"nodeType":"1218","messageId":"1219","endLine":2,"endColumn":28},{"ruleId":"1189","severity":1,"message":"1220","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":18},{"ruleId":"1216","severity":1,"message":"1217","line":1,"column":14,"nodeType":"1218","messageId":"1219","endLine":1,"endColumn":26},{"ruleId":"1189","severity":1,"message":"1237","line":1,"column":10,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1238","line":3,"column":18,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1239","line":3,"column":25,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":36},{"ruleId":"1189","severity":1,"message":"1240","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1241","line":7,"column":8,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":12},{"ruleId":"1208","severity":1,"message":"1242","line":69,"column":39,"nodeType":"1210","messageId":"1211","endLine":69,"endColumn":41},{"ruleId":"1208","severity":1,"message":"1209","line":157,"column":76,"nodeType":"1210","messageId":"1211","endLine":157,"endColumn":78},{"ruleId":"1208","severity":1,"message":"1209","line":158,"column":56,"nodeType":"1210","messageId":"1211","endLine":158,"endColumn":58},{"ruleId":"1208","severity":1,"message":"1209","line":181,"column":61,"nodeType":"1210","messageId":"1211","endLine":181,"endColumn":63},{"ruleId":"1208","severity":1,"message":"1209","line":203,"column":58,"nodeType":"1210","messageId":"1211","endLine":203,"endColumn":60},{"ruleId":"1208","severity":1,"message":"1209","line":226,"column":62,"nodeType":"1210","messageId":"1211","endLine":226,"endColumn":64},{"ruleId":"1208","severity":1,"message":"1209","line":241,"column":56,"nodeType":"1210","messageId":"1211","endLine":241,"endColumn":58},{"ruleId":"1208","severity":1,"message":"1209","line":255,"column":55,"nodeType":"1210","messageId":"1211","endLine":255,"endColumn":57},{"ruleId":"1208","severity":1,"message":"1209","line":271,"column":56,"nodeType":"1210","messageId":"1211","endLine":271,"endColumn":58},"no-unused-vars","'REACT_APP_AUTH_DOMAIN' is assigned a value but never used.","Identifier","unusedVar","'REACT_APP_AUTH_CLIENT_ID' is assigned a value but never used.","'redirectUri' is assigned a value but never used.","'audience' is assigned a value but never used.","no-native-reassign",["1305"],"no-negated-in-lhs",["1306"],"'Component' is defined but never used.","'logout' is assigned a value but never used.","no-redeclare","'accessToken' is already defined.","redeclared","'data' is defined but never used.","'DatePicker' is defined but never used.","'Teachers' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'LessonType' is defined but never used.","'withRouter' is defined but never used.","'isLoading' is assigned a value but never used.","'response' is assigned a value but never used.","'Constants' is defined but never used.","'react' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["1305"],["1306"],"'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'extract' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'Prices' is defined but never used.","'Days' is defined but never used.","Expected '!==' and instead saw '!='.","'Chart' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","'stu' is assigned a value but never used.",["1305"],["1306"],["1305"],["1306"],"'ReactPDF' is defined but never used.",["1305"],["1306"],"'saveByteArray' is defined but never used.","'list' is already defined.","'year' is already defined.","'invoices' is already defined.","'filter' is assigned a value but never used.","'validateEmail' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ToggleButton' is defined but never used.","'faCheckCircle' is defined but never used.","'invoiceRecords' is already defined.","'res' is assigned a value but never used.","'numFruits' is assigned a value but never used.","'override' is assigned a value but never used.","'parents' is assigned a value but never used.","'date' is already defined.","'extraLessons' is assigned a value but never used.","'allLessons' is already defined.","'nextDay' is already defined.","'Toggle' is defined but never used.","'NavItem' is defined but never used.","'chosenParents' is assigned a value but never used.","'chosenStudents' is assigned a value but never used.","'fromDate' is already defined.","'toDate' is already defined.","'justSent' is assigned a value but never used.","'interval' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1307","text":"1308"},"'errorMessage' is assigned a value but never used.","no-self-assign","'response' is assigned to itself.","selfAssignment","'render' is defined but never used.","'qs' is defined but never used.","'Tooltip' is defined but never used.","'dateObj' is assigned a value but never used.",["1305"],["1306"],["1305"],["1306"],"'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"1309","text":"1308"},"no-global-assign","no-unsafe-negation",[32541,32541]," rel=\"noreferrer\"",[32541,32541]]